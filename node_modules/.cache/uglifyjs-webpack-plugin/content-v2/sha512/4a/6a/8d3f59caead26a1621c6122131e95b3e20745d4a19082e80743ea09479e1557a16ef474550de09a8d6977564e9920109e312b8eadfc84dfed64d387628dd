{"map":"{\"version\":3,\"sources\":[\"/Users/turing/docker_egg/docker_egg/node_modules/showdown/dist/showdown.js\"],\"names\":[\"__WEBPACK_AMD_DEFINE_RESULT__\",\"getDefaultOpts\",\"simple\",\"defaultOptions\",\"omitExtraWLInCodeBlocks\",\"defaultValue\",\"describe\",\"type\",\"noHeaderId\",\"prefixHeaderId\",\"rawPrefixHeaderId\",\"ghCompatibleHeaderId\",\"rawHeaderId\",\"headerLevelStart\",\"parseImgDimensions\",\"simplifiedAutoLink\",\"excludeTrailingPunctuationFromURLs\",\"literalMidWordUnderscores\",\"literalMidWordAsterisks\",\"strikethrough\",\"tables\",\"tablesHeaderId\",\"ghCodeBlocks\",\"tasklists\",\"smoothLivePreview\",\"smartIndentationFix\",\"description\",\"disableForced4SpacesIndentedSublists\",\"simpleLineBreaks\",\"requireSpaceBeforeHeadingText\",\"ghMentions\",\"ghMentionsLink\",\"encodeEmails\",\"openLinksInNewWindow\",\"backslashEscapesHTMLTags\",\"emoji\",\"underline\",\"completeHTMLDocument\",\"metadata\",\"splitAdjacentBlockquotes\",\"JSON\",\"parse\",\"stringify\",\"ret\",\"opt\",\"hasOwnProperty\",\"showdown\",\"parsers\",\"extensions\",\"globalOptions\",\"setFlavor\",\"flavor\",\"github\",\"original\",\"ghost\",\"vanilla\",\"allOn\",\"options\",\"allOptionsOn\",\"validate\",\"extension\",\"name\",\"errMsg\",\"valid\",\"error\",\"helper\",\"isArray\",\"i\",\"length\",\"baseMsg\",\"ext\",\"isString\",\"toLowerCase\",\"isUndefined\",\"listeners\",\"filter\",\"regex\",\"ln\",\"RegExp\",\"replace\",\"escapeCharactersCallback\",\"wholeMatch\",\"m1\",\"charCodeAt\",\"setOption\",\"key\",\"value\",\"this\",\"getOption\",\"getOptions\",\"resetOptions\",\"Error\",\"preset\",\"option\",\"getFlavor\",\"getFlavorOptions\",\"getDefaultOptions\",\"subParser\",\"func\",\"stdExtName\",\"validExtension\",\"getAllExtensions\",\"removeExtension\",\"resetExtensions\",\"validateExtension\",\"a\",\"String\",\"isFunction\",\"toString\",\"call\",\"Array\",\"forEach\",\"obj\",\"callback\",\"prop\",\"s\",\"escapeCharacters\",\"text\",\"charsToEscape\",\"afterBackslash\",\"regexString\",\"rgxFindMatchPos\",\"str\",\"left\",\"right\",\"flags\",\"t\",\"m\",\"start\",\"end\",\"f\",\"g\",\"indexOf\",\"x\",\"l\",\"pos\",\"exec\",\"test\",\"lastIndex\",\"index\",\"match\",\"push\",\"matchRecursiveRegExp\",\"matchPos\",\"results\",\"slice\",\"replaceRecursiveRegExp\",\"replacement\",\"repStr\",\"finalStr\",\"lng\",\"bits\",\"join\",\"regexIndexOf\",\"fromIndex\",\"substring\",\"search\",\"splitAtIndex\",\"encodeEmailAddress\",\"mail\",\"encode\",\"ch\",\"Math\",\"floor\",\"random\",\"r\",\"console\",\"warn\",\"msg\",\"alert\",\"log\",\"regexes\",\"asteriskDashAndColon\",\"emojis\",\"+1\",\"-1\",\"100\",\"1234\",\"1st_place_medal\",\"2nd_place_medal\",\"3rd_place_medal\",\"8ball\",\"ab\",\"abc\",\"abcd\",\"accept\",\"aerial_tramway\",\"airplane\",\"alarm_clock\",\"alembic\",\"alien\",\"ambulance\",\"amphora\",\"anchor\",\"angel\",\"anger\",\"angry\",\"anguished\",\"ant\",\"apple\",\"aquarius\",\"aries\",\"arrow_backward\",\"arrow_double_down\",\"arrow_double_up\",\"arrow_down\",\"arrow_down_small\",\"arrow_forward\",\"arrow_heading_down\",\"arrow_heading_up\",\"arrow_left\",\"arrow_lower_left\",\"arrow_lower_right\",\"arrow_right\",\"arrow_right_hook\",\"arrow_up\",\"arrow_up_down\",\"arrow_up_small\",\"arrow_upper_left\",\"arrow_upper_right\",\"arrows_clockwise\",\"arrows_counterclockwise\",\"art\",\"articulated_lorry\",\"artificial_satellite\",\"astonished\",\"athletic_shoe\",\"atm\",\"atom_symbol\",\"avocado\",\"b\",\"baby\",\"baby_bottle\",\"baby_chick\",\"baby_symbol\",\"back\",\"bacon\",\"badminton\",\"baggage_claim\",\"baguette_bread\",\"balance_scale\",\"balloon\",\"ballot_box\",\"ballot_box_with_check\",\"bamboo\",\"banana\",\"bangbang\",\"bank\",\"bar_chart\",\"barber\",\"baseball\",\"basketball\",\"basketball_man\",\"basketball_woman\",\"bat\",\"bath\",\"bathtub\",\"battery\",\"beach_umbrella\",\"bear\",\"bed\",\"bee\",\"beer\",\"beers\",\"beetle\",\"beginner\",\"bell\",\"bellhop_bell\",\"bento\",\"biking_man\",\"bike\",\"biking_woman\",\"bikini\",\"biohazard\",\"bird\",\"birthday\",\"black_circle\",\"black_flag\",\"black_heart\",\"black_joker\",\"black_large_square\",\"black_medium_small_square\",\"black_medium_square\",\"black_nib\",\"black_small_square\",\"black_square_button\",\"blonde_man\",\"blonde_woman\",\"blossom\",\"blowfish\",\"blue_book\",\"blue_car\",\"blue_heart\",\"blush\",\"boar\",\"boat\",\"bomb\",\"book\",\"bookmark\",\"bookmark_tabs\",\"books\",\"boom\",\"boot\",\"bouquet\",\"bowing_man\",\"bow_and_arrow\",\"bowing_woman\",\"bowling\",\"boxing_glove\",\"boy\",\"bread\",\"bride_with_veil\",\"bridge_at_night\",\"briefcase\",\"broken_heart\",\"bug\",\"building_construction\",\"bulb\",\"bullettrain_front\",\"bullettrain_side\",\"burrito\",\"bus\",\"business_suit_levitating\",\"busstop\",\"bust_in_silhouette\",\"busts_in_silhouette\",\"butterfly\",\"cactus\",\"cake\",\"calendar\",\"call_me_hand\",\"calling\",\"camel\",\"camera\",\"camera_flash\",\"camping\",\"cancer\",\"candle\",\"candy\",\"canoe\",\"capital_abcd\",\"capricorn\",\"car\",\"card_file_box\",\"card_index\",\"card_index_dividers\",\"carousel_horse\",\"carrot\",\"cat\",\"cat2\",\"cd\",\"chains\",\"champagne\",\"chart\",\"chart_with_downwards_trend\",\"chart_with_upwards_trend\",\"checkered_flag\",\"cheese\",\"cherries\",\"cherry_blossom\",\"chestnut\",\"chicken\",\"children_crossing\",\"chipmunk\",\"chocolate_bar\",\"christmas_tree\",\"church\",\"cinema\",\"circus_tent\",\"city_sunrise\",\"city_sunset\",\"cityscape\",\"cl\",\"clamp\",\"clap\",\"clapper\",\"classical_building\",\"clinking_glasses\",\"clipboard\",\"clock1\",\"clock10\",\"clock1030\",\"clock11\",\"clock1130\",\"clock12\",\"clock1230\",\"clock130\",\"clock2\",\"clock230\",\"clock3\",\"clock330\",\"clock4\",\"clock430\",\"clock5\",\"clock530\",\"clock6\",\"clock630\",\"clock7\",\"clock730\",\"clock8\",\"clock830\",\"clock9\",\"clock930\",\"closed_book\",\"closed_lock_with_key\",\"closed_umbrella\",\"cloud\",\"cloud_with_lightning\",\"cloud_with_lightning_and_rain\",\"cloud_with_rain\",\"cloud_with_snow\",\"clown_face\",\"clubs\",\"cocktail\",\"coffee\",\"coffin\",\"cold_sweat\",\"comet\",\"computer\",\"computer_mouse\",\"confetti_ball\",\"confounded\",\"confused\",\"congratulations\",\"construction\",\"construction_worker_man\",\"construction_worker_woman\",\"control_knobs\",\"convenience_store\",\"cookie\",\"cool\",\"policeman\",\"copyright\",\"corn\",\"couch_and_lamp\",\"couple\",\"couple_with_heart_woman_man\",\"couple_with_heart_man_man\",\"couple_with_heart_woman_woman\",\"couplekiss_man_man\",\"couplekiss_man_woman\",\"couplekiss_woman_woman\",\"cow\",\"cow2\",\"cowboy_hat_face\",\"crab\",\"crayon\",\"credit_card\",\"crescent_moon\",\"cricket\",\"crocodile\",\"croissant\",\"crossed_fingers\",\"crossed_flags\",\"crossed_swords\",\"crown\",\"cry\",\"crying_cat_face\",\"crystal_ball\",\"cucumber\",\"cupid\",\"curly_loop\",\"currency_exchange\",\"curry\",\"custard\",\"customs\",\"cyclone\",\"dagger\",\"dancer\",\"dancing_women\",\"dancing_men\",\"dango\",\"dark_sunglasses\",\"dart\",\"dash\",\"date\",\"deciduous_tree\",\"deer\",\"department_store\",\"derelict_house\",\"desert\",\"desert_island\",\"desktop_computer\",\"male_detective\",\"diamond_shape_with_a_dot_inside\",\"diamonds\",\"disappointed\",\"disappointed_relieved\",\"dizzy\",\"dizzy_face\",\"do_not_litter\",\"dog\",\"dog2\",\"dollar\",\"dolls\",\"dolphin\",\"door\",\"doughnut\",\"dove\",\"dragon\",\"dragon_face\",\"dress\",\"dromedary_camel\",\"drooling_face\",\"droplet\",\"drum\",\"duck\",\"dvd\",\"e-mail\",\"eagle\",\"ear\",\"ear_of_rice\",\"earth_africa\",\"earth_americas\",\"earth_asia\",\"egg\",\"eggplant\",\"eight_pointed_black_star\",\"eight_spoked_asterisk\",\"electric_plug\",\"elephant\",\"email\",\"envelope_with_arrow\",\"euro\",\"european_castle\",\"european_post_office\",\"evergreen_tree\",\"exclamation\",\"expressionless\",\"eye\",\"eye_speech_bubble\",\"eyeglasses\",\"eyes\",\"face_with_head_bandage\",\"face_with_thermometer\",\"fist_oncoming\",\"factory\",\"fallen_leaf\",\"family_man_woman_boy\",\"family_man_boy\",\"family_man_boy_boy\",\"family_man_girl\",\"family_man_girl_boy\",\"family_man_girl_girl\",\"family_man_man_boy\",\"family_man_man_boy_boy\",\"family_man_man_girl\",\"family_man_man_girl_boy\",\"family_man_man_girl_girl\",\"family_man_woman_boy_boy\",\"family_man_woman_girl\",\"family_man_woman_girl_boy\",\"family_man_woman_girl_girl\",\"family_woman_boy\",\"family_woman_boy_boy\",\"family_woman_girl\",\"family_woman_girl_boy\",\"family_woman_girl_girl\",\"family_woman_woman_boy\",\"family_woman_woman_boy_boy\",\"family_woman_woman_girl\",\"family_woman_woman_girl_boy\",\"family_woman_woman_girl_girl\",\"fast_forward\",\"fax\",\"fearful\",\"feet\",\"female_detective\",\"ferris_wheel\",\"ferry\",\"field_hockey\",\"file_cabinet\",\"file_folder\",\"film_projector\",\"film_strip\",\"fire\",\"fire_engine\",\"fireworks\",\"first_quarter_moon\",\"first_quarter_moon_with_face\",\"fish\",\"fish_cake\",\"fishing_pole_and_fish\",\"fist_raised\",\"fist_left\",\"fist_right\",\"flashlight\",\"fleur_de_lis\",\"flight_arrival\",\"flight_departure\",\"floppy_disk\",\"flower_playing_cards\",\"flushed\",\"fog\",\"foggy\",\"football\",\"footprints\",\"fork_and_knife\",\"fountain\",\"fountain_pen\",\"four_leaf_clover\",\"fox_face\",\"framed_picture\",\"free\",\"fried_egg\",\"fried_shrimp\",\"fries\",\"frog\",\"frowning\",\"frowning_face\",\"frowning_man\",\"frowning_woman\",\"middle_finger\",\"fuelpump\",\"full_moon\",\"full_moon_with_face\",\"funeral_urn\",\"game_die\",\"gear\",\"gem\",\"gemini\",\"gift\",\"gift_heart\",\"girl\",\"globe_with_meridians\",\"goal_net\",\"goat\",\"golf\",\"golfing_man\",\"golfing_woman\",\"gorilla\",\"grapes\",\"green_apple\",\"green_book\",\"green_heart\",\"green_salad\",\"grey_exclamation\",\"grey_question\",\"grimacing\",\"grin\",\"grinning\",\"guardsman\",\"guardswoman\",\"guitar\",\"gun\",\"haircut_woman\",\"haircut_man\",\"hamburger\",\"hammer\",\"hammer_and_pick\",\"hammer_and_wrench\",\"hamster\",\"hand\",\"handbag\",\"handshake\",\"hankey\",\"hatched_chick\",\"hatching_chick\",\"headphones\",\"hear_no_evil\",\"heart\",\"heart_decoration\",\"heart_eyes\",\"heart_eyes_cat\",\"heartbeat\",\"heartpulse\",\"hearts\",\"heavy_check_mark\",\"heavy_division_sign\",\"heavy_dollar_sign\",\"heavy_heart_exclamation\",\"heavy_minus_sign\",\"heavy_multiplication_x\",\"heavy_plus_sign\",\"helicopter\",\"herb\",\"hibiscus\",\"high_brightness\",\"high_heel\",\"hocho\",\"hole\",\"honey_pot\",\"horse\",\"horse_racing\",\"hospital\",\"hot_pepper\",\"hotdog\",\"hotel\",\"hotsprings\",\"hourglass\",\"hourglass_flowing_sand\",\"house\",\"house_with_garden\",\"houses\",\"hugs\",\"hushed\",\"ice_cream\",\"ice_hockey\",\"ice_skate\",\"icecream\",\"id\",\"ideograph_advantage\",\"imp\",\"inbox_tray\",\"incoming_envelope\",\"tipping_hand_woman\",\"information_source\",\"innocent\",\"interrobang\",\"iphone\",\"izakaya_lantern\",\"jack_o_lantern\",\"japan\",\"japanese_castle\",\"japanese_goblin\",\"japanese_ogre\",\"jeans\",\"joy\",\"joy_cat\",\"joystick\",\"kaaba\",\"keyboard\",\"keycap_ten\",\"kick_scooter\",\"kimono\",\"kiss\",\"kissing\",\"kissing_cat\",\"kissing_closed_eyes\",\"kissing_heart\",\"kissing_smiling_eyes\",\"kiwi_fruit\",\"koala\",\"koko\",\"label\",\"large_blue_circle\",\"large_blue_diamond\",\"large_orange_diamond\",\"last_quarter_moon\",\"last_quarter_moon_with_face\",\"latin_cross\",\"laughing\",\"leaves\",\"ledger\",\"left_luggage\",\"left_right_arrow\",\"leftwards_arrow_with_hook\",\"lemon\",\"leo\",\"leopard\",\"level_slider\",\"libra\",\"light_rail\",\"link\",\"lion\",\"lips\",\"lipstick\",\"lizard\",\"lock\",\"lock_with_ink_pen\",\"lollipop\",\"loop\",\"loud_sound\",\"loudspeaker\",\"love_hotel\",\"love_letter\",\"low_brightness\",\"lying_face\",\"mag\",\"mag_right\",\"mahjong\",\"mailbox\",\"mailbox_closed\",\"mailbox_with_mail\",\"mailbox_with_no_mail\",\"man\",\"man_artist\",\"man_astronaut\",\"man_cartwheeling\",\"man_cook\",\"man_dancing\",\"man_facepalming\",\"man_factory_worker\",\"man_farmer\",\"man_firefighter\",\"man_health_worker\",\"man_in_tuxedo\",\"man_judge\",\"man_juggling\",\"man_mechanic\",\"man_office_worker\",\"man_pilot\",\"man_playing_handball\",\"man_playing_water_polo\",\"man_scientist\",\"man_shrugging\",\"man_singer\",\"man_student\",\"man_teacher\",\"man_technologist\",\"man_with_gua_pi_mao\",\"man_with_turban\",\"tangerine\",\"mans_shoe\",\"mantelpiece_clock\",\"maple_leaf\",\"martial_arts_uniform\",\"mask\",\"massage_woman\",\"massage_man\",\"meat_on_bone\",\"medal_military\",\"medal_sports\",\"mega\",\"melon\",\"memo\",\"men_wrestling\",\"menorah\",\"mens\",\"metal\",\"metro\",\"microphone\",\"microscope\",\"milk_glass\",\"milky_way\",\"minibus\",\"minidisc\",\"mobile_phone_off\",\"money_mouth_face\",\"money_with_wings\",\"moneybag\",\"monkey\",\"monkey_face\",\"monorail\",\"moon\",\"mortar_board\",\"mosque\",\"motor_boat\",\"motor_scooter\",\"motorcycle\",\"motorway\",\"mount_fuji\",\"mountain\",\"mountain_biking_man\",\"mountain_biking_woman\",\"mountain_cableway\",\"mountain_railway\",\"mountain_snow\",\"mouse\",\"mouse2\",\"movie_camera\",\"moyai\",\"mrs_claus\",\"muscle\",\"mushroom\",\"musical_keyboard\",\"musical_note\",\"musical_score\",\"mute\",\"nail_care\",\"name_badge\",\"national_park\",\"nauseated_face\",\"necktie\",\"negative_squared_cross_mark\",\"nerd_face\",\"neutral_face\",\"new\",\"new_moon\",\"new_moon_with_face\",\"newspaper\",\"newspaper_roll\",\"next_track_button\",\"ng\",\"no_good_man\",\"no_good_woman\",\"night_with_stars\",\"no_bell\",\"no_bicycles\",\"no_entry\",\"no_entry_sign\",\"no_mobile_phones\",\"no_mouth\",\"no_pedestrians\",\"no_smoking\",\"non-potable_water\",\"nose\",\"notebook\",\"notebook_with_decorative_cover\",\"notes\",\"nut_and_bolt\",\"o\",\"o2\",\"ocean\",\"octopus\",\"oden\",\"office\",\"oil_drum\",\"ok\",\"ok_hand\",\"ok_man\",\"ok_woman\",\"old_key\",\"older_man\",\"older_woman\",\"om\",\"on\",\"oncoming_automobile\",\"oncoming_bus\",\"oncoming_police_car\",\"oncoming_taxi\",\"open_file_folder\",\"open_hands\",\"open_mouth\",\"open_umbrella\",\"ophiuchus\",\"orange_book\",\"orthodox_cross\",\"outbox_tray\",\"owl\",\"ox\",\"package\",\"page_facing_up\",\"page_with_curl\",\"pager\",\"paintbrush\",\"palm_tree\",\"pancakes\",\"panda_face\",\"paperclip\",\"paperclips\",\"parasol_on_ground\",\"parking\",\"part_alternation_mark\",\"partly_sunny\",\"passenger_ship\",\"passport_control\",\"pause_button\",\"peace_symbol\",\"peach\",\"peanuts\",\"pear\",\"pen\",\"pencil2\",\"penguin\",\"pensive\",\"performing_arts\",\"persevere\",\"person_fencing\",\"pouting_woman\",\"phone\",\"pick\",\"pig\",\"pig2\",\"pig_nose\",\"pill\",\"pineapple\",\"ping_pong\",\"pisces\",\"pizza\",\"place_of_worship\",\"plate_with_cutlery\",\"play_or_pause_button\",\"point_down\",\"point_left\",\"point_right\",\"point_up\",\"point_up_2\",\"police_car\",\"policewoman\",\"poodle\",\"popcorn\",\"post_office\",\"postal_horn\",\"postbox\",\"potable_water\",\"potato\",\"pouch\",\"poultry_leg\",\"pound\",\"rage\",\"pouting_cat\",\"pouting_man\",\"pray\",\"prayer_beads\",\"pregnant_woman\",\"previous_track_button\",\"prince\",\"princess\",\"printer\",\"purple_heart\",\"purse\",\"pushpin\",\"put_litter_in_its_place\",\"question\",\"rabbit\",\"rabbit2\",\"racehorse\",\"racing_car\",\"radio\",\"radio_button\",\"radioactive\",\"railway_car\",\"railway_track\",\"rainbow\",\"rainbow_flag\",\"raised_back_of_hand\",\"raised_hand_with_fingers_splayed\",\"raised_hands\",\"raising_hand_woman\",\"raising_hand_man\",\"ram\",\"ramen\",\"rat\",\"record_button\",\"recycle\",\"red_circle\",\"registered\",\"relaxed\",\"relieved\",\"reminder_ribbon\",\"repeat\",\"repeat_one\",\"rescue_worker_helmet\",\"restroom\",\"revolving_hearts\",\"rewind\",\"rhinoceros\",\"ribbon\",\"rice\",\"rice_ball\",\"rice_cracker\",\"rice_scene\",\"right_anger_bubble\",\"ring\",\"robot\",\"rocket\",\"rofl\",\"roll_eyes\",\"roller_coaster\",\"rooster\",\"rose\",\"rosette\",\"rotating_light\",\"round_pushpin\",\"rowing_man\",\"rowing_woman\",\"rugby_football\",\"running_man\",\"running_shirt_with_sash\",\"running_woman\",\"sa\",\"sagittarius\",\"sake\",\"sandal\",\"santa\",\"satellite\",\"saxophone\",\"school\",\"school_satchel\",\"scissors\",\"scorpion\",\"scorpius\",\"scream\",\"scream_cat\",\"scroll\",\"seat\",\"secret\",\"see_no_evil\",\"seedling\",\"selfie\",\"shallow_pan_of_food\",\"shamrock\",\"shark\",\"shaved_ice\",\"sheep\",\"shell\",\"shield\",\"shinto_shrine\",\"ship\",\"shirt\",\"shopping\",\"shopping_cart\",\"shower\",\"shrimp\",\"signal_strength\",\"six_pointed_star\",\"ski\",\"skier\",\"skull\",\"skull_and_crossbones\",\"sleeping\",\"sleeping_bed\",\"sleepy\",\"slightly_frowning_face\",\"slightly_smiling_face\",\"slot_machine\",\"small_airplane\",\"small_blue_diamond\",\"small_orange_diamond\",\"small_red_triangle\",\"small_red_triangle_down\",\"smile\",\"smile_cat\",\"smiley\",\"smiley_cat\",\"smiling_imp\",\"smirk\",\"smirk_cat\",\"smoking\",\"snail\",\"snake\",\"sneezing_face\",\"snowboarder\",\"snowflake\",\"snowman\",\"snowman_with_snow\",\"sob\",\"soccer\",\"soon\",\"sos\",\"sound\",\"space_invader\",\"spades\",\"spaghetti\",\"sparkle\",\"sparkler\",\"sparkles\",\"sparkling_heart\",\"speak_no_evil\",\"speaker\",\"speaking_head\",\"speech_balloon\",\"speedboat\",\"spider\",\"spider_web\",\"spiral_calendar\",\"spiral_notepad\",\"spoon\",\"squid\",\"stadium\",\"star\",\"star2\",\"star_and_crescent\",\"star_of_david\",\"stars\",\"station\",\"statue_of_liberty\",\"steam_locomotive\",\"stew\",\"stop_button\",\"stop_sign\",\"stopwatch\",\"straight_ruler\",\"strawberry\",\"stuck_out_tongue\",\"stuck_out_tongue_closed_eyes\",\"stuck_out_tongue_winking_eye\",\"studio_microphone\",\"stuffed_flatbread\",\"sun_behind_large_cloud\",\"sun_behind_rain_cloud\",\"sun_behind_small_cloud\",\"sun_with_face\",\"sunflower\",\"sunglasses\",\"sunny\",\"sunrise\",\"sunrise_over_mountains\",\"surfing_man\",\"surfing_woman\",\"sushi\",\"suspension_railway\",\"sweat\",\"sweat_drops\",\"sweat_smile\",\"sweet_potato\",\"swimming_man\",\"swimming_woman\",\"symbols\",\"synagogue\",\"syringe\",\"taco\",\"tada\",\"tanabata_tree\",\"taurus\",\"taxi\",\"tea\",\"telephone_receiver\",\"telescope\",\"tennis\",\"tent\",\"thermometer\",\"thinking\",\"thought_balloon\",\"ticket\",\"tickets\",\"tiger\",\"tiger2\",\"timer_clock\",\"tipping_hand_man\",\"tired_face\",\"tm\",\"toilet\",\"tokyo_tower\",\"tomato\",\"tongue\",\"top\",\"tophat\",\"tornado\",\"trackball\",\"tractor\",\"traffic_light\",\"train\",\"train2\",\"tram\",\"triangular_flag_on_post\",\"triangular_ruler\",\"trident\",\"triumph\",\"trolleybus\",\"trophy\",\"tropical_drink\",\"tropical_fish\",\"truck\",\"trumpet\",\"tulip\",\"tumbler_glass\",\"turkey\",\"turtle\",\"tv\",\"twisted_rightwards_arrows\",\"two_hearts\",\"two_men_holding_hands\",\"two_women_holding_hands\",\"u5272\",\"u5408\",\"u55b6\",\"u6307\",\"u6708\",\"u6709\",\"u6e80\",\"u7121\",\"u7533\",\"u7981\",\"u7a7a\",\"umbrella\",\"unamused\",\"underage\",\"unicorn\",\"unlock\",\"up\",\"upside_down_face\",\"v\",\"vertical_traffic_light\",\"vhs\",\"vibration_mode\",\"video_camera\",\"video_game\",\"violin\",\"virgo\",\"volcano\",\"volleyball\",\"vs\",\"vulcan_salute\",\"walking_man\",\"walking_woman\",\"waning_crescent_moon\",\"waning_gibbous_moon\",\"warning\",\"wastebasket\",\"watch\",\"water_buffalo\",\"watermelon\",\"wave\",\"wavy_dash\",\"waxing_crescent_moon\",\"wc\",\"weary\",\"wedding\",\"weight_lifting_man\",\"weight_lifting_woman\",\"whale\",\"whale2\",\"wheel_of_dharma\",\"wheelchair\",\"white_check_mark\",\"white_circle\",\"white_flag\",\"white_flower\",\"white_large_square\",\"white_medium_small_square\",\"white_medium_square\",\"white_small_square\",\"white_square_button\",\"wilted_flower\",\"wind_chime\",\"wind_face\",\"wine_glass\",\"wink\",\"wolf\",\"woman\",\"woman_artist\",\"woman_astronaut\",\"woman_cartwheeling\",\"woman_cook\",\"woman_facepalming\",\"woman_factory_worker\",\"woman_farmer\",\"woman_firefighter\",\"woman_health_worker\",\"woman_judge\",\"woman_juggling\",\"woman_mechanic\",\"woman_office_worker\",\"woman_pilot\",\"woman_playing_handball\",\"woman_playing_water_polo\",\"woman_scientist\",\"woman_shrugging\",\"woman_singer\",\"woman_student\",\"woman_teacher\",\"woman_technologist\",\"woman_with_turban\",\"womans_clothes\",\"womans_hat\",\"women_wrestling\",\"womens\",\"world_map\",\"worried\",\"wrench\",\"writing_hand\",\"yellow_heart\",\"yen\",\"yin_yang\",\"yum\",\"zap\",\"zipper_mouth_face\",\"zzz\",\"octocat\",\"Converter\",\"converterOptions\",\"langExtensions\",\"outputModifiers\",\"setConvFlavor\",\"parsed\",\"raw\",\"format\",\"_parseExtension\",\"legacyExtensionLoading\",\"validExt\",\"listen\",\"gOpt\",\"_constructor\",\"_dispatch\",\"evtName\",\"globals\",\"ei\",\"nText\",\"makeHtml\",\"gHtmlBlocks\",\"gHtmlMdBlocks\",\"gHtmlSpans\",\"gUrls\",\"gTitles\",\"gDimensions\",\"gListLevel\",\"hashLinkCounts\",\"converter\",\"rsp\",\"rgx\",\"rTrimInputText\",\"addExtension\",\"useExtension\",\"extensionName\",\"splice\",\"language\",\"output\",\"getMetadata\",\"getMetadataFormat\",\"_setMetadataPair\",\"_setMetadataFormat\",\"_setMetadataRaw\",\"writeAnchorTag\",\"linkText\",\"linkId\",\"url\",\"m5\",\"m6\",\"title\",\"result\",\"wm\",\"st\",\"escape\",\"mentions\",\"username\",\"lnk\",\"target\",\"simpleURLRegex\",\"simpleURLRegex2\",\"delimUrlRegex\",\"simpleMailRegex\",\"delimMailRegex\",\"replaceLink\",\"leadingMagicChars\",\"m2\",\"m3\",\"trailingPunctuation\",\"trailingMagicChars\",\"lnkTxt\",\"append\",\"lmc\",\"tmc\",\"replaceMail\",\"href\",\"bq\",\"pre\",\"codeblock\",\"nextChar\",\"c\",\"doctype\",\"doctypeParsed\",\"charset\",\"lang\",\"meta\",\"trim\",\"leadingText\",\"numSpaces\",\"emojiCode\",\"delim\",\"blockText\",\"blockTags\",\"repFunc\",\"txt\",\"inside\",\"opTagPos\",\"rgx1\",\"patLeft\",\"patRight\",\"subTexts\",\"newSubText1\",\"concat\",\"hashHTMLSpan\",\"html\",\"repText\",\"limit\",\"num\",\"$1\",\"isNaN\",\"parseInt\",\"setextRegexH1\",\"setextRegexH2\",\"spanGamut\",\"hID\",\"headerId\",\"hashBlock\",\"matchFound\",\"hLevel\",\"atxStyle\",\"prefix\",\"customizedHeaderId\",\"hText\",\"span\",\"header\",\"writeImageTag\",\"altText\",\"width\",\"height\",\"gDims\",\"parseInside\",\"lead\",\"processListItems\",\"listStr\",\"trimTrailing\",\"isParagraphed\",\"m4\",\"taskbtn\",\"checked\",\"item\",\"bulletStyle\",\"otp\",\"wm2\",\"styleStartNumber\",\"list\",\"listType\",\"res\",\"parseConsecutiveLists\",\"olRgx\",\"ulRgx\",\"counterRxg\",\"parseCL\",\"style\",\"parseMetadataContents\",\"content\",\"wholematch\",\"grafs\",\"split\",\"grafsOut\",\"grafsOutIt\",\"codeFlag\",\"$2\",\"re\",\"replaceFunc\",\"blankLines\",\"parseCells\",\"cell\",\"parseTable\",\"rawTable\",\"tableLines\",\"sLine\",\"rawHeaders\",\"map\",\"rawStyles\",\"rawCells\",\"headers\",\"styles\",\"cells\",\"shift\",\"tableHeaderId\",\"row\",\"ii\",\"tb\",\"tblLgn\",\"buildTable\",\"charCodeToReplace\",\"fromCharCode\",\"undefined\",\"exports\",\"__webpack_require__\",\"module\"],\"mappings\":\"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\",\"sourcesContent\":[\";/*! showdown v 1.8.7 - 16-10-2018 */\\r\\n(function(){\\r\\n/**\\n * Created by Tivie on 13-07-2015.\\n */\\n\\nfunction getDefaultOpts (simple) {\\n  'use strict';\\n\\n  var defaultOptions = {\\n    omitExtraWLInCodeBlocks: {\\n      defaultValue: false,\\n      describe: 'Omit the default extra whiteline added to code blocks',\\n      type: 'boolean'\\n    },\\n    noHeaderId: {\\n      defaultValue: false,\\n      describe: 'Turn on/off generated header id',\\n      type: 'boolean'\\n    },\\n    prefixHeaderId: {\\n      defaultValue: false,\\n      describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \\\\'section-\\\\' prefix',\\n      type: 'string'\\n    },\\n    rawPrefixHeaderId: {\\n      defaultValue: false,\\n      describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \\\" char is used in the prefix)',\\n      type: 'boolean'\\n    },\\n    ghCompatibleHeaderId: {\\n      defaultValue: false,\\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\\n      type: 'boolean'\\n    },\\n    rawHeaderId: {\\n      defaultValue: false,\\n      describe: 'Remove only spaces, \\\\' and \\\" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',\\n      type: 'boolean'\\n    },\\n    headerLevelStart: {\\n      defaultValue: false,\\n      describe: 'The header blocks level start',\\n      type: 'integer'\\n    },\\n    parseImgDimensions: {\\n      defaultValue: false,\\n      describe: 'Turn on/off image dimension parsing',\\n      type: 'boolean'\\n    },\\n    simplifiedAutoLink: {\\n      defaultValue: false,\\n      describe: 'Turn on/off GFM autolink style',\\n      type: 'boolean'\\n    },\\n    excludeTrailingPunctuationFromURLs: {\\n      defaultValue: false,\\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\\n      type: 'boolean'\\n    },\\n    literalMidWordUnderscores: {\\n      defaultValue: false,\\n      describe: 'Parse midword underscores as literal underscores',\\n      type: 'boolean'\\n    },\\n    literalMidWordAsterisks: {\\n      defaultValue: false,\\n      describe: 'Parse midword asterisks as literal asterisks',\\n      type: 'boolean'\\n    },\\n    strikethrough: {\\n      defaultValue: false,\\n      describe: 'Turn on/off strikethrough support',\\n      type: 'boolean'\\n    },\\n    tables: {\\n      defaultValue: false,\\n      describe: 'Turn on/off tables support',\\n      type: 'boolean'\\n    },\\n    tablesHeaderId: {\\n      defaultValue: false,\\n      describe: 'Add an id to table headers',\\n      type: 'boolean'\\n    },\\n    ghCodeBlocks: {\\n      defaultValue: true,\\n      describe: 'Turn on/off GFM fenced code blocks support',\\n      type: 'boolean'\\n    },\\n    tasklists: {\\n      defaultValue: false,\\n      describe: 'Turn on/off GFM tasklist support',\\n      type: 'boolean'\\n    },\\n    smoothLivePreview: {\\n      defaultValue: false,\\n      describe: 'Prevents weird effects in live previews due to incomplete input',\\n      type: 'boolean'\\n    },\\n    smartIndentationFix: {\\n      defaultValue: false,\\n      description: 'Tries to smartly fix indentation in es6 strings',\\n      type: 'boolean'\\n    },\\n    disableForced4SpacesIndentedSublists: {\\n      defaultValue: false,\\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\\n      type: 'boolean'\\n    },\\n    simpleLineBreaks: {\\n      defaultValue: false,\\n      description: 'Parses simple line breaks as <br> (GFM Style)',\\n      type: 'boolean'\\n    },\\n    requireSpaceBeforeHeadingText: {\\n      defaultValue: false,\\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\\n      type: 'boolean'\\n    },\\n    ghMentions: {\\n      defaultValue: false,\\n      description: 'Enables github @mentions',\\n      type: 'boolean'\\n    },\\n    ghMentionsLink: {\\n      defaultValue: 'https://github.com/{u}',\\n      description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',\\n      type: 'string'\\n    },\\n    encodeEmails: {\\n      defaultValue: true,\\n      description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',\\n      type: 'boolean'\\n    },\\n    openLinksInNewWindow: {\\n      defaultValue: false,\\n      description: 'Open all links in new windows',\\n      type: 'boolean'\\n    },\\n    backslashEscapesHTMLTags: {\\n      defaultValue: false,\\n      description: 'Support for HTML Tag escaping. ex: \\\\<div>foo\\\\</div>',\\n      type: 'boolean'\\n    },\\n    emoji: {\\n      defaultValue: false,\\n      description: 'Enable emoji support. Ex: `this is a :smile: emoji`',\\n      type: 'boolean'\\n    },\\n    underline: {\\n      defaultValue: false,\\n      description: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',\\n      type: 'boolean'\\n    },\\n    completeHTMLDocument: {\\n      defaultValue: false,\\n      description: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',\\n      type: 'boolean'\\n    },\\n    metadata: {\\n      defaultValue: false,\\n      description: 'Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).',\\n      type: 'boolean'\\n    },\\n    splitAdjacentBlockquotes: {\\n      defaultValue: false,\\n      description: 'Split adjacent blockquote blocks',\\n      type: 'boolean'\\n    }\\n  };\\n  if (simple === false) {\\n    return JSON.parse(JSON.stringify(defaultOptions));\\n  }\\n  var ret = {};\\n  for (var opt in defaultOptions) {\\n    if (defaultOptions.hasOwnProperty(opt)) {\\n      ret[opt] = defaultOptions[opt].defaultValue;\\n    }\\n  }\\n  return ret;\\n}\\n\\nfunction allOptionsOn () {\\n  'use strict';\\n  var options = getDefaultOpts(true),\\n      ret = {};\\n  for (var opt in options) {\\n    if (options.hasOwnProperty(opt)) {\\n      ret[opt] = true;\\n    }\\n  }\\n  return ret;\\n}\\n\\r\\n/**\\n * Created by Tivie on 06-01-2015.\\n */\\n\\n// Private properties\\nvar showdown = {},\\n    parsers = {},\\n    extensions = {},\\n    globalOptions = getDefaultOpts(true),\\n    setFlavor = 'vanilla',\\n    flavor = {\\n      github: {\\n        omitExtraWLInCodeBlocks:              true,\\n        simplifiedAutoLink:                   true,\\n        excludeTrailingPunctuationFromURLs:   true,\\n        literalMidWordUnderscores:            true,\\n        strikethrough:                        true,\\n        tables:                               true,\\n        tablesHeaderId:                       true,\\n        ghCodeBlocks:                         true,\\n        tasklists:                            true,\\n        disableForced4SpacesIndentedSublists: true,\\n        simpleLineBreaks:                     true,\\n        requireSpaceBeforeHeadingText:        true,\\n        ghCompatibleHeaderId:                 true,\\n        ghMentions:                           true,\\n        backslashEscapesHTMLTags:             true,\\n        emoji:                                true,\\n        splitAdjacentBlockquotes:             true\\n      },\\n      original: {\\n        noHeaderId:                           true,\\n        ghCodeBlocks:                         false\\n      },\\n      ghost: {\\n        omitExtraWLInCodeBlocks:              true,\\n        parseImgDimensions:                   true,\\n        simplifiedAutoLink:                   true,\\n        excludeTrailingPunctuationFromURLs:   true,\\n        literalMidWordUnderscores:            true,\\n        strikethrough:                        true,\\n        tables:                               true,\\n        tablesHeaderId:                       true,\\n        ghCodeBlocks:                         true,\\n        tasklists:                            true,\\n        smoothLivePreview:                    true,\\n        simpleLineBreaks:                     true,\\n        requireSpaceBeforeHeadingText:        true,\\n        ghMentions:                           false,\\n        encodeEmails:                         true\\n      },\\n      vanilla: getDefaultOpts(true),\\n      allOn: allOptionsOn()\\n    };\\n\\n/**\\n * helper namespace\\n * @type {{}}\\n */\\nshowdown.helper = {};\\n\\n/**\\n * TODO LEGACY SUPPORT CODE\\n * @type {{}}\\n */\\nshowdown.extensions = {};\\n\\n/**\\n * Set a global option\\n * @static\\n * @param {string} key\\n * @param {*} value\\n * @returns {showdown}\\n */\\nshowdown.setOption = function (key, value) {\\n  'use strict';\\n  globalOptions[key] = value;\\n  return this;\\n};\\n\\n/**\\n * Get a global option\\n * @static\\n * @param {string} key\\n * @returns {*}\\n */\\nshowdown.getOption = function (key) {\\n  'use strict';\\n  return globalOptions[key];\\n};\\n\\n/**\\n * Get the global options\\n * @static\\n * @returns {{}}\\n */\\nshowdown.getOptions = function () {\\n  'use strict';\\n  return globalOptions;\\n};\\n\\n/**\\n * Reset global options to the default values\\n * @static\\n */\\nshowdown.resetOptions = function () {\\n  'use strict';\\n  globalOptions = getDefaultOpts(true);\\n};\\n\\n/**\\n * Set the flavor showdown should use as default\\n * @param {string} name\\n */\\nshowdown.setFlavor = function (name) {\\n  'use strict';\\n  if (!flavor.hasOwnProperty(name)) {\\n    throw Error(name + ' flavor was not found');\\n  }\\n  showdown.resetOptions();\\n  var preset = flavor[name];\\n  setFlavor = name;\\n  for (var option in preset) {\\n    if (preset.hasOwnProperty(option)) {\\n      globalOptions[option] = preset[option];\\n    }\\n  }\\n};\\n\\n/**\\n * Get the currently set flavor\\n * @returns {string}\\n */\\nshowdown.getFlavor = function () {\\n  'use strict';\\n  return setFlavor;\\n};\\n\\n/**\\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\\n * @param {string} name Name of the flavor\\n * @returns {{}|undefined}\\n */\\nshowdown.getFlavorOptions = function (name) {\\n  'use strict';\\n  if (flavor.hasOwnProperty(name)) {\\n    return flavor[name];\\n  }\\n};\\n\\n/**\\n * Get the default options\\n * @static\\n * @param {boolean} [simple=true]\\n * @returns {{}}\\n */\\nshowdown.getDefaultOptions = function (simple) {\\n  'use strict';\\n  return getDefaultOpts(simple);\\n};\\n\\n/**\\n * Get or set a subParser\\n *\\n * subParser(name)       - Get a registered subParser\\n * subParser(name, func) - Register a subParser\\n * @static\\n * @param {string} name\\n * @param {function} [func]\\n * @returns {*}\\n */\\nshowdown.subParser = function (name, func) {\\n  'use strict';\\n  if (showdown.helper.isString(name)) {\\n    if (typeof func !== 'undefined') {\\n      parsers[name] = func;\\n    } else {\\n      if (parsers.hasOwnProperty(name)) {\\n        return parsers[name];\\n      } else {\\n        throw Error('SubParser named ' + name + ' not registered!');\\n      }\\n    }\\n  }\\n};\\n\\n/**\\n * Gets or registers an extension\\n * @static\\n * @param {string} name\\n * @param {object|function=} ext\\n * @returns {*}\\n */\\nshowdown.extension = function (name, ext) {\\n  'use strict';\\n\\n  if (!showdown.helper.isString(name)) {\\n    throw Error('Extension \\\\'name\\\\' must be a string');\\n  }\\n\\n  name = showdown.helper.stdExtName(name);\\n\\n  // Getter\\n  if (showdown.helper.isUndefined(ext)) {\\n    if (!extensions.hasOwnProperty(name)) {\\n      throw Error('Extension named ' + name + ' is not registered!');\\n    }\\n    return extensions[name];\\n\\n    // Setter\\n  } else {\\n    // Expand extension if it's wrapped in a function\\n    if (typeof ext === 'function') {\\n      ext = ext();\\n    }\\n\\n    // Ensure extension is an array\\n    if (!showdown.helper.isArray(ext)) {\\n      ext = [ext];\\n    }\\n\\n    var validExtension = validate(ext, name);\\n\\n    if (validExtension.valid) {\\n      extensions[name] = ext;\\n    } else {\\n      throw Error(validExtension.error);\\n    }\\n  }\\n};\\n\\n/**\\n * Gets all extensions registered\\n * @returns {{}}\\n */\\nshowdown.getAllExtensions = function () {\\n  'use strict';\\n  return extensions;\\n};\\n\\n/**\\n * Remove an extension\\n * @param {string} name\\n */\\nshowdown.removeExtension = function (name) {\\n  'use strict';\\n  delete extensions[name];\\n};\\n\\n/**\\n * Removes all extensions\\n */\\nshowdown.resetExtensions = function () {\\n  'use strict';\\n  extensions = {};\\n};\\n\\n/**\\n * Validate extension\\n * @param {array} extension\\n * @param {string} name\\n * @returns {{valid: boolean, error: string}}\\n */\\nfunction validate (extension, name) {\\n  'use strict';\\n\\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\\n      ret = {\\n        valid: true,\\n        error: ''\\n      };\\n\\n  if (!showdown.helper.isArray(extension)) {\\n    extension = [extension];\\n  }\\n\\n  for (var i = 0; i < extension.length; ++i) {\\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\\n        ext = extension[i];\\n    if (typeof ext !== 'object') {\\n      ret.valid = false;\\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\\n      return ret;\\n    }\\n\\n    if (!showdown.helper.isString(ext.type)) {\\n      ret.valid = false;\\n      ret.error = baseMsg + 'property \\\"type\\\" must be a string, but ' + typeof ext.type + ' given';\\n      return ret;\\n    }\\n\\n    var type = ext.type = ext.type.toLowerCase();\\n\\n    // normalize extension type\\n    if (type === 'language') {\\n      type = ext.type = 'lang';\\n    }\\n\\n    if (type === 'html') {\\n      type = ext.type = 'output';\\n    }\\n\\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\\n      ret.valid = false;\\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \\\"lang/language\\\", \\\"output/html\\\" or \\\"listener\\\"';\\n      return ret;\\n    }\\n\\n    if (type === 'listener') {\\n      if (showdown.helper.isUndefined(ext.listeners)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + '. Extensions of type \\\"listener\\\" must have a property called \\\"listeners\\\"';\\n        return ret;\\n      }\\n    } else {\\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + type + ' extensions must define either a \\\"regex\\\" property or a \\\"filter\\\" method';\\n        return ret;\\n      }\\n    }\\n\\n    if (ext.listeners) {\\n      if (typeof ext.listeners !== 'object') {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"listeners\\\" property must be an object but ' + typeof ext.listeners + ' given';\\n        return ret;\\n      }\\n      for (var ln in ext.listeners) {\\n        if (ext.listeners.hasOwnProperty(ln)) {\\n          if (typeof ext.listeners[ln] !== 'function') {\\n            ret.valid = false;\\n            ret.error = baseMsg + '\\\"listeners\\\" property must be an hash of [event name]: [callback]. listeners.' + ln +\\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\\n            return ret;\\n          }\\n        }\\n      }\\n    }\\n\\n    if (ext.filter) {\\n      if (typeof ext.filter !== 'function') {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"filter\\\" must be a function, but ' + typeof ext.filter + ' given';\\n        return ret;\\n      }\\n    } else if (ext.regex) {\\n      if (showdown.helper.isString(ext.regex)) {\\n        ext.regex = new RegExp(ext.regex, 'g');\\n      }\\n      if (!(ext.regex instanceof RegExp)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"regex\\\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\\n        return ret;\\n      }\\n      if (showdown.helper.isUndefined(ext.replace)) {\\n        ret.valid = false;\\n        ret.error = baseMsg + '\\\"regex\\\" extensions must implement a replace string or function';\\n        return ret;\\n      }\\n    }\\n  }\\n  return ret;\\n}\\n\\n/**\\n * Validate extension\\n * @param {object} ext\\n * @returns {boolean}\\n */\\nshowdown.validateExtension = function (ext) {\\n  'use strict';\\n\\n  var validateExtension = validate(ext, null);\\n  if (!validateExtension.valid) {\\n    console.warn(validateExtension.error);\\n    return false;\\n  }\\n  return true;\\n};\\n\\r\\n/**\\n * showdownjs helper functions\\n */\\n\\nif (!showdown.hasOwnProperty('helper')) {\\n  showdown.helper = {};\\n}\\n\\n/**\\n * Check if var is string\\n * @static\\n * @param {string} a\\n * @returns {boolean}\\n */\\nshowdown.helper.isString = function (a) {\\n  'use strict';\\n  return (typeof a === 'string' || a instanceof String);\\n};\\n\\n/**\\n * Check if var is a function\\n * @static\\n * @param {*} a\\n * @returns {boolean}\\n */\\nshowdown.helper.isFunction = function (a) {\\n  'use strict';\\n  var getType = {};\\n  return a && getType.toString.call(a) === '[object Function]';\\n};\\n\\n/**\\n * isArray helper function\\n * @static\\n * @param {*} a\\n * @returns {boolean}\\n */\\nshowdown.helper.isArray = function (a) {\\n  'use strict';\\n  return Array.isArray(a);\\n};\\n\\n/**\\n * Check if value is undefined\\n * @static\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\\n */\\nshowdown.helper.isUndefined = function (value) {\\n  'use strict';\\n  return typeof value === 'undefined';\\n};\\n\\n/**\\n * ForEach helper function\\n * Iterates over Arrays and Objects (own properties only)\\n * @static\\n * @param {*} obj\\n * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object\\n */\\nshowdown.helper.forEach = function (obj, callback) {\\n  'use strict';\\n  // check if obj is defined\\n  if (showdown.helper.isUndefined(obj)) {\\n    throw new Error('obj param is required');\\n  }\\n\\n  if (showdown.helper.isUndefined(callback)) {\\n    throw new Error('callback param is required');\\n  }\\n\\n  if (!showdown.helper.isFunction(callback)) {\\n    throw new Error('callback param must be a function/closure');\\n  }\\n\\n  if (typeof obj.forEach === 'function') {\\n    obj.forEach(callback);\\n  } else if (showdown.helper.isArray(obj)) {\\n    for (var i = 0; i < obj.length; i++) {\\n      callback(obj[i], i, obj);\\n    }\\n  } else if (typeof (obj) === 'object') {\\n    for (var prop in obj) {\\n      if (obj.hasOwnProperty(prop)) {\\n        callback(obj[prop], prop, obj);\\n      }\\n    }\\n  } else {\\n    throw new Error('obj does not seem to be an array or an iterable object');\\n  }\\n};\\n\\n/**\\n * Standardidize extension name\\n * @static\\n * @param {string} s extension name\\n * @returns {string}\\n */\\nshowdown.helper.stdExtName = function (s) {\\n  'use strict';\\n  return s.replace(/[_?*+\\\\/\\\\\\\\.^-]/g, '').replace(/\\\\s/g, '').toLowerCase();\\n};\\n\\nfunction escapeCharactersCallback (wholeMatch, m1) {\\n  'use strict';\\n  var charCodeToEscape = m1.charCodeAt(0);\\n  return '¨E' + charCodeToEscape + 'E';\\n}\\n\\n/**\\n * Callback used to escape characters when passing through String.replace\\n * @static\\n * @param {string} wholeMatch\\n * @param {string} m1\\n * @returns {string}\\n */\\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\\n\\n/**\\n * Escape characters in a string\\n * @static\\n * @param {string} text\\n * @param {string} charsToEscape\\n * @param {boolean} afterBackslash\\n * @returns {XML|string|void|*}\\n */\\nshowdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {\\n  'use strict';\\n  // First we have to escape the escape characters so that\\n  // we can build a character class out of them\\n  var regexString = '([' + charsToEscape.replace(/([\\\\[\\\\]\\\\\\\\])/g, '\\\\\\\\$1') + '])';\\n\\n  if (afterBackslash) {\\n    regexString = '\\\\\\\\\\\\\\\\' + regexString;\\n  }\\n\\n  var regex = new RegExp(regexString, 'g');\\n  text = text.replace(regex, escapeCharactersCallback);\\n\\n  return text;\\n};\\n\\nvar rgxFindMatchPos = function (str, left, right, flags) {\\n  'use strict';\\n  var f = flags || '',\\n      g = f.indexOf('g') > -1,\\n      x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\\n      l = new RegExp(left, f.replace(/g/g, '')),\\n      pos = [],\\n      t, s, m, start, end;\\n\\n  do {\\n    t = 0;\\n    while ((m = x.exec(str))) {\\n      if (l.test(m[0])) {\\n        if (!(t++)) {\\n          s = x.lastIndex;\\n          start = s - m[0].length;\\n        }\\n      } else if (t) {\\n        if (!--t) {\\n          end = m.index + m[0].length;\\n          var obj = {\\n            left: {start: start, end: s},\\n            match: {start: s, end: m.index},\\n            right: {start: m.index, end: end},\\n            wholeMatch: {start: start, end: end}\\n          };\\n          pos.push(obj);\\n          if (!g) {\\n            return pos;\\n          }\\n        }\\n      }\\n    }\\n  } while (t && (x.lastIndex = s));\\n\\n  return pos;\\n};\\n\\n/**\\n * matchRecursiveRegExp\\n *\\n * (c) 2007 Steven Levithan <stevenlevithan.com>\\n * MIT License\\n *\\n * Accepts a string to search, a left and right format delimiter\\n * as regex patterns, and optional regex flags. Returns an array\\n * of matches, allowing nested instances of left/right delimiters.\\n * Use the \\\"g\\\" flag to return all matches, otherwise only the\\n * first is returned. Be careful to ensure that the left and\\n * right format delimiters produce mutually exclusive matches.\\n * Backreferences are not supported within the right delimiter\\n * due to how it is internally combined with the left delimiter.\\n * When matching strings whose format delimiters are unbalanced\\n * to the left or right, the output is intentionally as a\\n * conventional regex library with recursion support would\\n * produce, e.g. \\\"<<x>\\\" and \\\"<x>>\\\" both produce [\\\"x\\\"] when using\\n * \\\"<\\\" and \\\">\\\" as the delimiters (both strings contain a single,\\n * balanced instance of \\\"<x>\\\").\\n *\\n * examples:\\n * matchRecursiveRegExp(\\\"test\\\", \\\"\\\\\\\\(\\\", \\\"\\\\\\\\)\\\")\\n * returns: []\\n * matchRecursiveRegExp(\\\"<t<<e>><s>>t<>\\\", \\\"<\\\", \\\">\\\", \\\"g\\\")\\n * returns: [\\\"t<<e>><s>\\\", \\\"\\\"]\\n * matchRecursiveRegExp(\\\"<div id=\\\\\\\"x\\\\\\\">test</div>\\\", \\\"<div\\\\\\\\b[^>]*>\\\", \\\"</div>\\\", \\\"gi\\\")\\n * returns: [\\\"test\\\"]\\n */\\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\\n  'use strict';\\n\\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\\n      results = [];\\n\\n  for (var i = 0; i < matchPos.length; ++i) {\\n    results.push([\\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\\n    ]);\\n  }\\n  return results;\\n};\\n\\n/**\\n *\\n * @param {string} str\\n * @param {string|function} replacement\\n * @param {string} left\\n * @param {string} right\\n * @param {string} flags\\n * @returns {string}\\n */\\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\\n  'use strict';\\n\\n  if (!showdown.helper.isFunction(replacement)) {\\n    var repStr = replacement;\\n    replacement = function () {\\n      return repStr;\\n    };\\n  }\\n\\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\\n      finalStr = str,\\n      lng = matchPos.length;\\n\\n  if (lng > 0) {\\n    var bits = [];\\n    if (matchPos[0].wholeMatch.start !== 0) {\\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\\n    }\\n    for (var i = 0; i < lng; ++i) {\\n      bits.push(\\n        replacement(\\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\\n        )\\n      );\\n      if (i < lng - 1) {\\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\\n      }\\n    }\\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\\n    }\\n    finalStr = bits.join('');\\n  }\\n  return finalStr;\\n};\\n\\n/**\\n * Returns the index within the passed String object of the first occurrence of the specified regex,\\n * starting the search at fromIndex. Returns -1 if the value is not found.\\n *\\n * @param {string} str string to search\\n * @param {RegExp} regex Regular expression to search\\n * @param {int} [fromIndex = 0] Index to start the search\\n * @returns {Number}\\n * @throws InvalidArgumentError\\n */\\nshowdown.helper.regexIndexOf = function (str, regex, fromIndex) {\\n  'use strict';\\n  if (!showdown.helper.isString(str)) {\\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\\n  }\\n  if (regex instanceof RegExp === false) {\\n    throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';\\n  }\\n  var indexOf = str.substring(fromIndex || 0).search(regex);\\n  return (indexOf >= 0) ? (indexOf + (fromIndex || 0)) : indexOf;\\n};\\n\\n/**\\n * Splits the passed string object at the defined index, and returns an array composed of the two substrings\\n * @param {string} str string to split\\n * @param {int} index index to split string at\\n * @returns {[string,string]}\\n * @throws InvalidArgumentError\\n */\\nshowdown.helper.splitAtIndex = function (str, index) {\\n  'use strict';\\n  if (!showdown.helper.isString(str)) {\\n    throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';\\n  }\\n  return [str.substring(0, index), str.substring(index)];\\n};\\n\\n/**\\n * Obfuscate an e-mail address through the use of Character Entities,\\n * transforming ASCII characters into their equivalent decimal or hex entities.\\n *\\n * Since it has a random component, subsequent calls to this function produce different results\\n *\\n * @param {string} mail\\n * @returns {string}\\n */\\nshowdown.helper.encodeEmailAddress = function (mail) {\\n  'use strict';\\n  var encode = [\\n    function (ch) {\\n      return '&#' + ch.charCodeAt(0) + ';';\\n    },\\n    function (ch) {\\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\\n    },\\n    function (ch) {\\n      return ch;\\n    }\\n  ];\\n\\n  mail = mail.replace(/./g, function (ch) {\\n    if (ch === '@') {\\n      // this *must* be encoded. I insist.\\n      ch = encode[Math.floor(Math.random() * 2)](ch);\\n    } else {\\n      var r = Math.random();\\n      // roughly 10% raw, 45% hex, 45% dec\\n      ch = (\\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\\n      );\\n    }\\n    return ch;\\n  });\\n\\n  return mail;\\n};\\n\\n/**\\n * POLYFILLS\\n */\\n// use this instead of builtin is undefined for IE8 compatibility\\nif (typeof(console) === 'undefined') {\\n  console = {\\n    warn: function (msg) {\\n      'use strict';\\n      alert(msg);\\n    },\\n    log: function (msg) {\\n      'use strict';\\n      alert(msg);\\n    },\\n    error: function (msg) {\\n      'use strict';\\n      throw msg;\\n    }\\n  };\\n}\\n\\n/**\\n * Common regexes.\\n * We declare some common regexes to improve performance\\n */\\nshowdown.helper.regexes = {\\n  asteriskDashAndColon: /([*_:~])/g\\n};\\n\\n/**\\n * EMOJIS LIST\\n */\\nshowdown.helper.emojis = {\\n  '+1':'\\\\ud83d\\\\udc4d',\\n  '-1':'\\\\ud83d\\\\udc4e',\\n  '100':'\\\\ud83d\\\\udcaf',\\n  '1234':'\\\\ud83d\\\\udd22',\\n  '1st_place_medal':'\\\\ud83e\\\\udd47',\\n  '2nd_place_medal':'\\\\ud83e\\\\udd48',\\n  '3rd_place_medal':'\\\\ud83e\\\\udd49',\\n  '8ball':'\\\\ud83c\\\\udfb1',\\n  'a':'\\\\ud83c\\\\udd70\\\\ufe0f',\\n  'ab':'\\\\ud83c\\\\udd8e',\\n  'abc':'\\\\ud83d\\\\udd24',\\n  'abcd':'\\\\ud83d\\\\udd21',\\n  'accept':'\\\\ud83c\\\\ude51',\\n  'aerial_tramway':'\\\\ud83d\\\\udea1',\\n  'airplane':'\\\\u2708\\\\ufe0f',\\n  'alarm_clock':'\\\\u23f0',\\n  'alembic':'\\\\u2697\\\\ufe0f',\\n  'alien':'\\\\ud83d\\\\udc7d',\\n  'ambulance':'\\\\ud83d\\\\ude91',\\n  'amphora':'\\\\ud83c\\\\udffa',\\n  'anchor':'\\\\u2693\\\\ufe0f',\\n  'angel':'\\\\ud83d\\\\udc7c',\\n  'anger':'\\\\ud83d\\\\udca2',\\n  'angry':'\\\\ud83d\\\\ude20',\\n  'anguished':'\\\\ud83d\\\\ude27',\\n  'ant':'\\\\ud83d\\\\udc1c',\\n  'apple':'\\\\ud83c\\\\udf4e',\\n  'aquarius':'\\\\u2652\\\\ufe0f',\\n  'aries':'\\\\u2648\\\\ufe0f',\\n  'arrow_backward':'\\\\u25c0\\\\ufe0f',\\n  'arrow_double_down':'\\\\u23ec',\\n  'arrow_double_up':'\\\\u23eb',\\n  'arrow_down':'\\\\u2b07\\\\ufe0f',\\n  'arrow_down_small':'\\\\ud83d\\\\udd3d',\\n  'arrow_forward':'\\\\u25b6\\\\ufe0f',\\n  'arrow_heading_down':'\\\\u2935\\\\ufe0f',\\n  'arrow_heading_up':'\\\\u2934\\\\ufe0f',\\n  'arrow_left':'\\\\u2b05\\\\ufe0f',\\n  'arrow_lower_left':'\\\\u2199\\\\ufe0f',\\n  'arrow_lower_right':'\\\\u2198\\\\ufe0f',\\n  'arrow_right':'\\\\u27a1\\\\ufe0f',\\n  'arrow_right_hook':'\\\\u21aa\\\\ufe0f',\\n  'arrow_up':'\\\\u2b06\\\\ufe0f',\\n  'arrow_up_down':'\\\\u2195\\\\ufe0f',\\n  'arrow_up_small':'\\\\ud83d\\\\udd3c',\\n  'arrow_upper_left':'\\\\u2196\\\\ufe0f',\\n  'arrow_upper_right':'\\\\u2197\\\\ufe0f',\\n  'arrows_clockwise':'\\\\ud83d\\\\udd03',\\n  'arrows_counterclockwise':'\\\\ud83d\\\\udd04',\\n  'art':'\\\\ud83c\\\\udfa8',\\n  'articulated_lorry':'\\\\ud83d\\\\ude9b',\\n  'artificial_satellite':'\\\\ud83d\\\\udef0',\\n  'astonished':'\\\\ud83d\\\\ude32',\\n  'athletic_shoe':'\\\\ud83d\\\\udc5f',\\n  'atm':'\\\\ud83c\\\\udfe7',\\n  'atom_symbol':'\\\\u269b\\\\ufe0f',\\n  'avocado':'\\\\ud83e\\\\udd51',\\n  'b':'\\\\ud83c\\\\udd71\\\\ufe0f',\\n  'baby':'\\\\ud83d\\\\udc76',\\n  'baby_bottle':'\\\\ud83c\\\\udf7c',\\n  'baby_chick':'\\\\ud83d\\\\udc24',\\n  'baby_symbol':'\\\\ud83d\\\\udebc',\\n  'back':'\\\\ud83d\\\\udd19',\\n  'bacon':'\\\\ud83e\\\\udd53',\\n  'badminton':'\\\\ud83c\\\\udff8',\\n  'baggage_claim':'\\\\ud83d\\\\udec4',\\n  'baguette_bread':'\\\\ud83e\\\\udd56',\\n  'balance_scale':'\\\\u2696\\\\ufe0f',\\n  'balloon':'\\\\ud83c\\\\udf88',\\n  'ballot_box':'\\\\ud83d\\\\uddf3',\\n  'ballot_box_with_check':'\\\\u2611\\\\ufe0f',\\n  'bamboo':'\\\\ud83c\\\\udf8d',\\n  'banana':'\\\\ud83c\\\\udf4c',\\n  'bangbang':'\\\\u203c\\\\ufe0f',\\n  'bank':'\\\\ud83c\\\\udfe6',\\n  'bar_chart':'\\\\ud83d\\\\udcca',\\n  'barber':'\\\\ud83d\\\\udc88',\\n  'baseball':'\\\\u26be\\\\ufe0f',\\n  'basketball':'\\\\ud83c\\\\udfc0',\\n  'basketball_man':'\\\\u26f9\\\\ufe0f',\\n  'basketball_woman':'\\\\u26f9\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'bat':'\\\\ud83e\\\\udd87',\\n  'bath':'\\\\ud83d\\\\udec0',\\n  'bathtub':'\\\\ud83d\\\\udec1',\\n  'battery':'\\\\ud83d\\\\udd0b',\\n  'beach_umbrella':'\\\\ud83c\\\\udfd6',\\n  'bear':'\\\\ud83d\\\\udc3b',\\n  'bed':'\\\\ud83d\\\\udecf',\\n  'bee':'\\\\ud83d\\\\udc1d',\\n  'beer':'\\\\ud83c\\\\udf7a',\\n  'beers':'\\\\ud83c\\\\udf7b',\\n  'beetle':'\\\\ud83d\\\\udc1e',\\n  'beginner':'\\\\ud83d\\\\udd30',\\n  'bell':'\\\\ud83d\\\\udd14',\\n  'bellhop_bell':'\\\\ud83d\\\\udece',\\n  'bento':'\\\\ud83c\\\\udf71',\\n  'biking_man':'\\\\ud83d\\\\udeb4',\\n  'bike':'\\\\ud83d\\\\udeb2',\\n  'biking_woman':'\\\\ud83d\\\\udeb4&zwj;\\\\u2640\\\\ufe0f',\\n  'bikini':'\\\\ud83d\\\\udc59',\\n  'biohazard':'\\\\u2623\\\\ufe0f',\\n  'bird':'\\\\ud83d\\\\udc26',\\n  'birthday':'\\\\ud83c\\\\udf82',\\n  'black_circle':'\\\\u26ab\\\\ufe0f',\\n  'black_flag':'\\\\ud83c\\\\udff4',\\n  'black_heart':'\\\\ud83d\\\\udda4',\\n  'black_joker':'\\\\ud83c\\\\udccf',\\n  'black_large_square':'\\\\u2b1b\\\\ufe0f',\\n  'black_medium_small_square':'\\\\u25fe\\\\ufe0f',\\n  'black_medium_square':'\\\\u25fc\\\\ufe0f',\\n  'black_nib':'\\\\u2712\\\\ufe0f',\\n  'black_small_square':'\\\\u25aa\\\\ufe0f',\\n  'black_square_button':'\\\\ud83d\\\\udd32',\\n  'blonde_man':'\\\\ud83d\\\\udc71',\\n  'blonde_woman':'\\\\ud83d\\\\udc71&zwj;\\\\u2640\\\\ufe0f',\\n  'blossom':'\\\\ud83c\\\\udf3c',\\n  'blowfish':'\\\\ud83d\\\\udc21',\\n  'blue_book':'\\\\ud83d\\\\udcd8',\\n  'blue_car':'\\\\ud83d\\\\ude99',\\n  'blue_heart':'\\\\ud83d\\\\udc99',\\n  'blush':'\\\\ud83d\\\\ude0a',\\n  'boar':'\\\\ud83d\\\\udc17',\\n  'boat':'\\\\u26f5\\\\ufe0f',\\n  'bomb':'\\\\ud83d\\\\udca3',\\n  'book':'\\\\ud83d\\\\udcd6',\\n  'bookmark':'\\\\ud83d\\\\udd16',\\n  'bookmark_tabs':'\\\\ud83d\\\\udcd1',\\n  'books':'\\\\ud83d\\\\udcda',\\n  'boom':'\\\\ud83d\\\\udca5',\\n  'boot':'\\\\ud83d\\\\udc62',\\n  'bouquet':'\\\\ud83d\\\\udc90',\\n  'bowing_man':'\\\\ud83d\\\\ude47',\\n  'bow_and_arrow':'\\\\ud83c\\\\udff9',\\n  'bowing_woman':'\\\\ud83d\\\\ude47&zwj;\\\\u2640\\\\ufe0f',\\n  'bowling':'\\\\ud83c\\\\udfb3',\\n  'boxing_glove':'\\\\ud83e\\\\udd4a',\\n  'boy':'\\\\ud83d\\\\udc66',\\n  'bread':'\\\\ud83c\\\\udf5e',\\n  'bride_with_veil':'\\\\ud83d\\\\udc70',\\n  'bridge_at_night':'\\\\ud83c\\\\udf09',\\n  'briefcase':'\\\\ud83d\\\\udcbc',\\n  'broken_heart':'\\\\ud83d\\\\udc94',\\n  'bug':'\\\\ud83d\\\\udc1b',\\n  'building_construction':'\\\\ud83c\\\\udfd7',\\n  'bulb':'\\\\ud83d\\\\udca1',\\n  'bullettrain_front':'\\\\ud83d\\\\ude85',\\n  'bullettrain_side':'\\\\ud83d\\\\ude84',\\n  'burrito':'\\\\ud83c\\\\udf2f',\\n  'bus':'\\\\ud83d\\\\ude8c',\\n  'business_suit_levitating':'\\\\ud83d\\\\udd74',\\n  'busstop':'\\\\ud83d\\\\ude8f',\\n  'bust_in_silhouette':'\\\\ud83d\\\\udc64',\\n  'busts_in_silhouette':'\\\\ud83d\\\\udc65',\\n  'butterfly':'\\\\ud83e\\\\udd8b',\\n  'cactus':'\\\\ud83c\\\\udf35',\\n  'cake':'\\\\ud83c\\\\udf70',\\n  'calendar':'\\\\ud83d\\\\udcc6',\\n  'call_me_hand':'\\\\ud83e\\\\udd19',\\n  'calling':'\\\\ud83d\\\\udcf2',\\n  'camel':'\\\\ud83d\\\\udc2b',\\n  'camera':'\\\\ud83d\\\\udcf7',\\n  'camera_flash':'\\\\ud83d\\\\udcf8',\\n  'camping':'\\\\ud83c\\\\udfd5',\\n  'cancer':'\\\\u264b\\\\ufe0f',\\n  'candle':'\\\\ud83d\\\\udd6f',\\n  'candy':'\\\\ud83c\\\\udf6c',\\n  'canoe':'\\\\ud83d\\\\udef6',\\n  'capital_abcd':'\\\\ud83d\\\\udd20',\\n  'capricorn':'\\\\u2651\\\\ufe0f',\\n  'car':'\\\\ud83d\\\\ude97',\\n  'card_file_box':'\\\\ud83d\\\\uddc3',\\n  'card_index':'\\\\ud83d\\\\udcc7',\\n  'card_index_dividers':'\\\\ud83d\\\\uddc2',\\n  'carousel_horse':'\\\\ud83c\\\\udfa0',\\n  'carrot':'\\\\ud83e\\\\udd55',\\n  'cat':'\\\\ud83d\\\\udc31',\\n  'cat2':'\\\\ud83d\\\\udc08',\\n  'cd':'\\\\ud83d\\\\udcbf',\\n  'chains':'\\\\u26d3',\\n  'champagne':'\\\\ud83c\\\\udf7e',\\n  'chart':'\\\\ud83d\\\\udcb9',\\n  'chart_with_downwards_trend':'\\\\ud83d\\\\udcc9',\\n  'chart_with_upwards_trend':'\\\\ud83d\\\\udcc8',\\n  'checkered_flag':'\\\\ud83c\\\\udfc1',\\n  'cheese':'\\\\ud83e\\\\uddc0',\\n  'cherries':'\\\\ud83c\\\\udf52',\\n  'cherry_blossom':'\\\\ud83c\\\\udf38',\\n  'chestnut':'\\\\ud83c\\\\udf30',\\n  'chicken':'\\\\ud83d\\\\udc14',\\n  'children_crossing':'\\\\ud83d\\\\udeb8',\\n  'chipmunk':'\\\\ud83d\\\\udc3f',\\n  'chocolate_bar':'\\\\ud83c\\\\udf6b',\\n  'christmas_tree':'\\\\ud83c\\\\udf84',\\n  'church':'\\\\u26ea\\\\ufe0f',\\n  'cinema':'\\\\ud83c\\\\udfa6',\\n  'circus_tent':'\\\\ud83c\\\\udfaa',\\n  'city_sunrise':'\\\\ud83c\\\\udf07',\\n  'city_sunset':'\\\\ud83c\\\\udf06',\\n  'cityscape':'\\\\ud83c\\\\udfd9',\\n  'cl':'\\\\ud83c\\\\udd91',\\n  'clamp':'\\\\ud83d\\\\udddc',\\n  'clap':'\\\\ud83d\\\\udc4f',\\n  'clapper':'\\\\ud83c\\\\udfac',\\n  'classical_building':'\\\\ud83c\\\\udfdb',\\n  'clinking_glasses':'\\\\ud83e\\\\udd42',\\n  'clipboard':'\\\\ud83d\\\\udccb',\\n  'clock1':'\\\\ud83d\\\\udd50',\\n  'clock10':'\\\\ud83d\\\\udd59',\\n  'clock1030':'\\\\ud83d\\\\udd65',\\n  'clock11':'\\\\ud83d\\\\udd5a',\\n  'clock1130':'\\\\ud83d\\\\udd66',\\n  'clock12':'\\\\ud83d\\\\udd5b',\\n  'clock1230':'\\\\ud83d\\\\udd67',\\n  'clock130':'\\\\ud83d\\\\udd5c',\\n  'clock2':'\\\\ud83d\\\\udd51',\\n  'clock230':'\\\\ud83d\\\\udd5d',\\n  'clock3':'\\\\ud83d\\\\udd52',\\n  'clock330':'\\\\ud83d\\\\udd5e',\\n  'clock4':'\\\\ud83d\\\\udd53',\\n  'clock430':'\\\\ud83d\\\\udd5f',\\n  'clock5':'\\\\ud83d\\\\udd54',\\n  'clock530':'\\\\ud83d\\\\udd60',\\n  'clock6':'\\\\ud83d\\\\udd55',\\n  'clock630':'\\\\ud83d\\\\udd61',\\n  'clock7':'\\\\ud83d\\\\udd56',\\n  'clock730':'\\\\ud83d\\\\udd62',\\n  'clock8':'\\\\ud83d\\\\udd57',\\n  'clock830':'\\\\ud83d\\\\udd63',\\n  'clock9':'\\\\ud83d\\\\udd58',\\n  'clock930':'\\\\ud83d\\\\udd64',\\n  'closed_book':'\\\\ud83d\\\\udcd5',\\n  'closed_lock_with_key':'\\\\ud83d\\\\udd10',\\n  'closed_umbrella':'\\\\ud83c\\\\udf02',\\n  'cloud':'\\\\u2601\\\\ufe0f',\\n  'cloud_with_lightning':'\\\\ud83c\\\\udf29',\\n  'cloud_with_lightning_and_rain':'\\\\u26c8',\\n  'cloud_with_rain':'\\\\ud83c\\\\udf27',\\n  'cloud_with_snow':'\\\\ud83c\\\\udf28',\\n  'clown_face':'\\\\ud83e\\\\udd21',\\n  'clubs':'\\\\u2663\\\\ufe0f',\\n  'cocktail':'\\\\ud83c\\\\udf78',\\n  'coffee':'\\\\u2615\\\\ufe0f',\\n  'coffin':'\\\\u26b0\\\\ufe0f',\\n  'cold_sweat':'\\\\ud83d\\\\ude30',\\n  'comet':'\\\\u2604\\\\ufe0f',\\n  'computer':'\\\\ud83d\\\\udcbb',\\n  'computer_mouse':'\\\\ud83d\\\\uddb1',\\n  'confetti_ball':'\\\\ud83c\\\\udf8a',\\n  'confounded':'\\\\ud83d\\\\ude16',\\n  'confused':'\\\\ud83d\\\\ude15',\\n  'congratulations':'\\\\u3297\\\\ufe0f',\\n  'construction':'\\\\ud83d\\\\udea7',\\n  'construction_worker_man':'\\\\ud83d\\\\udc77',\\n  'construction_worker_woman':'\\\\ud83d\\\\udc77&zwj;\\\\u2640\\\\ufe0f',\\n  'control_knobs':'\\\\ud83c\\\\udf9b',\\n  'convenience_store':'\\\\ud83c\\\\udfea',\\n  'cookie':'\\\\ud83c\\\\udf6a',\\n  'cool':'\\\\ud83c\\\\udd92',\\n  'policeman':'\\\\ud83d\\\\udc6e',\\n  'copyright':'\\\\u00a9\\\\ufe0f',\\n  'corn':'\\\\ud83c\\\\udf3d',\\n  'couch_and_lamp':'\\\\ud83d\\\\udecb',\\n  'couple':'\\\\ud83d\\\\udc6b',\\n  'couple_with_heart_woman_man':'\\\\ud83d\\\\udc91',\\n  'couple_with_heart_man_man':'\\\\ud83d\\\\udc68&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc68',\\n  'couple_with_heart_woman_woman':'\\\\ud83d\\\\udc69&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc69',\\n  'couplekiss_man_man':'\\\\ud83d\\\\udc68&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc8b&zwj;\\\\ud83d\\\\udc68',\\n  'couplekiss_man_woman':'\\\\ud83d\\\\udc8f',\\n  'couplekiss_woman_woman':'\\\\ud83d\\\\udc69&zwj;\\\\u2764\\\\ufe0f&zwj;\\\\ud83d\\\\udc8b&zwj;\\\\ud83d\\\\udc69',\\n  'cow':'\\\\ud83d\\\\udc2e',\\n  'cow2':'\\\\ud83d\\\\udc04',\\n  'cowboy_hat_face':'\\\\ud83e\\\\udd20',\\n  'crab':'\\\\ud83e\\\\udd80',\\n  'crayon':'\\\\ud83d\\\\udd8d',\\n  'credit_card':'\\\\ud83d\\\\udcb3',\\n  'crescent_moon':'\\\\ud83c\\\\udf19',\\n  'cricket':'\\\\ud83c\\\\udfcf',\\n  'crocodile':'\\\\ud83d\\\\udc0a',\\n  'croissant':'\\\\ud83e\\\\udd50',\\n  'crossed_fingers':'\\\\ud83e\\\\udd1e',\\n  'crossed_flags':'\\\\ud83c\\\\udf8c',\\n  'crossed_swords':'\\\\u2694\\\\ufe0f',\\n  'crown':'\\\\ud83d\\\\udc51',\\n  'cry':'\\\\ud83d\\\\ude22',\\n  'crying_cat_face':'\\\\ud83d\\\\ude3f',\\n  'crystal_ball':'\\\\ud83d\\\\udd2e',\\n  'cucumber':'\\\\ud83e\\\\udd52',\\n  'cupid':'\\\\ud83d\\\\udc98',\\n  'curly_loop':'\\\\u27b0',\\n  'currency_exchange':'\\\\ud83d\\\\udcb1',\\n  'curry':'\\\\ud83c\\\\udf5b',\\n  'custard':'\\\\ud83c\\\\udf6e',\\n  'customs':'\\\\ud83d\\\\udec3',\\n  'cyclone':'\\\\ud83c\\\\udf00',\\n  'dagger':'\\\\ud83d\\\\udde1',\\n  'dancer':'\\\\ud83d\\\\udc83',\\n  'dancing_women':'\\\\ud83d\\\\udc6f',\\n  'dancing_men':'\\\\ud83d\\\\udc6f&zwj;\\\\u2642\\\\ufe0f',\\n  'dango':'\\\\ud83c\\\\udf61',\\n  'dark_sunglasses':'\\\\ud83d\\\\udd76',\\n  'dart':'\\\\ud83c\\\\udfaf',\\n  'dash':'\\\\ud83d\\\\udca8',\\n  'date':'\\\\ud83d\\\\udcc5',\\n  'deciduous_tree':'\\\\ud83c\\\\udf33',\\n  'deer':'\\\\ud83e\\\\udd8c',\\n  'department_store':'\\\\ud83c\\\\udfec',\\n  'derelict_house':'\\\\ud83c\\\\udfda',\\n  'desert':'\\\\ud83c\\\\udfdc',\\n  'desert_island':'\\\\ud83c\\\\udfdd',\\n  'desktop_computer':'\\\\ud83d\\\\udda5',\\n  'male_detective':'\\\\ud83d\\\\udd75\\\\ufe0f',\\n  'diamond_shape_with_a_dot_inside':'\\\\ud83d\\\\udca0',\\n  'diamonds':'\\\\u2666\\\\ufe0f',\\n  'disappointed':'\\\\ud83d\\\\ude1e',\\n  'disappointed_relieved':'\\\\ud83d\\\\ude25',\\n  'dizzy':'\\\\ud83d\\\\udcab',\\n  'dizzy_face':'\\\\ud83d\\\\ude35',\\n  'do_not_litter':'\\\\ud83d\\\\udeaf',\\n  'dog':'\\\\ud83d\\\\udc36',\\n  'dog2':'\\\\ud83d\\\\udc15',\\n  'dollar':'\\\\ud83d\\\\udcb5',\\n  'dolls':'\\\\ud83c\\\\udf8e',\\n  'dolphin':'\\\\ud83d\\\\udc2c',\\n  'door':'\\\\ud83d\\\\udeaa',\\n  'doughnut':'\\\\ud83c\\\\udf69',\\n  'dove':'\\\\ud83d\\\\udd4a',\\n  'dragon':'\\\\ud83d\\\\udc09',\\n  'dragon_face':'\\\\ud83d\\\\udc32',\\n  'dress':'\\\\ud83d\\\\udc57',\\n  'dromedary_camel':'\\\\ud83d\\\\udc2a',\\n  'drooling_face':'\\\\ud83e\\\\udd24',\\n  'droplet':'\\\\ud83d\\\\udca7',\\n  'drum':'\\\\ud83e\\\\udd41',\\n  'duck':'\\\\ud83e\\\\udd86',\\n  'dvd':'\\\\ud83d\\\\udcc0',\\n  'e-mail':'\\\\ud83d\\\\udce7',\\n  'eagle':'\\\\ud83e\\\\udd85',\\n  'ear':'\\\\ud83d\\\\udc42',\\n  'ear_of_rice':'\\\\ud83c\\\\udf3e',\\n  'earth_africa':'\\\\ud83c\\\\udf0d',\\n  'earth_americas':'\\\\ud83c\\\\udf0e',\\n  'earth_asia':'\\\\ud83c\\\\udf0f',\\n  'egg':'\\\\ud83e\\\\udd5a',\\n  'eggplant':'\\\\ud83c\\\\udf46',\\n  'eight_pointed_black_star':'\\\\u2734\\\\ufe0f',\\n  'eight_spoked_asterisk':'\\\\u2733\\\\ufe0f',\\n  'electric_plug':'\\\\ud83d\\\\udd0c',\\n  'elephant':'\\\\ud83d\\\\udc18',\\n  'email':'\\\\u2709\\\\ufe0f',\\n  'end':'\\\\ud83d\\\\udd1a',\\n  'envelope_with_arrow':'\\\\ud83d\\\\udce9',\\n  'euro':'\\\\ud83d\\\\udcb6',\\n  'european_castle':'\\\\ud83c\\\\udff0',\\n  'european_post_office':'\\\\ud83c\\\\udfe4',\\n  'evergreen_tree':'\\\\ud83c\\\\udf32',\\n  'exclamation':'\\\\u2757\\\\ufe0f',\\n  'expressionless':'\\\\ud83d\\\\ude11',\\n  'eye':'\\\\ud83d\\\\udc41',\\n  'eye_speech_bubble':'\\\\ud83d\\\\udc41&zwj;\\\\ud83d\\\\udde8',\\n  'eyeglasses':'\\\\ud83d\\\\udc53',\\n  'eyes':'\\\\ud83d\\\\udc40',\\n  'face_with_head_bandage':'\\\\ud83e\\\\udd15',\\n  'face_with_thermometer':'\\\\ud83e\\\\udd12',\\n  'fist_oncoming':'\\\\ud83d\\\\udc4a',\\n  'factory':'\\\\ud83c\\\\udfed',\\n  'fallen_leaf':'\\\\ud83c\\\\udf42',\\n  'family_man_woman_boy':'\\\\ud83d\\\\udc6a',\\n  'family_man_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_boy_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_girl_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_girl_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_man_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_man_boy_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_man_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_man_girl_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_man_girl_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_woman_boy_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_woman_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67',\\n  'family_man_woman_girl_boy':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_man_woman_girl_girl':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_boy_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_girl_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_girl_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_woman_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_woman_boy_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc66&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_woman_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67',\\n  'family_woman_woman_girl_boy':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc66',\\n  'family_woman_woman_girl_girl':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udc67&zwj;\\\\ud83d\\\\udc67',\\n  'fast_forward':'\\\\u23e9',\\n  'fax':'\\\\ud83d\\\\udce0',\\n  'fearful':'\\\\ud83d\\\\ude28',\\n  'feet':'\\\\ud83d\\\\udc3e',\\n  'female_detective':'\\\\ud83d\\\\udd75\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'ferris_wheel':'\\\\ud83c\\\\udfa1',\\n  'ferry':'\\\\u26f4',\\n  'field_hockey':'\\\\ud83c\\\\udfd1',\\n  'file_cabinet':'\\\\ud83d\\\\uddc4',\\n  'file_folder':'\\\\ud83d\\\\udcc1',\\n  'film_projector':'\\\\ud83d\\\\udcfd',\\n  'film_strip':'\\\\ud83c\\\\udf9e',\\n  'fire':'\\\\ud83d\\\\udd25',\\n  'fire_engine':'\\\\ud83d\\\\ude92',\\n  'fireworks':'\\\\ud83c\\\\udf86',\\n  'first_quarter_moon':'\\\\ud83c\\\\udf13',\\n  'first_quarter_moon_with_face':'\\\\ud83c\\\\udf1b',\\n  'fish':'\\\\ud83d\\\\udc1f',\\n  'fish_cake':'\\\\ud83c\\\\udf65',\\n  'fishing_pole_and_fish':'\\\\ud83c\\\\udfa3',\\n  'fist_raised':'\\\\u270a',\\n  'fist_left':'\\\\ud83e\\\\udd1b',\\n  'fist_right':'\\\\ud83e\\\\udd1c',\\n  'flags':'\\\\ud83c\\\\udf8f',\\n  'flashlight':'\\\\ud83d\\\\udd26',\\n  'fleur_de_lis':'\\\\u269c\\\\ufe0f',\\n  'flight_arrival':'\\\\ud83d\\\\udeec',\\n  'flight_departure':'\\\\ud83d\\\\udeeb',\\n  'floppy_disk':'\\\\ud83d\\\\udcbe',\\n  'flower_playing_cards':'\\\\ud83c\\\\udfb4',\\n  'flushed':'\\\\ud83d\\\\ude33',\\n  'fog':'\\\\ud83c\\\\udf2b',\\n  'foggy':'\\\\ud83c\\\\udf01',\\n  'football':'\\\\ud83c\\\\udfc8',\\n  'footprints':'\\\\ud83d\\\\udc63',\\n  'fork_and_knife':'\\\\ud83c\\\\udf74',\\n  'fountain':'\\\\u26f2\\\\ufe0f',\\n  'fountain_pen':'\\\\ud83d\\\\udd8b',\\n  'four_leaf_clover':'\\\\ud83c\\\\udf40',\\n  'fox_face':'\\\\ud83e\\\\udd8a',\\n  'framed_picture':'\\\\ud83d\\\\uddbc',\\n  'free':'\\\\ud83c\\\\udd93',\\n  'fried_egg':'\\\\ud83c\\\\udf73',\\n  'fried_shrimp':'\\\\ud83c\\\\udf64',\\n  'fries':'\\\\ud83c\\\\udf5f',\\n  'frog':'\\\\ud83d\\\\udc38',\\n  'frowning':'\\\\ud83d\\\\ude26',\\n  'frowning_face':'\\\\u2639\\\\ufe0f',\\n  'frowning_man':'\\\\ud83d\\\\ude4d&zwj;\\\\u2642\\\\ufe0f',\\n  'frowning_woman':'\\\\ud83d\\\\ude4d',\\n  'middle_finger':'\\\\ud83d\\\\udd95',\\n  'fuelpump':'\\\\u26fd\\\\ufe0f',\\n  'full_moon':'\\\\ud83c\\\\udf15',\\n  'full_moon_with_face':'\\\\ud83c\\\\udf1d',\\n  'funeral_urn':'\\\\u26b1\\\\ufe0f',\\n  'game_die':'\\\\ud83c\\\\udfb2',\\n  'gear':'\\\\u2699\\\\ufe0f',\\n  'gem':'\\\\ud83d\\\\udc8e',\\n  'gemini':'\\\\u264a\\\\ufe0f',\\n  'ghost':'\\\\ud83d\\\\udc7b',\\n  'gift':'\\\\ud83c\\\\udf81',\\n  'gift_heart':'\\\\ud83d\\\\udc9d',\\n  'girl':'\\\\ud83d\\\\udc67',\\n  'globe_with_meridians':'\\\\ud83c\\\\udf10',\\n  'goal_net':'\\\\ud83e\\\\udd45',\\n  'goat':'\\\\ud83d\\\\udc10',\\n  'golf':'\\\\u26f3\\\\ufe0f',\\n  'golfing_man':'\\\\ud83c\\\\udfcc\\\\ufe0f',\\n  'golfing_woman':'\\\\ud83c\\\\udfcc\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'gorilla':'\\\\ud83e\\\\udd8d',\\n  'grapes':'\\\\ud83c\\\\udf47',\\n  'green_apple':'\\\\ud83c\\\\udf4f',\\n  'green_book':'\\\\ud83d\\\\udcd7',\\n  'green_heart':'\\\\ud83d\\\\udc9a',\\n  'green_salad':'\\\\ud83e\\\\udd57',\\n  'grey_exclamation':'\\\\u2755',\\n  'grey_question':'\\\\u2754',\\n  'grimacing':'\\\\ud83d\\\\ude2c',\\n  'grin':'\\\\ud83d\\\\ude01',\\n  'grinning':'\\\\ud83d\\\\ude00',\\n  'guardsman':'\\\\ud83d\\\\udc82',\\n  'guardswoman':'\\\\ud83d\\\\udc82&zwj;\\\\u2640\\\\ufe0f',\\n  'guitar':'\\\\ud83c\\\\udfb8',\\n  'gun':'\\\\ud83d\\\\udd2b',\\n  'haircut_woman':'\\\\ud83d\\\\udc87',\\n  'haircut_man':'\\\\ud83d\\\\udc87&zwj;\\\\u2642\\\\ufe0f',\\n  'hamburger':'\\\\ud83c\\\\udf54',\\n  'hammer':'\\\\ud83d\\\\udd28',\\n  'hammer_and_pick':'\\\\u2692',\\n  'hammer_and_wrench':'\\\\ud83d\\\\udee0',\\n  'hamster':'\\\\ud83d\\\\udc39',\\n  'hand':'\\\\u270b',\\n  'handbag':'\\\\ud83d\\\\udc5c',\\n  'handshake':'\\\\ud83e\\\\udd1d',\\n  'hankey':'\\\\ud83d\\\\udca9',\\n  'hatched_chick':'\\\\ud83d\\\\udc25',\\n  'hatching_chick':'\\\\ud83d\\\\udc23',\\n  'headphones':'\\\\ud83c\\\\udfa7',\\n  'hear_no_evil':'\\\\ud83d\\\\ude49',\\n  'heart':'\\\\u2764\\\\ufe0f',\\n  'heart_decoration':'\\\\ud83d\\\\udc9f',\\n  'heart_eyes':'\\\\ud83d\\\\ude0d',\\n  'heart_eyes_cat':'\\\\ud83d\\\\ude3b',\\n  'heartbeat':'\\\\ud83d\\\\udc93',\\n  'heartpulse':'\\\\ud83d\\\\udc97',\\n  'hearts':'\\\\u2665\\\\ufe0f',\\n  'heavy_check_mark':'\\\\u2714\\\\ufe0f',\\n  'heavy_division_sign':'\\\\u2797',\\n  'heavy_dollar_sign':'\\\\ud83d\\\\udcb2',\\n  'heavy_heart_exclamation':'\\\\u2763\\\\ufe0f',\\n  'heavy_minus_sign':'\\\\u2796',\\n  'heavy_multiplication_x':'\\\\u2716\\\\ufe0f',\\n  'heavy_plus_sign':'\\\\u2795',\\n  'helicopter':'\\\\ud83d\\\\ude81',\\n  'herb':'\\\\ud83c\\\\udf3f',\\n  'hibiscus':'\\\\ud83c\\\\udf3a',\\n  'high_brightness':'\\\\ud83d\\\\udd06',\\n  'high_heel':'\\\\ud83d\\\\udc60',\\n  'hocho':'\\\\ud83d\\\\udd2a',\\n  'hole':'\\\\ud83d\\\\udd73',\\n  'honey_pot':'\\\\ud83c\\\\udf6f',\\n  'horse':'\\\\ud83d\\\\udc34',\\n  'horse_racing':'\\\\ud83c\\\\udfc7',\\n  'hospital':'\\\\ud83c\\\\udfe5',\\n  'hot_pepper':'\\\\ud83c\\\\udf36',\\n  'hotdog':'\\\\ud83c\\\\udf2d',\\n  'hotel':'\\\\ud83c\\\\udfe8',\\n  'hotsprings':'\\\\u2668\\\\ufe0f',\\n  'hourglass':'\\\\u231b\\\\ufe0f',\\n  'hourglass_flowing_sand':'\\\\u23f3',\\n  'house':'\\\\ud83c\\\\udfe0',\\n  'house_with_garden':'\\\\ud83c\\\\udfe1',\\n  'houses':'\\\\ud83c\\\\udfd8',\\n  'hugs':'\\\\ud83e\\\\udd17',\\n  'hushed':'\\\\ud83d\\\\ude2f',\\n  'ice_cream':'\\\\ud83c\\\\udf68',\\n  'ice_hockey':'\\\\ud83c\\\\udfd2',\\n  'ice_skate':'\\\\u26f8',\\n  'icecream':'\\\\ud83c\\\\udf66',\\n  'id':'\\\\ud83c\\\\udd94',\\n  'ideograph_advantage':'\\\\ud83c\\\\ude50',\\n  'imp':'\\\\ud83d\\\\udc7f',\\n  'inbox_tray':'\\\\ud83d\\\\udce5',\\n  'incoming_envelope':'\\\\ud83d\\\\udce8',\\n  'tipping_hand_woman':'\\\\ud83d\\\\udc81',\\n  'information_source':'\\\\u2139\\\\ufe0f',\\n  'innocent':'\\\\ud83d\\\\ude07',\\n  'interrobang':'\\\\u2049\\\\ufe0f',\\n  'iphone':'\\\\ud83d\\\\udcf1',\\n  'izakaya_lantern':'\\\\ud83c\\\\udfee',\\n  'jack_o_lantern':'\\\\ud83c\\\\udf83',\\n  'japan':'\\\\ud83d\\\\uddfe',\\n  'japanese_castle':'\\\\ud83c\\\\udfef',\\n  'japanese_goblin':'\\\\ud83d\\\\udc7a',\\n  'japanese_ogre':'\\\\ud83d\\\\udc79',\\n  'jeans':'\\\\ud83d\\\\udc56',\\n  'joy':'\\\\ud83d\\\\ude02',\\n  'joy_cat':'\\\\ud83d\\\\ude39',\\n  'joystick':'\\\\ud83d\\\\udd79',\\n  'kaaba':'\\\\ud83d\\\\udd4b',\\n  'key':'\\\\ud83d\\\\udd11',\\n  'keyboard':'\\\\u2328\\\\ufe0f',\\n  'keycap_ten':'\\\\ud83d\\\\udd1f',\\n  'kick_scooter':'\\\\ud83d\\\\udef4',\\n  'kimono':'\\\\ud83d\\\\udc58',\\n  'kiss':'\\\\ud83d\\\\udc8b',\\n  'kissing':'\\\\ud83d\\\\ude17',\\n  'kissing_cat':'\\\\ud83d\\\\ude3d',\\n  'kissing_closed_eyes':'\\\\ud83d\\\\ude1a',\\n  'kissing_heart':'\\\\ud83d\\\\ude18',\\n  'kissing_smiling_eyes':'\\\\ud83d\\\\ude19',\\n  'kiwi_fruit':'\\\\ud83e\\\\udd5d',\\n  'koala':'\\\\ud83d\\\\udc28',\\n  'koko':'\\\\ud83c\\\\ude01',\\n  'label':'\\\\ud83c\\\\udff7',\\n  'large_blue_circle':'\\\\ud83d\\\\udd35',\\n  'large_blue_diamond':'\\\\ud83d\\\\udd37',\\n  'large_orange_diamond':'\\\\ud83d\\\\udd36',\\n  'last_quarter_moon':'\\\\ud83c\\\\udf17',\\n  'last_quarter_moon_with_face':'\\\\ud83c\\\\udf1c',\\n  'latin_cross':'\\\\u271d\\\\ufe0f',\\n  'laughing':'\\\\ud83d\\\\ude06',\\n  'leaves':'\\\\ud83c\\\\udf43',\\n  'ledger':'\\\\ud83d\\\\udcd2',\\n  'left_luggage':'\\\\ud83d\\\\udec5',\\n  'left_right_arrow':'\\\\u2194\\\\ufe0f',\\n  'leftwards_arrow_with_hook':'\\\\u21a9\\\\ufe0f',\\n  'lemon':'\\\\ud83c\\\\udf4b',\\n  'leo':'\\\\u264c\\\\ufe0f',\\n  'leopard':'\\\\ud83d\\\\udc06',\\n  'level_slider':'\\\\ud83c\\\\udf9a',\\n  'libra':'\\\\u264e\\\\ufe0f',\\n  'light_rail':'\\\\ud83d\\\\ude88',\\n  'link':'\\\\ud83d\\\\udd17',\\n  'lion':'\\\\ud83e\\\\udd81',\\n  'lips':'\\\\ud83d\\\\udc44',\\n  'lipstick':'\\\\ud83d\\\\udc84',\\n  'lizard':'\\\\ud83e\\\\udd8e',\\n  'lock':'\\\\ud83d\\\\udd12',\\n  'lock_with_ink_pen':'\\\\ud83d\\\\udd0f',\\n  'lollipop':'\\\\ud83c\\\\udf6d',\\n  'loop':'\\\\u27bf',\\n  'loud_sound':'\\\\ud83d\\\\udd0a',\\n  'loudspeaker':'\\\\ud83d\\\\udce2',\\n  'love_hotel':'\\\\ud83c\\\\udfe9',\\n  'love_letter':'\\\\ud83d\\\\udc8c',\\n  'low_brightness':'\\\\ud83d\\\\udd05',\\n  'lying_face':'\\\\ud83e\\\\udd25',\\n  'm':'\\\\u24c2\\\\ufe0f',\\n  'mag':'\\\\ud83d\\\\udd0d',\\n  'mag_right':'\\\\ud83d\\\\udd0e',\\n  'mahjong':'\\\\ud83c\\\\udc04\\\\ufe0f',\\n  'mailbox':'\\\\ud83d\\\\udceb',\\n  'mailbox_closed':'\\\\ud83d\\\\udcea',\\n  'mailbox_with_mail':'\\\\ud83d\\\\udcec',\\n  'mailbox_with_no_mail':'\\\\ud83d\\\\udced',\\n  'man':'\\\\ud83d\\\\udc68',\\n  'man_artist':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfa8',\\n  'man_astronaut':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\ude80',\\n  'man_cartwheeling':'\\\\ud83e\\\\udd38&zwj;\\\\u2642\\\\ufe0f',\\n  'man_cook':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udf73',\\n  'man_dancing':'\\\\ud83d\\\\udd7a',\\n  'man_facepalming':'\\\\ud83e\\\\udd26&zwj;\\\\u2642\\\\ufe0f',\\n  'man_factory_worker':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfed',\\n  'man_farmer':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udf3e',\\n  'man_firefighter':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\ude92',\\n  'man_health_worker':'\\\\ud83d\\\\udc68&zwj;\\\\u2695\\\\ufe0f',\\n  'man_in_tuxedo':'\\\\ud83e\\\\udd35',\\n  'man_judge':'\\\\ud83d\\\\udc68&zwj;\\\\u2696\\\\ufe0f',\\n  'man_juggling':'\\\\ud83e\\\\udd39&zwj;\\\\u2642\\\\ufe0f',\\n  'man_mechanic':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udd27',\\n  'man_office_worker':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udcbc',\\n  'man_pilot':'\\\\ud83d\\\\udc68&zwj;\\\\u2708\\\\ufe0f',\\n  'man_playing_handball':'\\\\ud83e\\\\udd3e&zwj;\\\\u2642\\\\ufe0f',\\n  'man_playing_water_polo':'\\\\ud83e\\\\udd3d&zwj;\\\\u2642\\\\ufe0f',\\n  'man_scientist':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udd2c',\\n  'man_shrugging':'\\\\ud83e\\\\udd37&zwj;\\\\u2642\\\\ufe0f',\\n  'man_singer':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfa4',\\n  'man_student':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udf93',\\n  'man_teacher':'\\\\ud83d\\\\udc68&zwj;\\\\ud83c\\\\udfeb',\\n  'man_technologist':'\\\\ud83d\\\\udc68&zwj;\\\\ud83d\\\\udcbb',\\n  'man_with_gua_pi_mao':'\\\\ud83d\\\\udc72',\\n  'man_with_turban':'\\\\ud83d\\\\udc73',\\n  'tangerine':'\\\\ud83c\\\\udf4a',\\n  'mans_shoe':'\\\\ud83d\\\\udc5e',\\n  'mantelpiece_clock':'\\\\ud83d\\\\udd70',\\n  'maple_leaf':'\\\\ud83c\\\\udf41',\\n  'martial_arts_uniform':'\\\\ud83e\\\\udd4b',\\n  'mask':'\\\\ud83d\\\\ude37',\\n  'massage_woman':'\\\\ud83d\\\\udc86',\\n  'massage_man':'\\\\ud83d\\\\udc86&zwj;\\\\u2642\\\\ufe0f',\\n  'meat_on_bone':'\\\\ud83c\\\\udf56',\\n  'medal_military':'\\\\ud83c\\\\udf96',\\n  'medal_sports':'\\\\ud83c\\\\udfc5',\\n  'mega':'\\\\ud83d\\\\udce3',\\n  'melon':'\\\\ud83c\\\\udf48',\\n  'memo':'\\\\ud83d\\\\udcdd',\\n  'men_wrestling':'\\\\ud83e\\\\udd3c&zwj;\\\\u2642\\\\ufe0f',\\n  'menorah':'\\\\ud83d\\\\udd4e',\\n  'mens':'\\\\ud83d\\\\udeb9',\\n  'metal':'\\\\ud83e\\\\udd18',\\n  'metro':'\\\\ud83d\\\\ude87',\\n  'microphone':'\\\\ud83c\\\\udfa4',\\n  'microscope':'\\\\ud83d\\\\udd2c',\\n  'milk_glass':'\\\\ud83e\\\\udd5b',\\n  'milky_way':'\\\\ud83c\\\\udf0c',\\n  'minibus':'\\\\ud83d\\\\ude90',\\n  'minidisc':'\\\\ud83d\\\\udcbd',\\n  'mobile_phone_off':'\\\\ud83d\\\\udcf4',\\n  'money_mouth_face':'\\\\ud83e\\\\udd11',\\n  'money_with_wings':'\\\\ud83d\\\\udcb8',\\n  'moneybag':'\\\\ud83d\\\\udcb0',\\n  'monkey':'\\\\ud83d\\\\udc12',\\n  'monkey_face':'\\\\ud83d\\\\udc35',\\n  'monorail':'\\\\ud83d\\\\ude9d',\\n  'moon':'\\\\ud83c\\\\udf14',\\n  'mortar_board':'\\\\ud83c\\\\udf93',\\n  'mosque':'\\\\ud83d\\\\udd4c',\\n  'motor_boat':'\\\\ud83d\\\\udee5',\\n  'motor_scooter':'\\\\ud83d\\\\udef5',\\n  'motorcycle':'\\\\ud83c\\\\udfcd',\\n  'motorway':'\\\\ud83d\\\\udee3',\\n  'mount_fuji':'\\\\ud83d\\\\uddfb',\\n  'mountain':'\\\\u26f0',\\n  'mountain_biking_man':'\\\\ud83d\\\\udeb5',\\n  'mountain_biking_woman':'\\\\ud83d\\\\udeb5&zwj;\\\\u2640\\\\ufe0f',\\n  'mountain_cableway':'\\\\ud83d\\\\udea0',\\n  'mountain_railway':'\\\\ud83d\\\\ude9e',\\n  'mountain_snow':'\\\\ud83c\\\\udfd4',\\n  'mouse':'\\\\ud83d\\\\udc2d',\\n  'mouse2':'\\\\ud83d\\\\udc01',\\n  'movie_camera':'\\\\ud83c\\\\udfa5',\\n  'moyai':'\\\\ud83d\\\\uddff',\\n  'mrs_claus':'\\\\ud83e\\\\udd36',\\n  'muscle':'\\\\ud83d\\\\udcaa',\\n  'mushroom':'\\\\ud83c\\\\udf44',\\n  'musical_keyboard':'\\\\ud83c\\\\udfb9',\\n  'musical_note':'\\\\ud83c\\\\udfb5',\\n  'musical_score':'\\\\ud83c\\\\udfbc',\\n  'mute':'\\\\ud83d\\\\udd07',\\n  'nail_care':'\\\\ud83d\\\\udc85',\\n  'name_badge':'\\\\ud83d\\\\udcdb',\\n  'national_park':'\\\\ud83c\\\\udfde',\\n  'nauseated_face':'\\\\ud83e\\\\udd22',\\n  'necktie':'\\\\ud83d\\\\udc54',\\n  'negative_squared_cross_mark':'\\\\u274e',\\n  'nerd_face':'\\\\ud83e\\\\udd13',\\n  'neutral_face':'\\\\ud83d\\\\ude10',\\n  'new':'\\\\ud83c\\\\udd95',\\n  'new_moon':'\\\\ud83c\\\\udf11',\\n  'new_moon_with_face':'\\\\ud83c\\\\udf1a',\\n  'newspaper':'\\\\ud83d\\\\udcf0',\\n  'newspaper_roll':'\\\\ud83d\\\\uddde',\\n  'next_track_button':'\\\\u23ed',\\n  'ng':'\\\\ud83c\\\\udd96',\\n  'no_good_man':'\\\\ud83d\\\\ude45&zwj;\\\\u2642\\\\ufe0f',\\n  'no_good_woman':'\\\\ud83d\\\\ude45',\\n  'night_with_stars':'\\\\ud83c\\\\udf03',\\n  'no_bell':'\\\\ud83d\\\\udd15',\\n  'no_bicycles':'\\\\ud83d\\\\udeb3',\\n  'no_entry':'\\\\u26d4\\\\ufe0f',\\n  'no_entry_sign':'\\\\ud83d\\\\udeab',\\n  'no_mobile_phones':'\\\\ud83d\\\\udcf5',\\n  'no_mouth':'\\\\ud83d\\\\ude36',\\n  'no_pedestrians':'\\\\ud83d\\\\udeb7',\\n  'no_smoking':'\\\\ud83d\\\\udead',\\n  'non-potable_water':'\\\\ud83d\\\\udeb1',\\n  'nose':'\\\\ud83d\\\\udc43',\\n  'notebook':'\\\\ud83d\\\\udcd3',\\n  'notebook_with_decorative_cover':'\\\\ud83d\\\\udcd4',\\n  'notes':'\\\\ud83c\\\\udfb6',\\n  'nut_and_bolt':'\\\\ud83d\\\\udd29',\\n  'o':'\\\\u2b55\\\\ufe0f',\\n  'o2':'\\\\ud83c\\\\udd7e\\\\ufe0f',\\n  'ocean':'\\\\ud83c\\\\udf0a',\\n  'octopus':'\\\\ud83d\\\\udc19',\\n  'oden':'\\\\ud83c\\\\udf62',\\n  'office':'\\\\ud83c\\\\udfe2',\\n  'oil_drum':'\\\\ud83d\\\\udee2',\\n  'ok':'\\\\ud83c\\\\udd97',\\n  'ok_hand':'\\\\ud83d\\\\udc4c',\\n  'ok_man':'\\\\ud83d\\\\ude46&zwj;\\\\u2642\\\\ufe0f',\\n  'ok_woman':'\\\\ud83d\\\\ude46',\\n  'old_key':'\\\\ud83d\\\\udddd',\\n  'older_man':'\\\\ud83d\\\\udc74',\\n  'older_woman':'\\\\ud83d\\\\udc75',\\n  'om':'\\\\ud83d\\\\udd49',\\n  'on':'\\\\ud83d\\\\udd1b',\\n  'oncoming_automobile':'\\\\ud83d\\\\ude98',\\n  'oncoming_bus':'\\\\ud83d\\\\ude8d',\\n  'oncoming_police_car':'\\\\ud83d\\\\ude94',\\n  'oncoming_taxi':'\\\\ud83d\\\\ude96',\\n  'open_file_folder':'\\\\ud83d\\\\udcc2',\\n  'open_hands':'\\\\ud83d\\\\udc50',\\n  'open_mouth':'\\\\ud83d\\\\ude2e',\\n  'open_umbrella':'\\\\u2602\\\\ufe0f',\\n  'ophiuchus':'\\\\u26ce',\\n  'orange_book':'\\\\ud83d\\\\udcd9',\\n  'orthodox_cross':'\\\\u2626\\\\ufe0f',\\n  'outbox_tray':'\\\\ud83d\\\\udce4',\\n  'owl':'\\\\ud83e\\\\udd89',\\n  'ox':'\\\\ud83d\\\\udc02',\\n  'package':'\\\\ud83d\\\\udce6',\\n  'page_facing_up':'\\\\ud83d\\\\udcc4',\\n  'page_with_curl':'\\\\ud83d\\\\udcc3',\\n  'pager':'\\\\ud83d\\\\udcdf',\\n  'paintbrush':'\\\\ud83d\\\\udd8c',\\n  'palm_tree':'\\\\ud83c\\\\udf34',\\n  'pancakes':'\\\\ud83e\\\\udd5e',\\n  'panda_face':'\\\\ud83d\\\\udc3c',\\n  'paperclip':'\\\\ud83d\\\\udcce',\\n  'paperclips':'\\\\ud83d\\\\udd87',\\n  'parasol_on_ground':'\\\\u26f1',\\n  'parking':'\\\\ud83c\\\\udd7f\\\\ufe0f',\\n  'part_alternation_mark':'\\\\u303d\\\\ufe0f',\\n  'partly_sunny':'\\\\u26c5\\\\ufe0f',\\n  'passenger_ship':'\\\\ud83d\\\\udef3',\\n  'passport_control':'\\\\ud83d\\\\udec2',\\n  'pause_button':'\\\\u23f8',\\n  'peace_symbol':'\\\\u262e\\\\ufe0f',\\n  'peach':'\\\\ud83c\\\\udf51',\\n  'peanuts':'\\\\ud83e\\\\udd5c',\\n  'pear':'\\\\ud83c\\\\udf50',\\n  'pen':'\\\\ud83d\\\\udd8a',\\n  'pencil2':'\\\\u270f\\\\ufe0f',\\n  'penguin':'\\\\ud83d\\\\udc27',\\n  'pensive':'\\\\ud83d\\\\ude14',\\n  'performing_arts':'\\\\ud83c\\\\udfad',\\n  'persevere':'\\\\ud83d\\\\ude23',\\n  'person_fencing':'\\\\ud83e\\\\udd3a',\\n  'pouting_woman':'\\\\ud83d\\\\ude4e',\\n  'phone':'\\\\u260e\\\\ufe0f',\\n  'pick':'\\\\u26cf',\\n  'pig':'\\\\ud83d\\\\udc37',\\n  'pig2':'\\\\ud83d\\\\udc16',\\n  'pig_nose':'\\\\ud83d\\\\udc3d',\\n  'pill':'\\\\ud83d\\\\udc8a',\\n  'pineapple':'\\\\ud83c\\\\udf4d',\\n  'ping_pong':'\\\\ud83c\\\\udfd3',\\n  'pisces':'\\\\u2653\\\\ufe0f',\\n  'pizza':'\\\\ud83c\\\\udf55',\\n  'place_of_worship':'\\\\ud83d\\\\uded0',\\n  'plate_with_cutlery':'\\\\ud83c\\\\udf7d',\\n  'play_or_pause_button':'\\\\u23ef',\\n  'point_down':'\\\\ud83d\\\\udc47',\\n  'point_left':'\\\\ud83d\\\\udc48',\\n  'point_right':'\\\\ud83d\\\\udc49',\\n  'point_up':'\\\\u261d\\\\ufe0f',\\n  'point_up_2':'\\\\ud83d\\\\udc46',\\n  'police_car':'\\\\ud83d\\\\ude93',\\n  'policewoman':'\\\\ud83d\\\\udc6e&zwj;\\\\u2640\\\\ufe0f',\\n  'poodle':'\\\\ud83d\\\\udc29',\\n  'popcorn':'\\\\ud83c\\\\udf7f',\\n  'post_office':'\\\\ud83c\\\\udfe3',\\n  'postal_horn':'\\\\ud83d\\\\udcef',\\n  'postbox':'\\\\ud83d\\\\udcee',\\n  'potable_water':'\\\\ud83d\\\\udeb0',\\n  'potato':'\\\\ud83e\\\\udd54',\\n  'pouch':'\\\\ud83d\\\\udc5d',\\n  'poultry_leg':'\\\\ud83c\\\\udf57',\\n  'pound':'\\\\ud83d\\\\udcb7',\\n  'rage':'\\\\ud83d\\\\ude21',\\n  'pouting_cat':'\\\\ud83d\\\\ude3e',\\n  'pouting_man':'\\\\ud83d\\\\ude4e&zwj;\\\\u2642\\\\ufe0f',\\n  'pray':'\\\\ud83d\\\\ude4f',\\n  'prayer_beads':'\\\\ud83d\\\\udcff',\\n  'pregnant_woman':'\\\\ud83e\\\\udd30',\\n  'previous_track_button':'\\\\u23ee',\\n  'prince':'\\\\ud83e\\\\udd34',\\n  'princess':'\\\\ud83d\\\\udc78',\\n  'printer':'\\\\ud83d\\\\udda8',\\n  'purple_heart':'\\\\ud83d\\\\udc9c',\\n  'purse':'\\\\ud83d\\\\udc5b',\\n  'pushpin':'\\\\ud83d\\\\udccc',\\n  'put_litter_in_its_place':'\\\\ud83d\\\\udeae',\\n  'question':'\\\\u2753',\\n  'rabbit':'\\\\ud83d\\\\udc30',\\n  'rabbit2':'\\\\ud83d\\\\udc07',\\n  'racehorse':'\\\\ud83d\\\\udc0e',\\n  'racing_car':'\\\\ud83c\\\\udfce',\\n  'radio':'\\\\ud83d\\\\udcfb',\\n  'radio_button':'\\\\ud83d\\\\udd18',\\n  'radioactive':'\\\\u2622\\\\ufe0f',\\n  'railway_car':'\\\\ud83d\\\\ude83',\\n  'railway_track':'\\\\ud83d\\\\udee4',\\n  'rainbow':'\\\\ud83c\\\\udf08',\\n  'rainbow_flag':'\\\\ud83c\\\\udff3\\\\ufe0f&zwj;\\\\ud83c\\\\udf08',\\n  'raised_back_of_hand':'\\\\ud83e\\\\udd1a',\\n  'raised_hand_with_fingers_splayed':'\\\\ud83d\\\\udd90',\\n  'raised_hands':'\\\\ud83d\\\\ude4c',\\n  'raising_hand_woman':'\\\\ud83d\\\\ude4b',\\n  'raising_hand_man':'\\\\ud83d\\\\ude4b&zwj;\\\\u2642\\\\ufe0f',\\n  'ram':'\\\\ud83d\\\\udc0f',\\n  'ramen':'\\\\ud83c\\\\udf5c',\\n  'rat':'\\\\ud83d\\\\udc00',\\n  'record_button':'\\\\u23fa',\\n  'recycle':'\\\\u267b\\\\ufe0f',\\n  'red_circle':'\\\\ud83d\\\\udd34',\\n  'registered':'\\\\u00ae\\\\ufe0f',\\n  'relaxed':'\\\\u263a\\\\ufe0f',\\n  'relieved':'\\\\ud83d\\\\ude0c',\\n  'reminder_ribbon':'\\\\ud83c\\\\udf97',\\n  'repeat':'\\\\ud83d\\\\udd01',\\n  'repeat_one':'\\\\ud83d\\\\udd02',\\n  'rescue_worker_helmet':'\\\\u26d1',\\n  'restroom':'\\\\ud83d\\\\udebb',\\n  'revolving_hearts':'\\\\ud83d\\\\udc9e',\\n  'rewind':'\\\\u23ea',\\n  'rhinoceros':'\\\\ud83e\\\\udd8f',\\n  'ribbon':'\\\\ud83c\\\\udf80',\\n  'rice':'\\\\ud83c\\\\udf5a',\\n  'rice_ball':'\\\\ud83c\\\\udf59',\\n  'rice_cracker':'\\\\ud83c\\\\udf58',\\n  'rice_scene':'\\\\ud83c\\\\udf91',\\n  'right_anger_bubble':'\\\\ud83d\\\\uddef',\\n  'ring':'\\\\ud83d\\\\udc8d',\\n  'robot':'\\\\ud83e\\\\udd16',\\n  'rocket':'\\\\ud83d\\\\ude80',\\n  'rofl':'\\\\ud83e\\\\udd23',\\n  'roll_eyes':'\\\\ud83d\\\\ude44',\\n  'roller_coaster':'\\\\ud83c\\\\udfa2',\\n  'rooster':'\\\\ud83d\\\\udc13',\\n  'rose':'\\\\ud83c\\\\udf39',\\n  'rosette':'\\\\ud83c\\\\udff5',\\n  'rotating_light':'\\\\ud83d\\\\udea8',\\n  'round_pushpin':'\\\\ud83d\\\\udccd',\\n  'rowing_man':'\\\\ud83d\\\\udea3',\\n  'rowing_woman':'\\\\ud83d\\\\udea3&zwj;\\\\u2640\\\\ufe0f',\\n  'rugby_football':'\\\\ud83c\\\\udfc9',\\n  'running_man':'\\\\ud83c\\\\udfc3',\\n  'running_shirt_with_sash':'\\\\ud83c\\\\udfbd',\\n  'running_woman':'\\\\ud83c\\\\udfc3&zwj;\\\\u2640\\\\ufe0f',\\n  'sa':'\\\\ud83c\\\\ude02\\\\ufe0f',\\n  'sagittarius':'\\\\u2650\\\\ufe0f',\\n  'sake':'\\\\ud83c\\\\udf76',\\n  'sandal':'\\\\ud83d\\\\udc61',\\n  'santa':'\\\\ud83c\\\\udf85',\\n  'satellite':'\\\\ud83d\\\\udce1',\\n  'saxophone':'\\\\ud83c\\\\udfb7',\\n  'school':'\\\\ud83c\\\\udfeb',\\n  'school_satchel':'\\\\ud83c\\\\udf92',\\n  'scissors':'\\\\u2702\\\\ufe0f',\\n  'scorpion':'\\\\ud83e\\\\udd82',\\n  'scorpius':'\\\\u264f\\\\ufe0f',\\n  'scream':'\\\\ud83d\\\\ude31',\\n  'scream_cat':'\\\\ud83d\\\\ude40',\\n  'scroll':'\\\\ud83d\\\\udcdc',\\n  'seat':'\\\\ud83d\\\\udcba',\\n  'secret':'\\\\u3299\\\\ufe0f',\\n  'see_no_evil':'\\\\ud83d\\\\ude48',\\n  'seedling':'\\\\ud83c\\\\udf31',\\n  'selfie':'\\\\ud83e\\\\udd33',\\n  'shallow_pan_of_food':'\\\\ud83e\\\\udd58',\\n  'shamrock':'\\\\u2618\\\\ufe0f',\\n  'shark':'\\\\ud83e\\\\udd88',\\n  'shaved_ice':'\\\\ud83c\\\\udf67',\\n  'sheep':'\\\\ud83d\\\\udc11',\\n  'shell':'\\\\ud83d\\\\udc1a',\\n  'shield':'\\\\ud83d\\\\udee1',\\n  'shinto_shrine':'\\\\u26e9',\\n  'ship':'\\\\ud83d\\\\udea2',\\n  'shirt':'\\\\ud83d\\\\udc55',\\n  'shopping':'\\\\ud83d\\\\udecd',\\n  'shopping_cart':'\\\\ud83d\\\\uded2',\\n  'shower':'\\\\ud83d\\\\udebf',\\n  'shrimp':'\\\\ud83e\\\\udd90',\\n  'signal_strength':'\\\\ud83d\\\\udcf6',\\n  'six_pointed_star':'\\\\ud83d\\\\udd2f',\\n  'ski':'\\\\ud83c\\\\udfbf',\\n  'skier':'\\\\u26f7',\\n  'skull':'\\\\ud83d\\\\udc80',\\n  'skull_and_crossbones':'\\\\u2620\\\\ufe0f',\\n  'sleeping':'\\\\ud83d\\\\ude34',\\n  'sleeping_bed':'\\\\ud83d\\\\udecc',\\n  'sleepy':'\\\\ud83d\\\\ude2a',\\n  'slightly_frowning_face':'\\\\ud83d\\\\ude41',\\n  'slightly_smiling_face':'\\\\ud83d\\\\ude42',\\n  'slot_machine':'\\\\ud83c\\\\udfb0',\\n  'small_airplane':'\\\\ud83d\\\\udee9',\\n  'small_blue_diamond':'\\\\ud83d\\\\udd39',\\n  'small_orange_diamond':'\\\\ud83d\\\\udd38',\\n  'small_red_triangle':'\\\\ud83d\\\\udd3a',\\n  'small_red_triangle_down':'\\\\ud83d\\\\udd3b',\\n  'smile':'\\\\ud83d\\\\ude04',\\n  'smile_cat':'\\\\ud83d\\\\ude38',\\n  'smiley':'\\\\ud83d\\\\ude03',\\n  'smiley_cat':'\\\\ud83d\\\\ude3a',\\n  'smiling_imp':'\\\\ud83d\\\\ude08',\\n  'smirk':'\\\\ud83d\\\\ude0f',\\n  'smirk_cat':'\\\\ud83d\\\\ude3c',\\n  'smoking':'\\\\ud83d\\\\udeac',\\n  'snail':'\\\\ud83d\\\\udc0c',\\n  'snake':'\\\\ud83d\\\\udc0d',\\n  'sneezing_face':'\\\\ud83e\\\\udd27',\\n  'snowboarder':'\\\\ud83c\\\\udfc2',\\n  'snowflake':'\\\\u2744\\\\ufe0f',\\n  'snowman':'\\\\u26c4\\\\ufe0f',\\n  'snowman_with_snow':'\\\\u2603\\\\ufe0f',\\n  'sob':'\\\\ud83d\\\\ude2d',\\n  'soccer':'\\\\u26bd\\\\ufe0f',\\n  'soon':'\\\\ud83d\\\\udd1c',\\n  'sos':'\\\\ud83c\\\\udd98',\\n  'sound':'\\\\ud83d\\\\udd09',\\n  'space_invader':'\\\\ud83d\\\\udc7e',\\n  'spades':'\\\\u2660\\\\ufe0f',\\n  'spaghetti':'\\\\ud83c\\\\udf5d',\\n  'sparkle':'\\\\u2747\\\\ufe0f',\\n  'sparkler':'\\\\ud83c\\\\udf87',\\n  'sparkles':'\\\\u2728',\\n  'sparkling_heart':'\\\\ud83d\\\\udc96',\\n  'speak_no_evil':'\\\\ud83d\\\\ude4a',\\n  'speaker':'\\\\ud83d\\\\udd08',\\n  'speaking_head':'\\\\ud83d\\\\udde3',\\n  'speech_balloon':'\\\\ud83d\\\\udcac',\\n  'speedboat':'\\\\ud83d\\\\udea4',\\n  'spider':'\\\\ud83d\\\\udd77',\\n  'spider_web':'\\\\ud83d\\\\udd78',\\n  'spiral_calendar':'\\\\ud83d\\\\uddd3',\\n  'spiral_notepad':'\\\\ud83d\\\\uddd2',\\n  'spoon':'\\\\ud83e\\\\udd44',\\n  'squid':'\\\\ud83e\\\\udd91',\\n  'stadium':'\\\\ud83c\\\\udfdf',\\n  'star':'\\\\u2b50\\\\ufe0f',\\n  'star2':'\\\\ud83c\\\\udf1f',\\n  'star_and_crescent':'\\\\u262a\\\\ufe0f',\\n  'star_of_david':'\\\\u2721\\\\ufe0f',\\n  'stars':'\\\\ud83c\\\\udf20',\\n  'station':'\\\\ud83d\\\\ude89',\\n  'statue_of_liberty':'\\\\ud83d\\\\uddfd',\\n  'steam_locomotive':'\\\\ud83d\\\\ude82',\\n  'stew':'\\\\ud83c\\\\udf72',\\n  'stop_button':'\\\\u23f9',\\n  'stop_sign':'\\\\ud83d\\\\uded1',\\n  'stopwatch':'\\\\u23f1',\\n  'straight_ruler':'\\\\ud83d\\\\udccf',\\n  'strawberry':'\\\\ud83c\\\\udf53',\\n  'stuck_out_tongue':'\\\\ud83d\\\\ude1b',\\n  'stuck_out_tongue_closed_eyes':'\\\\ud83d\\\\ude1d',\\n  'stuck_out_tongue_winking_eye':'\\\\ud83d\\\\ude1c',\\n  'studio_microphone':'\\\\ud83c\\\\udf99',\\n  'stuffed_flatbread':'\\\\ud83e\\\\udd59',\\n  'sun_behind_large_cloud':'\\\\ud83c\\\\udf25',\\n  'sun_behind_rain_cloud':'\\\\ud83c\\\\udf26',\\n  'sun_behind_small_cloud':'\\\\ud83c\\\\udf24',\\n  'sun_with_face':'\\\\ud83c\\\\udf1e',\\n  'sunflower':'\\\\ud83c\\\\udf3b',\\n  'sunglasses':'\\\\ud83d\\\\ude0e',\\n  'sunny':'\\\\u2600\\\\ufe0f',\\n  'sunrise':'\\\\ud83c\\\\udf05',\\n  'sunrise_over_mountains':'\\\\ud83c\\\\udf04',\\n  'surfing_man':'\\\\ud83c\\\\udfc4',\\n  'surfing_woman':'\\\\ud83c\\\\udfc4&zwj;\\\\u2640\\\\ufe0f',\\n  'sushi':'\\\\ud83c\\\\udf63',\\n  'suspension_railway':'\\\\ud83d\\\\ude9f',\\n  'sweat':'\\\\ud83d\\\\ude13',\\n  'sweat_drops':'\\\\ud83d\\\\udca6',\\n  'sweat_smile':'\\\\ud83d\\\\ude05',\\n  'sweet_potato':'\\\\ud83c\\\\udf60',\\n  'swimming_man':'\\\\ud83c\\\\udfca',\\n  'swimming_woman':'\\\\ud83c\\\\udfca&zwj;\\\\u2640\\\\ufe0f',\\n  'symbols':'\\\\ud83d\\\\udd23',\\n  'synagogue':'\\\\ud83d\\\\udd4d',\\n  'syringe':'\\\\ud83d\\\\udc89',\\n  'taco':'\\\\ud83c\\\\udf2e',\\n  'tada':'\\\\ud83c\\\\udf89',\\n  'tanabata_tree':'\\\\ud83c\\\\udf8b',\\n  'taurus':'\\\\u2649\\\\ufe0f',\\n  'taxi':'\\\\ud83d\\\\ude95',\\n  'tea':'\\\\ud83c\\\\udf75',\\n  'telephone_receiver':'\\\\ud83d\\\\udcde',\\n  'telescope':'\\\\ud83d\\\\udd2d',\\n  'tennis':'\\\\ud83c\\\\udfbe',\\n  'tent':'\\\\u26fa\\\\ufe0f',\\n  'thermometer':'\\\\ud83c\\\\udf21',\\n  'thinking':'\\\\ud83e\\\\udd14',\\n  'thought_balloon':'\\\\ud83d\\\\udcad',\\n  'ticket':'\\\\ud83c\\\\udfab',\\n  'tickets':'\\\\ud83c\\\\udf9f',\\n  'tiger':'\\\\ud83d\\\\udc2f',\\n  'tiger2':'\\\\ud83d\\\\udc05',\\n  'timer_clock':'\\\\u23f2',\\n  'tipping_hand_man':'\\\\ud83d\\\\udc81&zwj;\\\\u2642\\\\ufe0f',\\n  'tired_face':'\\\\ud83d\\\\ude2b',\\n  'tm':'\\\\u2122\\\\ufe0f',\\n  'toilet':'\\\\ud83d\\\\udebd',\\n  'tokyo_tower':'\\\\ud83d\\\\uddfc',\\n  'tomato':'\\\\ud83c\\\\udf45',\\n  'tongue':'\\\\ud83d\\\\udc45',\\n  'top':'\\\\ud83d\\\\udd1d',\\n  'tophat':'\\\\ud83c\\\\udfa9',\\n  'tornado':'\\\\ud83c\\\\udf2a',\\n  'trackball':'\\\\ud83d\\\\uddb2',\\n  'tractor':'\\\\ud83d\\\\ude9c',\\n  'traffic_light':'\\\\ud83d\\\\udea5',\\n  'train':'\\\\ud83d\\\\ude8b',\\n  'train2':'\\\\ud83d\\\\ude86',\\n  'tram':'\\\\ud83d\\\\ude8a',\\n  'triangular_flag_on_post':'\\\\ud83d\\\\udea9',\\n  'triangular_ruler':'\\\\ud83d\\\\udcd0',\\n  'trident':'\\\\ud83d\\\\udd31',\\n  'triumph':'\\\\ud83d\\\\ude24',\\n  'trolleybus':'\\\\ud83d\\\\ude8e',\\n  'trophy':'\\\\ud83c\\\\udfc6',\\n  'tropical_drink':'\\\\ud83c\\\\udf79',\\n  'tropical_fish':'\\\\ud83d\\\\udc20',\\n  'truck':'\\\\ud83d\\\\ude9a',\\n  'trumpet':'\\\\ud83c\\\\udfba',\\n  'tulip':'\\\\ud83c\\\\udf37',\\n  'tumbler_glass':'\\\\ud83e\\\\udd43',\\n  'turkey':'\\\\ud83e\\\\udd83',\\n  'turtle':'\\\\ud83d\\\\udc22',\\n  'tv':'\\\\ud83d\\\\udcfa',\\n  'twisted_rightwards_arrows':'\\\\ud83d\\\\udd00',\\n  'two_hearts':'\\\\ud83d\\\\udc95',\\n  'two_men_holding_hands':'\\\\ud83d\\\\udc6c',\\n  'two_women_holding_hands':'\\\\ud83d\\\\udc6d',\\n  'u5272':'\\\\ud83c\\\\ude39',\\n  'u5408':'\\\\ud83c\\\\ude34',\\n  'u55b6':'\\\\ud83c\\\\ude3a',\\n  'u6307':'\\\\ud83c\\\\ude2f\\\\ufe0f',\\n  'u6708':'\\\\ud83c\\\\ude37\\\\ufe0f',\\n  'u6709':'\\\\ud83c\\\\ude36',\\n  'u6e80':'\\\\ud83c\\\\ude35',\\n  'u7121':'\\\\ud83c\\\\ude1a\\\\ufe0f',\\n  'u7533':'\\\\ud83c\\\\ude38',\\n  'u7981':'\\\\ud83c\\\\ude32',\\n  'u7a7a':'\\\\ud83c\\\\ude33',\\n  'umbrella':'\\\\u2614\\\\ufe0f',\\n  'unamused':'\\\\ud83d\\\\ude12',\\n  'underage':'\\\\ud83d\\\\udd1e',\\n  'unicorn':'\\\\ud83e\\\\udd84',\\n  'unlock':'\\\\ud83d\\\\udd13',\\n  'up':'\\\\ud83c\\\\udd99',\\n  'upside_down_face':'\\\\ud83d\\\\ude43',\\n  'v':'\\\\u270c\\\\ufe0f',\\n  'vertical_traffic_light':'\\\\ud83d\\\\udea6',\\n  'vhs':'\\\\ud83d\\\\udcfc',\\n  'vibration_mode':'\\\\ud83d\\\\udcf3',\\n  'video_camera':'\\\\ud83d\\\\udcf9',\\n  'video_game':'\\\\ud83c\\\\udfae',\\n  'violin':'\\\\ud83c\\\\udfbb',\\n  'virgo':'\\\\u264d\\\\ufe0f',\\n  'volcano':'\\\\ud83c\\\\udf0b',\\n  'volleyball':'\\\\ud83c\\\\udfd0',\\n  'vs':'\\\\ud83c\\\\udd9a',\\n  'vulcan_salute':'\\\\ud83d\\\\udd96',\\n  'walking_man':'\\\\ud83d\\\\udeb6',\\n  'walking_woman':'\\\\ud83d\\\\udeb6&zwj;\\\\u2640\\\\ufe0f',\\n  'waning_crescent_moon':'\\\\ud83c\\\\udf18',\\n  'waning_gibbous_moon':'\\\\ud83c\\\\udf16',\\n  'warning':'\\\\u26a0\\\\ufe0f',\\n  'wastebasket':'\\\\ud83d\\\\uddd1',\\n  'watch':'\\\\u231a\\\\ufe0f',\\n  'water_buffalo':'\\\\ud83d\\\\udc03',\\n  'watermelon':'\\\\ud83c\\\\udf49',\\n  'wave':'\\\\ud83d\\\\udc4b',\\n  'wavy_dash':'\\\\u3030\\\\ufe0f',\\n  'waxing_crescent_moon':'\\\\ud83c\\\\udf12',\\n  'wc':'\\\\ud83d\\\\udebe',\\n  'weary':'\\\\ud83d\\\\ude29',\\n  'wedding':'\\\\ud83d\\\\udc92',\\n  'weight_lifting_man':'\\\\ud83c\\\\udfcb\\\\ufe0f',\\n  'weight_lifting_woman':'\\\\ud83c\\\\udfcb\\\\ufe0f&zwj;\\\\u2640\\\\ufe0f',\\n  'whale':'\\\\ud83d\\\\udc33',\\n  'whale2':'\\\\ud83d\\\\udc0b',\\n  'wheel_of_dharma':'\\\\u2638\\\\ufe0f',\\n  'wheelchair':'\\\\u267f\\\\ufe0f',\\n  'white_check_mark':'\\\\u2705',\\n  'white_circle':'\\\\u26aa\\\\ufe0f',\\n  'white_flag':'\\\\ud83c\\\\udff3\\\\ufe0f',\\n  'white_flower':'\\\\ud83d\\\\udcae',\\n  'white_large_square':'\\\\u2b1c\\\\ufe0f',\\n  'white_medium_small_square':'\\\\u25fd\\\\ufe0f',\\n  'white_medium_square':'\\\\u25fb\\\\ufe0f',\\n  'white_small_square':'\\\\u25ab\\\\ufe0f',\\n  'white_square_button':'\\\\ud83d\\\\udd33',\\n  'wilted_flower':'\\\\ud83e\\\\udd40',\\n  'wind_chime':'\\\\ud83c\\\\udf90',\\n  'wind_face':'\\\\ud83c\\\\udf2c',\\n  'wine_glass':'\\\\ud83c\\\\udf77',\\n  'wink':'\\\\ud83d\\\\ude09',\\n  'wolf':'\\\\ud83d\\\\udc3a',\\n  'woman':'\\\\ud83d\\\\udc69',\\n  'woman_artist':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfa8',\\n  'woman_astronaut':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\ude80',\\n  'woman_cartwheeling':'\\\\ud83e\\\\udd38&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_cook':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udf73',\\n  'woman_facepalming':'\\\\ud83e\\\\udd26&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_factory_worker':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfed',\\n  'woman_farmer':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udf3e',\\n  'woman_firefighter':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\ude92',\\n  'woman_health_worker':'\\\\ud83d\\\\udc69&zwj;\\\\u2695\\\\ufe0f',\\n  'woman_judge':'\\\\ud83d\\\\udc69&zwj;\\\\u2696\\\\ufe0f',\\n  'woman_juggling':'\\\\ud83e\\\\udd39&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_mechanic':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udd27',\\n  'woman_office_worker':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udcbc',\\n  'woman_pilot':'\\\\ud83d\\\\udc69&zwj;\\\\u2708\\\\ufe0f',\\n  'woman_playing_handball':'\\\\ud83e\\\\udd3e&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_playing_water_polo':'\\\\ud83e\\\\udd3d&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_scientist':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udd2c',\\n  'woman_shrugging':'\\\\ud83e\\\\udd37&zwj;\\\\u2640\\\\ufe0f',\\n  'woman_singer':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfa4',\\n  'woman_student':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udf93',\\n  'woman_teacher':'\\\\ud83d\\\\udc69&zwj;\\\\ud83c\\\\udfeb',\\n  'woman_technologist':'\\\\ud83d\\\\udc69&zwj;\\\\ud83d\\\\udcbb',\\n  'woman_with_turban':'\\\\ud83d\\\\udc73&zwj;\\\\u2640\\\\ufe0f',\\n  'womans_clothes':'\\\\ud83d\\\\udc5a',\\n  'womans_hat':'\\\\ud83d\\\\udc52',\\n  'women_wrestling':'\\\\ud83e\\\\udd3c&zwj;\\\\u2640\\\\ufe0f',\\n  'womens':'\\\\ud83d\\\\udeba',\\n  'world_map':'\\\\ud83d\\\\uddfa',\\n  'worried':'\\\\ud83d\\\\ude1f',\\n  'wrench':'\\\\ud83d\\\\udd27',\\n  'writing_hand':'\\\\u270d\\\\ufe0f',\\n  'x':'\\\\u274c',\\n  'yellow_heart':'\\\\ud83d\\\\udc9b',\\n  'yen':'\\\\ud83d\\\\udcb4',\\n  'yin_yang':'\\\\u262f\\\\ufe0f',\\n  'yum':'\\\\ud83d\\\\ude0b',\\n  'zap':'\\\\u26a1\\\\ufe0f',\\n  'zipper_mouth_face':'\\\\ud83e\\\\udd10',\\n  'zzz':'\\\\ud83d\\\\udca4',\\n\\n  /* special emojis :P */\\n  'octocat':  '<img alt=\\\":octocat:\\\" height=\\\"20\\\" width=\\\"20\\\" align=\\\"absmiddle\\\" src=\\\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\\\">',\\n  'showdown': '<span style=\\\"font-family: \\\\'Anonymous Pro\\\\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\\\">S</span>'\\n};\\n\\r\\n/**\\n * Created by Estevao on 31-05-2015.\\n */\\n\\n/**\\n * Showdown Converter class\\n * @class\\n * @param {object} [converterOptions]\\n * @returns {Converter}\\n */\\nshowdown.Converter = function (converterOptions) {\\n  'use strict';\\n\\n  var\\n      /**\\n       * Options used by this converter\\n       * @private\\n       * @type {{}}\\n       */\\n      options = {},\\n\\n      /**\\n       * Language extensions used by this converter\\n       * @private\\n       * @type {Array}\\n       */\\n      langExtensions = [],\\n\\n      /**\\n       * Output modifiers extensions used by this converter\\n       * @private\\n       * @type {Array}\\n       */\\n      outputModifiers = [],\\n\\n      /**\\n       * Event listeners\\n       * @private\\n       * @type {{}}\\n       */\\n      listeners = {},\\n\\n      /**\\n       * The flavor set in this converter\\n       */\\n      setConvFlavor = setFlavor,\\n\\n    /**\\n     * Metadata of the document\\n     * @type {{parsed: {}, raw: string, format: string}}\\n     */\\n      metadata = {\\n        parsed: {},\\n        raw: '',\\n        format: ''\\n      };\\n\\n  _constructor();\\n\\n  /**\\n   * Converter constructor\\n   * @private\\n   */\\n  function _constructor () {\\n    converterOptions = converterOptions || {};\\n\\n    for (var gOpt in globalOptions) {\\n      if (globalOptions.hasOwnProperty(gOpt)) {\\n        options[gOpt] = globalOptions[gOpt];\\n      }\\n    }\\n\\n    // Merge options\\n    if (typeof converterOptions === 'object') {\\n      for (var opt in converterOptions) {\\n        if (converterOptions.hasOwnProperty(opt)) {\\n          options[opt] = converterOptions[opt];\\n        }\\n      }\\n    } else {\\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\\n      ' was passed instead.');\\n    }\\n\\n    if (options.extensions) {\\n      showdown.helper.forEach(options.extensions, _parseExtension);\\n    }\\n  }\\n\\n  /**\\n   * Parse extension\\n   * @param {*} ext\\n   * @param {string} [name='']\\n   * @private\\n   */\\n  function _parseExtension (ext, name) {\\n\\n    name = name || null;\\n    // If it's a string, the extension was previously loaded\\n    if (showdown.helper.isString(ext)) {\\n      ext = showdown.helper.stdExtName(ext);\\n      name = ext;\\n\\n      // LEGACY_SUPPORT CODE\\n      if (showdown.extensions[ext]) {\\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\\n          'Please inform the developer that the extension should be updated!');\\n        legacyExtensionLoading(showdown.extensions[ext], ext);\\n        return;\\n      // END LEGACY SUPPORT CODE\\n\\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\\n        ext = extensions[ext];\\n\\n      } else {\\n        throw Error('Extension \\\"' + ext + '\\\" could not be loaded. It was either not found or is not a valid extension.');\\n      }\\n    }\\n\\n    if (typeof ext === 'function') {\\n      ext = ext();\\n    }\\n\\n    if (!showdown.helper.isArray(ext)) {\\n      ext = [ext];\\n    }\\n\\n    var validExt = validate(ext, name);\\n    if (!validExt.valid) {\\n      throw Error(validExt.error);\\n    }\\n\\n    for (var i = 0; i < ext.length; ++i) {\\n      switch (ext[i].type) {\\n\\n        case 'lang':\\n          langExtensions.push(ext[i]);\\n          break;\\n\\n        case 'output':\\n          outputModifiers.push(ext[i]);\\n          break;\\n      }\\n      if (ext[i].hasOwnProperty('listeners')) {\\n        for (var ln in ext[i].listeners) {\\n          if (ext[i].listeners.hasOwnProperty(ln)) {\\n            listen(ln, ext[i].listeners[ln]);\\n          }\\n        }\\n      }\\n    }\\n\\n  }\\n\\n  /**\\n   * LEGACY_SUPPORT\\n   * @param {*} ext\\n   * @param {string} name\\n   */\\n  function legacyExtensionLoading (ext, name) {\\n    if (typeof ext === 'function') {\\n      ext = ext(new showdown.Converter());\\n    }\\n    if (!showdown.helper.isArray(ext)) {\\n      ext = [ext];\\n    }\\n    var valid = validate(ext, name);\\n\\n    if (!valid.valid) {\\n      throw Error(valid.error);\\n    }\\n\\n    for (var i = 0; i < ext.length; ++i) {\\n      switch (ext[i].type) {\\n        case 'lang':\\n          langExtensions.push(ext[i]);\\n          break;\\n        case 'output':\\n          outputModifiers.push(ext[i]);\\n          break;\\n        default:// should never reach here\\n          throw Error('Extension loader error: Type unrecognized!!!');\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Listen to an event\\n   * @param {string} name\\n   * @param {function} callback\\n   */\\n  function listen (name, callback) {\\n    if (!showdown.helper.isString(name)) {\\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\\n    }\\n\\n    if (typeof callback !== 'function') {\\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\\n    }\\n\\n    if (!listeners.hasOwnProperty(name)) {\\n      listeners[name] = [];\\n    }\\n    listeners[name].push(callback);\\n  }\\n\\n  function rTrimInputText (text) {\\n    var rsp = text.match(/^\\\\s*/)[0].length,\\n        rgx = new RegExp('^\\\\\\\\s{0,' + rsp + '}', 'gm');\\n    return text.replace(rgx, '');\\n  }\\n\\n  /**\\n   * Dispatch an event\\n   * @private\\n   * @param {string} evtName Event name\\n   * @param {string} text Text\\n   * @param {{}} options Converter Options\\n   * @param {{}} globals\\n   * @returns {string}\\n   */\\n  this._dispatch = function dispatch (evtName, text, options, globals) {\\n    if (listeners.hasOwnProperty(evtName)) {\\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\\n        if (nText && typeof nText !== 'undefined') {\\n          text = nText;\\n        }\\n      }\\n    }\\n    return text;\\n  };\\n\\n  /**\\n   * Listen to an event\\n   * @param {string} name\\n   * @param {function} callback\\n   * @returns {showdown.Converter}\\n   */\\n  this.listen = function (name, callback) {\\n    listen(name, callback);\\n    return this;\\n  };\\n\\n  /**\\n   * Converts a markdown string into HTML\\n   * @param {string} text\\n   * @returns {*}\\n   */\\n  this.makeHtml = function (text) {\\n    //check if text is not falsy\\n    if (!text) {\\n      return text;\\n    }\\n\\n    var globals = {\\n      gHtmlBlocks:     [],\\n      gHtmlMdBlocks:   [],\\n      gHtmlSpans:      [],\\n      gUrls:           {},\\n      gTitles:         {},\\n      gDimensions:     {},\\n      gListLevel:      0,\\n      hashLinkCounts:  {},\\n      langExtensions:  langExtensions,\\n      outputModifiers: outputModifiers,\\n      converter:       this,\\n      ghCodeBlocks:    [],\\n      metadata: {\\n        parsed: {},\\n        raw: '',\\n        format: ''\\n      }\\n    };\\n\\n    // This lets us use ¨ trema as an escape char to avoid md5 hashes\\n    // The choice of character is arbitrary; anything that isn't\\n    // magic in Markdown will work.\\n    text = text.replace(/¨/g, '¨T');\\n\\n    // Replace $ with ¨D\\n    // RegExp interprets $ as a special character\\n    // when it's in a replacement string\\n    text = text.replace(/\\\\$/g, '¨D');\\n\\n    // Standardize line endings\\n    text = text.replace(/\\\\r\\\\n/g, '\\\\n'); // DOS to Unix\\n    text = text.replace(/\\\\r/g, '\\\\n'); // Mac to Unix\\n\\n    // Stardardize line spaces\\n    text = text.replace(/\\\\u00A0/g, '&nbsp;');\\n\\n    if (options.smartIndentationFix) {\\n      text = rTrimInputText(text);\\n    }\\n\\n    // Make sure text begins and ends with a couple of newlines:\\n    text = '\\\\n\\\\n' + text + '\\\\n\\\\n';\\n\\n    // detab\\n    text = showdown.subParser('detab')(text, options, globals);\\n\\n    /**\\n     * Strip any lines consisting only of spaces and tabs.\\n     * This makes subsequent regexs easier to write, because we can\\n     * match consecutive blank lines with /\\\\n+/ instead of something\\n     * contorted like /[ \\\\t]*\\\\n+/\\n     */\\n    text = text.replace(/^[ \\\\t]+$/mg, '');\\n\\n    //run languageExtensions\\n    showdown.helper.forEach(langExtensions, function (ext) {\\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\\n    });\\n\\n    // run the sub parsers\\n    text = showdown.subParser('metadata')(text, options, globals);\\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\\n    text = showdown.subParser('hashCodeTags')(text, options, globals);\\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\\n    text = showdown.subParser('blockGamut')(text, options, globals);\\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\\n\\n    // attacklab: Restore dollar signs\\n    text = text.replace(/¨D/g, '$$');\\n\\n    // attacklab: Restore tremas\\n    text = text.replace(/¨T/g, '¨');\\n\\n    // render a complete html document instead of a partial if the option is enabled\\n    text = showdown.subParser('completeHTMLDocument')(text, options, globals);\\n\\n    // Run output modifiers\\n    showdown.helper.forEach(outputModifiers, function (ext) {\\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\\n    });\\n\\n    // update metadata\\n    metadata = globals.metadata;\\n    return text;\\n  };\\n\\n  /**\\n   * Set an option of this Converter instance\\n   * @param {string} key\\n   * @param {*} value\\n   */\\n  this.setOption = function (key, value) {\\n    options[key] = value;\\n  };\\n\\n  /**\\n   * Get the option of this Converter instance\\n   * @param {string} key\\n   * @returns {*}\\n   */\\n  this.getOption = function (key) {\\n    return options[key];\\n  };\\n\\n  /**\\n   * Get the options of this Converter instance\\n   * @returns {{}}\\n   */\\n  this.getOptions = function () {\\n    return options;\\n  };\\n\\n  /**\\n   * Add extension to THIS converter\\n   * @param {{}} extension\\n   * @param {string} [name=null]\\n   */\\n  this.addExtension = function (extension, name) {\\n    name = name || null;\\n    _parseExtension(extension, name);\\n  };\\n\\n  /**\\n   * Use a global registered extension with THIS converter\\n   * @param {string} extensionName Name of the previously registered extension\\n   */\\n  this.useExtension = function (extensionName) {\\n    _parseExtension(extensionName);\\n  };\\n\\n  /**\\n   * Set the flavor THIS converter should use\\n   * @param {string} name\\n   */\\n  this.setFlavor = function (name) {\\n    if (!flavor.hasOwnProperty(name)) {\\n      throw Error(name + ' flavor was not found');\\n    }\\n    var preset = flavor[name];\\n    setConvFlavor = name;\\n    for (var option in preset) {\\n      if (preset.hasOwnProperty(option)) {\\n        options[option] = preset[option];\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Get the currently set flavor of this converter\\n   * @returns {string}\\n   */\\n  this.getFlavor = function () {\\n    return setConvFlavor;\\n  };\\n\\n  /**\\n   * Remove an extension from THIS converter.\\n   * Note: This is a costly operation. It's better to initialize a new converter\\n   * and specify the extensions you wish to use\\n   * @param {Array} extension\\n   */\\n  this.removeExtension = function (extension) {\\n    if (!showdown.helper.isArray(extension)) {\\n      extension = [extension];\\n    }\\n    for (var a = 0; a < extension.length; ++a) {\\n      var ext = extension[a];\\n      for (var i = 0; i < langExtensions.length; ++i) {\\n        if (langExtensions[i] === ext) {\\n          langExtensions[i].splice(i, 1);\\n        }\\n      }\\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\\n        if (outputModifiers[ii] === ext) {\\n          outputModifiers[ii].splice(i, 1);\\n        }\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Get all extension of THIS converter\\n   * @returns {{language: Array, output: Array}}\\n   */\\n  this.getAllExtensions = function () {\\n    return {\\n      language: langExtensions,\\n      output: outputModifiers\\n    };\\n  };\\n\\n  /**\\n   * Get the metadata of the previously parsed document\\n   * @param raw\\n   * @returns {string|{}}\\n   */\\n  this.getMetadata = function (raw) {\\n    if (raw) {\\n      return metadata.raw;\\n    } else {\\n      return metadata.parsed;\\n    }\\n  };\\n\\n  /**\\n   * Get the metadata format of the previously parsed document\\n   * @returns {string}\\n   */\\n  this.getMetadataFormat = function () {\\n    return metadata.format;\\n  };\\n\\n  /**\\n   * Private: set a single key, value metadata pair\\n   * @param {string} key\\n   * @param {string} value\\n   */\\n  this._setMetadataPair = function (key, value) {\\n    metadata.parsed[key] = value;\\n  };\\n\\n  /**\\n   * Private: set metadata format\\n   * @param {string} format\\n   */\\n  this._setMetadataFormat = function (format) {\\n    metadata.format = format;\\n  };\\n\\n  /**\\n   * Private: set metadata raw text\\n   * @param {string} raw\\n   */\\n  this._setMetadataRaw = function (raw) {\\n    metadata.raw = raw;\\n  };\\n};\\n\\r\\n/**\\n * Turn Markdown link shortcuts into XHTML <a> tags.\\n */\\nshowdown.subParser('anchors', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\\n\\n  var writeAnchorTag = function (wholeMatch, linkText, linkId, url, m5, m6, title) {\\n    if (showdown.helper.isUndefined(title)) {\\n      title = '';\\n    }\\n    linkId = linkId.toLowerCase();\\n\\n    // Special case for explicit empty url\\n    if (wholeMatch.search(/\\\\(<?\\\\s*>? ?(['\\\"].*['\\\"])?\\\\)$/m) > -1) {\\n      url = '';\\n    } else if (!url) {\\n      if (!linkId) {\\n        // lower-case and turn embedded newlines into spaces\\n        linkId = linkText.toLowerCase().replace(/ ?\\\\n/g, ' ');\\n      }\\n      url = '#' + linkId;\\n\\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\\n        url = globals.gUrls[linkId];\\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\\n          title = globals.gTitles[linkId];\\n        }\\n      } else {\\n        return wholeMatch;\\n      }\\n    }\\n\\n    //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance\\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n\\n    var result = '<a href=\\\"' + url + '\\\"';\\n\\n    if (title !== '' && title !== null) {\\n      title = title.replace(/\\\"/g, '&quot;');\\n      //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance\\n      title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n      result += ' title=\\\"' + title + '\\\"';\\n    }\\n\\n    // optionLinksInNewWindow only applies\\n    // to external links. Hash links (#) open in same page\\n    if (options.openLinksInNewWindow && !/^#/.test(url)) {\\n      // escaped _\\n      result += ' target=\\\"¨E95Eblank\\\"';\\n    }\\n\\n    result += '>' + linkText + '</a>';\\n\\n    return result;\\n  };\\n\\n  // First, handle reference-style links: [link text] [id]\\n  text = text.replace(/\\\\[((?:\\\\[[^\\\\]]*]|[^\\\\[\\\\]])*)] ?(?:\\\\n *)?\\\\[(.*?)]()()()()/g, writeAnchorTag);\\n\\n  // Next, inline-style links: [link text](url \\\"optional title\\\")\\n  // cases with crazy urls like ./image/cat1).png\\n  text = text.replace(/\\\\[((?:\\\\[[^\\\\]]*]|[^\\\\[\\\\]])*)]()[ \\\\t]*\\\\([ \\\\t]?<([^>]*)>(?:[ \\\\t]*(([\\\"'])([^\\\"]*?)\\\\5))?[ \\\\t]?\\\\)/g,\\n    writeAnchorTag);\\n\\n  // normal cases\\n  text = text.replace(/\\\\[((?:\\\\[[^\\\\]]*]|[^\\\\[\\\\]])*)]()[ \\\\t]*\\\\([ \\\\t]?<?([\\\\S]+?(?:\\\\([\\\\S]*?\\\\)[\\\\S]*?)?)>?(?:[ \\\\t]*(([\\\"'])([^\\\"]*?)\\\\5))?[ \\\\t]?\\\\)/g,\\n                      writeAnchorTag);\\n\\n  // handle reference-style shortcuts: [link text]\\n  // These must come last in case you've also got [link test][1]\\n  // or [link test](/foo)\\n  text = text.replace(/\\\\[([^\\\\[\\\\]]+)]()()()()()/g, writeAnchorTag);\\n\\n  // Lastly handle GithubMentions if option is enabled\\n  if (options.ghMentions) {\\n    text = text.replace(/(^|\\\\s)(\\\\\\\\)?(@([a-z\\\\d]+(?:[a-z\\\\d.-]+?[a-z\\\\d]+)*))/gmi, function (wm, st, escape, mentions, username) {\\n      if (escape === '\\\\\\\\') {\\n        return st + mentions;\\n      }\\n\\n      //check if options.ghMentionsLink is a string\\n      if (!showdown.helper.isString(options.ghMentionsLink)) {\\n        throw new Error('ghMentionsLink option must be a string');\\n      }\\n      var lnk = options.ghMentionsLink.replace(/\\\\{u}/g, username),\\n          target = '';\\n      if (options.openLinksInNewWindow) {\\n        target = ' target=\\\"¨E95Eblank\\\"';\\n      }\\n      return st + '<a href=\\\"' + lnk + '\\\"' + target + '>' + mentions + '</a>';\\n    });\\n  }\\n\\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n// url allowed chars [a-z\\\\d_.~:/?#[]@!$&'()*+,;=-]\\n\\nvar simpleURLRegex  = /([*~_]+|\\\\b)(((https?|ftp|dict):\\\\/\\\\/|www\\\\.)[^'\\\">\\\\s]+?\\\\.[^'\\\">\\\\s]+?)()(\\\\1)?(?=\\\\s|$)(?![\\\"<>])/gi,\\n    simpleURLRegex2 = /([*~_]+|\\\\b)(((https?|ftp|dict):\\\\/\\\\/|www\\\\.)[^'\\\">\\\\s]+\\\\.[^'\\\">\\\\s]+?)([.!?,()\\\\[\\\\]])?(\\\\1)?(?=\\\\s|$)(?![\\\"<>])/gi,\\n    delimUrlRegex   = /()<(((https?|ftp|dict):\\\\/\\\\/|www\\\\.)[^'\\\">\\\\s]+)()>()/gi,\\n    simpleMailRegex = /(^|\\\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\\\.[-a-z0-9]+)*\\\\.[a-z]+)(?=$|\\\\s)/gmi,\\n    delimMailRegex  = /<()(?:mailto:)?([-.\\\\w]+@[-a-z0-9]+(\\\\.[-a-z0-9]+)*\\\\.[a-z]+)>/gi,\\n\\n    replaceLink = function (options) {\\n      'use strict';\\n      return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {\\n        link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n        var lnkTxt = link,\\n            append = '',\\n            target = '',\\n            lmc    = leadingMagicChars || '',\\n            tmc    = trailingMagicChars || '';\\n        if (/^www\\\\./i.test(link)) {\\n          link = link.replace(/^www\\\\./i, 'http://www.');\\n        }\\n        if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\\n          append = trailingPunctuation;\\n        }\\n        if (options.openLinksInNewWindow) {\\n          target = ' target=\\\"¨E95Eblank\\\"';\\n        }\\n        return lmc + '<a href=\\\"' + link + '\\\"' + target + '>' + lnkTxt + '</a>' + append + tmc;\\n      };\\n    },\\n\\n    replaceMail = function (options, globals) {\\n      'use strict';\\n      return function (wholeMatch, b, mail) {\\n        var href = 'mailto:';\\n        b = b || '';\\n        mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);\\n        if (options.encodeEmails) {\\n          href = showdown.helper.encodeEmailAddress(href + mail);\\n          mail = showdown.helper.encodeEmailAddress(mail);\\n        } else {\\n          href = href + mail;\\n        }\\n        return b + '<a href=\\\"' + href + '\\\">' + mail + '</a>';\\n      };\\n    };\\n\\nshowdown.subParser('autoLinks', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\\n\\n  text = text.replace(delimUrlRegex, replaceLink(options));\\n  text = text.replace(delimMailRegex, replaceMail(options, globals));\\n\\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\\n\\n  return text;\\n});\\n\\nshowdown.subParser('simplifiedAutoLinks', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.simplifiedAutoLink) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);\\n\\n  if (options.excludeTrailingPunctuationFromURLs) {\\n    text = text.replace(simpleURLRegex2, replaceLink(options));\\n  } else {\\n    text = text.replace(simpleURLRegex, replaceLink(options));\\n  }\\n  text = text.replace(simpleMailRegex, replaceMail(options, globals));\\n\\n  text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * These are all the transformations that form block-level\\n * tags like paragraphs, headers, and list items.\\n */\\nshowdown.subParser('blockGamut', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\\n\\n  // we parse blockquotes first so that we can have headings and hrs\\n  // inside blockquotes\\n  text = showdown.subParser('blockQuotes')(text, options, globals);\\n  text = showdown.subParser('headers')(text, options, globals);\\n\\n  // Do Horizontal Rules:\\n  text = showdown.subParser('horizontalRule')(text, options, globals);\\n\\n  text = showdown.subParser('lists')(text, options, globals);\\n  text = showdown.subParser('codeBlocks')(text, options, globals);\\n  text = showdown.subParser('tables')(text, options, globals);\\n\\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\\n  // was to escape raw HTML in the original Markdown source. This time,\\n  // we're escaping the markup we've just created, so that we don't wrap\\n  // <p> tags around block-level tags.\\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\\n  text = showdown.subParser('paragraphs')(text, options, globals);\\n\\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\nshowdown.subParser('blockQuotes', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\\n\\n  // add a couple extra lines after the text and endtext mark\\n  text = text + '\\\\n\\\\n';\\n\\n  var rgx = /(^ {0,3}>[ \\\\t]?.+\\\\n(.+\\\\n)*\\\\n*)+/gm;\\n\\n  if (options.splitAdjacentBlockquotes) {\\n    rgx = /^ {0,3}>[\\\\s\\\\S]*?(?:\\\\n\\\\n)/gm;\\n  }\\n\\n  text = text.replace(rgx, function (bq) {\\n    // attacklab: hack around Konqueror 3.5.4 bug:\\n    // \\\"----------bug\\\".replace(/^-/g,\\\"\\\") == \\\"bug\\\"\\n    bq = bq.replace(/^[ \\\\t]*>[ \\\\t]?/gm, ''); // trim one level of quoting\\n\\n    // attacklab: clean up hack\\n    bq = bq.replace(/¨0/g, '');\\n\\n    bq = bq.replace(/^[ \\\\t]+$/gm, ''); // trim whitespace-only lines\\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\\n\\n    bq = bq.replace(/(^|\\\\n)/g, '$1  ');\\n    // These leading spaces screw with <pre> content, so we need to fix that:\\n    bq = bq.replace(/(\\\\s*<pre>[^\\\\r]+?<\\\\/pre>)/gm, function (wholeMatch, m1) {\\n      var pre = m1;\\n      // attacklab: hack around Konqueror 3.5.4 bug:\\n      pre = pre.replace(/^  /mg, '¨0');\\n      pre = pre.replace(/¨0/g, '');\\n      return pre;\\n    });\\n\\n    return showdown.subParser('hashBlock')('<blockquote>\\\\n' + bq + '\\\\n</blockquote>', options, globals);\\n  });\\n\\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Process Markdown `<pre><code>` blocks.\\n */\\nshowdown.subParser('codeBlocks', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\\n\\n  // sentinel workarounds for lack of \\\\A and \\\\Z, safari\\\\khtml bug\\n  text += '¨0';\\n\\n  var pattern = /(?:\\\\n\\\\n|^)((?:(?:[ ]{4}|\\\\t).*\\\\n+)+)(\\\\n*[ ]{0,3}[^ \\\\t\\\\n]|(?=¨0))/g;\\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\\n    var codeblock = m1,\\n        nextChar = m2,\\n        end = '\\\\n';\\n\\n    codeblock = showdown.subParser('outdent')(codeblock, options, globals);\\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\\n    codeblock = codeblock.replace(/^\\\\n+/g, ''); // trim leading newlines\\n    codeblock = codeblock.replace(/\\\\n+$/g, ''); // trim trailing newlines\\n\\n    if (options.omitExtraWLInCodeBlocks) {\\n      end = '';\\n    }\\n\\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\\n\\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\\n  });\\n\\n  // strip sentinel\\n  text = text.replace(/¨0/, '');\\n\\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n *\\n *   *  Backtick quotes are used for <code></code> spans.\\n *\\n *   *  You can use multiple backticks as the delimiters if you want to\\n *     include literal backticks in the code span. So, this input:\\n *\\n *         Just type ``foo `bar` baz`` at the prompt.\\n *\\n *       Will translate to:\\n *\\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\\n *\\n *    There's no arbitrary limit to the number of backticks you\\n *    can use as delimters. If you need three consecutive backticks\\n *    in your code, use four for delimiters, etc.\\n *\\n *  *  You can use spaces to get literal backticks at the edges:\\n *\\n *         ... type `` `bar` `` ...\\n *\\n *       Turns to:\\n *\\n *         ... type <code>`bar`</code> ...\\n */\\nshowdown.subParser('codeSpans', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\\n\\n  if (typeof(text) === 'undefined') {\\n    text = '';\\n  }\\n  text = text.replace(/(^|[^\\\\\\\\])(`+)([^\\\\r]*?[^`])\\\\2(?!`)/gm,\\n    function (wholeMatch, m1, m2, m3) {\\n      var c = m3;\\n      c = c.replace(/^([ \\\\t]*)/g, '');\\t// leading whitespace\\n      c = c.replace(/[ \\\\t]*$/g, '');\\t// trailing whitespace\\n      c = showdown.subParser('encodeCode')(c, options, globals);\\n      c = m1 + '<code>' + c + '</code>';\\n      c = showdown.subParser('hashHTMLSpans')(c, options, globals);\\n      return c;\\n    }\\n  );\\n\\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Turn Markdown link shortcuts into XHTML <a> tags.\\n */\\nshowdown.subParser('completeHTMLDocument', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.completeHTMLDocument) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);\\n\\n  var doctype = 'html',\\n      doctypeParsed = '<!DOCTYPE HTML>\\\\n',\\n      title = '',\\n      charset = '<meta charset=\\\"utf-8\\\">\\\\n',\\n      lang = '',\\n      metadata = '';\\n\\n  if (typeof globals.metadata.parsed.doctype !== 'undefined') {\\n    doctypeParsed = '<!DOCTYPE ' +  globals.metadata.parsed.doctype + '>\\\\n';\\n    doctype = globals.metadata.parsed.doctype.toString().toLowerCase();\\n    if (doctype === 'html' || doctype === 'html5') {\\n      charset = '<meta charset=\\\"utf-8\\\">';\\n    }\\n  }\\n\\n  for (var meta in globals.metadata.parsed) {\\n    if (globals.metadata.parsed.hasOwnProperty(meta)) {\\n      switch (meta.toLowerCase()) {\\n        case 'doctype':\\n          break;\\n\\n        case 'title':\\n          title = '<title>' +  globals.metadata.parsed.title + '</title>\\\\n';\\n          break;\\n\\n        case 'charset':\\n          if (doctype === 'html' || doctype === 'html5') {\\n            charset = '<meta charset=\\\"' + globals.metadata.parsed.charset + '\\\">\\\\n';\\n          } else {\\n            charset = '<meta name=\\\"charset\\\" content=\\\"' + globals.metadata.parsed.charset + '\\\">\\\\n';\\n          }\\n          break;\\n\\n        case 'language':\\n        case 'lang':\\n          lang = ' lang=\\\"' + globals.metadata.parsed[meta] + '\\\"';\\n          metadata += '<meta name=\\\"' + meta + '\\\" content=\\\"' + globals.metadata.parsed[meta] + '\\\">\\\\n';\\n          break;\\n\\n        default:\\n          metadata += '<meta name=\\\"' + meta + '\\\" content=\\\"' + globals.metadata.parsed[meta] + '\\\">\\\\n';\\n      }\\n    }\\n  }\\n\\n  text = doctypeParsed + '<html' + lang + '>\\\\n<head>\\\\n' + title + charset + metadata + '</head>\\\\n<body>\\\\n' + text.trim() + '\\\\n</body>\\\\n</html>';\\n\\n  text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Convert all tabs to spaces\\n */\\nshowdown.subParser('detab', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('detab.before', text, options, globals);\\n\\n  // expand first n-1 tabs\\n  text = text.replace(/\\\\t(?=\\\\t)/g, '    '); // g_tab_width\\n\\n  // replace the nth with two sentinels\\n  text = text.replace(/\\\\t/g, '¨A¨B');\\n\\n  // use the sentinel to anchor our regex so it doesn't explode\\n  text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {\\n    var leadingText = m1,\\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\\n\\n    // there *must* be a better way to do this:\\n    for (var i = 0; i < numSpaces; i++) {\\n      leadingText += ' ';\\n    }\\n\\n    return leadingText;\\n  });\\n\\n  // clean up sentinels\\n  text = text.replace(/¨A/g, '    ');  // g_tab_width\\n  text = text.replace(/¨B/g, '');\\n\\n  text = globals.converter._dispatch('detab.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('ellipsis', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('ellipsis.before', text, options, globals);\\n\\n  text = text.replace(/\\\\.\\\\.\\\\./g, '…');\\n\\n  text = globals.converter._dispatch('ellipsis.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * These are all the transformations that occur *within* block-level\\n * tags like paragraphs, headers, and list items.\\n */\\nshowdown.subParser('emoji', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.emoji) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('emoji.before', text, options, globals);\\n\\n  var emojiRgx = /:([\\\\S]+?):/g;\\n\\n  text = text.replace(emojiRgx, function (wm, emojiCode) {\\n    if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {\\n      return showdown.helper.emojis[emojiCode];\\n    }\\n    return wm;\\n  });\\n\\n  text = globals.converter._dispatch('emoji.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Smart processing for ampersands and angle brackets that need to be encoded.\\n */\\nshowdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals);\\n\\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\\n  // http://bumppo.net/projects/amputator/\\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\\\w+);)/g, '&amp;');\\n\\n  // Encode naked <'s\\n  text = text.replace(/<(?![a-z\\\\/?$!])/gi, '&lt;');\\n\\n  // Encode <\\n  text = text.replace(/</g, '&lt;');\\n\\n  // Encode >\\n  text = text.replace(/>/g, '&gt;');\\n\\n  text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Returns the string, with after processing the following backslash escape sequences.\\n *\\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\\n *\\n *    text = escapeCharacters(text,\\\"\\\\\\\\\\\",true);\\n *    text = escapeCharacters(text,\\\"`*_{}[]()>#+-.!\\\",true);\\n *\\n * ...but we're sidestepping its use of the (slow) RegExp constructor\\n * as an optimization for Firefox.  This function gets called a LOT.\\n */\\nshowdown.subParser('encodeBackslashEscapes', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);\\n\\n  text = text.replace(/\\\\\\\\(\\\\\\\\)/g, showdown.helper.escapeCharactersCallback);\\n  text = text.replace(/\\\\\\\\([`*_{}\\\\[\\\\]()>#+.!~=|-])/g, showdown.helper.escapeCharactersCallback);\\n\\n  text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Encode/escape certain characters inside Markdown code runs.\\n * The point is that in code, these characters are literals,\\n * and lose their special Markdown meanings.\\n */\\nshowdown.subParser('encodeCode', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('encodeCode.before', text, options, globals);\\n\\n  // Encode all ampersands; HTML entities are not\\n  // entities within a Markdown code span.\\n  text = text\\n    .replace(/&/g, '&amp;')\\n  // Do the angle bracket song and dance:\\n    .replace(/</g, '&lt;')\\n    .replace(/>/g, '&gt;')\\n  // Now, escape characters that are magic in Markdown:\\n    .replace(/([*_{}\\\\[\\\\]\\\\\\\\=~-])/g, showdown.helper.escapeCharactersCallback);\\n\\n  text = globals.converter._dispatch('encodeCode.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Within tags -- meaning between < and > -- encode [\\\\ ` * _ ~ =] so they\\n * don't conflict with their use in Markdown for code, italics and strong.\\n */\\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals);\\n\\n  // Build a regex to find HTML tags.\\n  var tags     = /<\\\\/?[a-z\\\\d_:-]+(?:[\\\\s]+[\\\\s\\\\S]+?)?>/gi,\\n      comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;\\n\\n  text = text.replace(tags, function (wholeMatch) {\\n    return wholeMatch\\n      .replace(/(.)<\\\\/?code>(?=.)/g, '$1`')\\n      .replace(/([\\\\\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\\n  });\\n\\n  text = text.replace(comments, function (wholeMatch) {\\n    return wholeMatch\\n      .replace(/([\\\\\\\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);\\n  });\\n\\n  text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Handle github codeblocks prior to running HashHTML so that\\n * HTML contained within the codeblock gets escaped properly\\n * Example:\\n * ```ruby\\n *     def hello_world(x)\\n *       puts \\\"Hello, #{x}\\\"\\n *     end\\n * ```\\n */\\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\\n  'use strict';\\n\\n  // early exit if option is not enabled\\n  if (!options.ghCodeBlocks) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\\n\\n  text += '¨0';\\n\\n  text = text.replace(/(?:^|\\\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\\\s`~]*)\\\\n([\\\\s\\\\S]*?)\\\\n(?: {0,3})\\\\1/g, function (wholeMatch, delim, language, codeblock) {\\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\\\n';\\n\\n    // First parse the github code block\\n    codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);\\n    codeblock = showdown.subParser('detab')(codeblock, options, globals);\\n    codeblock = codeblock.replace(/^\\\\n+/g, ''); // trim leading newlines\\n    codeblock = codeblock.replace(/\\\\n+$/g, ''); // trim trailing whitespace\\n\\n    codeblock = '<pre><code' + (language ? ' class=\\\"' + language + ' language-' + language + '\\\"' : '') + '>' + codeblock + end + '</code></pre>';\\n\\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\\n\\n    // Since GHCodeblocks can be false positives, we need to\\n    // store the primitive text and the parsed text in a global var,\\n    // and then return a token\\n    return '\\\\n\\\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\\\n\\\\n';\\n  });\\n\\n  // attacklab: strip sentinel\\n  text = text.replace(/¨0/, '');\\n\\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\\n});\\n\\r\\nshowdown.subParser('hashBlock', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashBlock.before', text, options, globals);\\n  text = text.replace(/(^\\\\n+|\\\\n+$)/g, '');\\n  text = '\\\\n\\\\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\\\n\\\\n';\\n  text = globals.converter._dispatch('hashBlock.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Hash and escape <code> elements that should not be parsed as markdown\\n */\\nshowdown.subParser('hashCodeTags', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);\\n\\n  var repFunc = function (wholeMatch, match, left, right) {\\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\\n    return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';\\n  };\\n\\n  // Hash naked <code>\\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\\\\\\\b[^>]*>', '</code>', 'gim');\\n\\n  text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('hashElement', function (text, options, globals) {\\n  'use strict';\\n\\n  return function (wholeMatch, m1) {\\n    var blockText = m1;\\n\\n    // Undo double lines\\n    blockText = blockText.replace(/\\\\n\\\\n/g, '\\\\n');\\n    blockText = blockText.replace(/^\\\\n/, '');\\n\\n    // strip trailing blank lines\\n    blockText = blockText.replace(/\\\\n+$/g, '');\\n\\n    // Replace the element text with a marker (\\\"¨KxK\\\" where x is its key)\\n    blockText = '\\\\n\\\\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\\\n\\\\n';\\n\\n    return blockText;\\n  };\\n});\\n\\r\\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);\\n\\n  var blockTags = [\\n        'pre',\\n        'div',\\n        'h1',\\n        'h2',\\n        'h3',\\n        'h4',\\n        'h5',\\n        'h6',\\n        'blockquote',\\n        'table',\\n        'dl',\\n        'ol',\\n        'ul',\\n        'script',\\n        'noscript',\\n        'form',\\n        'fieldset',\\n        'iframe',\\n        'math',\\n        'style',\\n        'section',\\n        'header',\\n        'footer',\\n        'nav',\\n        'article',\\n        'aside',\\n        'address',\\n        'audio',\\n        'canvas',\\n        'figure',\\n        'hgroup',\\n        'output',\\n        'video',\\n        'p'\\n      ],\\n      repFunc = function (wholeMatch, match, left, right) {\\n        var txt = wholeMatch;\\n        // check if this html element is marked as markdown\\n        // if so, it's contents should be parsed as markdown\\n        if (left.search(/\\\\bmarkdown\\\\b/) !== -1) {\\n          txt = left + globals.converter.makeHtml(match) + right;\\n        }\\n        return '\\\\n\\\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\\\n\\\\n';\\n      };\\n\\n  if (options.backslashEscapesHTMLTags) {\\n    // encode backslash escaped HTML tags\\n    text = text.replace(/\\\\\\\\<(\\\\/?[^>]+?)>/g, function (wm, inside) {\\n      return '&lt;' + inside + '&gt;';\\n    });\\n  }\\n\\n  // hash HTML Blocks\\n  for (var i = 0; i < blockTags.length; ++i) {\\n\\n    var opTagPos,\\n        rgx1     = new RegExp('^ {0,3}(<' + blockTags[i] + '\\\\\\\\b[^>]*>)', 'im'),\\n        patLeft  = '<' + blockTags[i] + '\\\\\\\\b[^>]*>',\\n        patRight = '</' + blockTags[i] + '>';\\n    // 1. Look for the first position of the first opening HTML tag in the text\\n    while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {\\n\\n      // if the HTML tag is \\\\ escaped, we need to escape it and break\\n\\n\\n      //2. Split the text in that position\\n      var subTexts = showdown.helper.splitAtIndex(text, opTagPos),\\n      //3. Match recursively\\n          newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im');\\n\\n      // prevent an infinite loop\\n      if (newSubText1 === subTexts[1]) {\\n        break;\\n      }\\n      text = subTexts[0].concat(newSubText1);\\n    }\\n  }\\n  // HR SPECIAL CASE\\n  text = text.replace(/(\\\\n {0,3}(<(hr)\\\\b([^<>])*?\\\\/?>)[ \\\\t]*(?=\\\\n{2,}))/g,\\n    showdown.subParser('hashElement')(text, options, globals));\\n\\n  // Special case for standalone HTML comments\\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\\n    return '\\\\n\\\\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\\\n\\\\n';\\n  }, '^ {0,3}<!--', '-->', 'gm');\\n\\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\\n  text = text.replace(/(?:\\\\n\\\\n)( {0,3}(?:<([?%])[^\\\\r]*?\\\\2>)[ \\\\t]*(?=\\\\n{2,}))/g,\\n    showdown.subParser('hashElement')(text, options, globals));\\n\\n  text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Hash span elements that should not be parsed as markdown\\n */\\nshowdown.subParser('hashHTMLSpans', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);\\n\\n  function hashHTMLSpan (html) {\\n    return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';\\n  }\\n\\n  // Hash Self Closing tags\\n  text = text.replace(/<[^>]+?\\\\/>/gi, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  // Hash tags without properties\\n  text = text.replace(/<([^>]+?)>[\\\\s\\\\S]*?<\\\\/\\\\1>/g, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  // Hash tags with properties\\n  text = text.replace(/<([^>]+?)\\\\s[^>]+?>[\\\\s\\\\S]*?<\\\\/\\\\1>/g, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  // Hash self closing tags without />\\n  text = text.replace(/<[^>]+?>/gi, function (wm) {\\n    return hashHTMLSpan(wm);\\n  });\\n\\n  /*showdown.helper.matchRecursiveRegExp(text, '<code\\\\\\\\b[^>]*>', '</code>', 'gi');*/\\n\\n  text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);\\n  return text;\\n});\\n\\n/**\\n * Unhash HTML spans\\n */\\nshowdown.subParser('unhashHTMLSpans', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);\\n\\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\\n    var repText = globals.gHtmlSpans[i],\\n        // limiter to prevent infinite loop (assume 10 as limit for recurse)\\n        limit = 0;\\n\\n    while (/¨C(\\\\d+)C/.test(repText)) {\\n      var num = RegExp.$1;\\n      repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);\\n      if (limit === 10) {\\n        console.error('maximum nesting of 10 spans reached!!!');\\n        break;\\n      }\\n      ++limit;\\n    }\\n    text = text.replace('¨C' + i + 'C', repText);\\n  }\\n\\n  text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Hash and escape <pre><code> elements that should not be parsed as markdown\\n */\\nshowdown.subParser('hashPreCodeTags', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);\\n\\n  var repFunc = function (wholeMatch, match, left, right) {\\n    // encode html entities\\n    var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;\\n    return '\\\\n\\\\n¨G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\\\n\\\\n';\\n  };\\n\\n  // Hash <pre><code>\\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\\\\\b[^>]*>\\\\\\\\s*<code\\\\\\\\b[^>]*>', '^ {0,3}</code>\\\\\\\\s*</pre>', 'gim');\\n\\n  text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('headers', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('headers.before', text, options, globals);\\n\\n  var headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\\n\\n  // Set text-style headers:\\n  //\\tHeader 1\\n  //\\t========\\n  //\\n  //\\tHeader 2\\n  //\\t--------\\n  //\\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\\\t]*\\\\n={2,}[ \\\\t]*\\\\n+/gm : /^(.+)[ \\\\t]*\\\\n=+[ \\\\t]*\\\\n+/gm,\\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\\\t]*\\\\n-{2,}[ \\\\t]*\\\\n+/gm : /^(.+)[ \\\\t]*\\\\n-+[ \\\\t]*\\\\n+/gm;\\n\\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\\n\\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\\n        hID = (options.noHeaderId) ? '' : ' id=\\\"' + headerId(m1) + '\\\"',\\n        hLevel = headerLevelStart,\\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\\n  });\\n\\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\\n        hID = (options.noHeaderId) ? '' : ' id=\\\"' + headerId(m1) + '\\\"',\\n        hLevel = headerLevelStart + 1,\\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\\n  });\\n\\n  // atx-style headers:\\n  //  # Header 1\\n  //  ## Header 2\\n  //  ## Header 2 with closing hashes ##\\n  //  ...\\n  //  ###### Header 6\\n  //\\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\\\t]+(.+?)[ \\\\t]*#*\\\\n+/gm : /^(#{1,6})[ \\\\t]*(.+?)[ \\\\t]*#*\\\\n+/gm;\\n\\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\\n    var hText = m2;\\n    if (options.customizedHeaderId) {\\n      hText = m2.replace(/\\\\s?\\\\{([^{]+?)}\\\\s*$/, '');\\n    }\\n\\n    var span = showdown.subParser('spanGamut')(hText, options, globals),\\n        hID = (options.noHeaderId) ? '' : ' id=\\\"' + headerId(m2) + '\\\"',\\n        hLevel = headerLevelStart - 1 + m1.length,\\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\\n\\n    return showdown.subParser('hashBlock')(header, options, globals);\\n  });\\n\\n  function headerId (m) {\\n    var title,\\n        prefix;\\n\\n    // It is separate from other options to allow combining prefix and customized\\n    if (options.customizedHeaderId) {\\n      var match = m.match(/\\\\{([^{]+?)}\\\\s*$/);\\n      if (match && match[1]) {\\n        m = match[1];\\n      }\\n    }\\n\\n    title = m;\\n\\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\\n    if (showdown.helper.isString(options.prefixHeaderId)) {\\n      prefix = options.prefixHeaderId;\\n    } else if (options.prefixHeaderId === true) {\\n      prefix = 'section-';\\n    } else {\\n      prefix = '';\\n    }\\n\\n    if (!options.rawPrefixHeaderId) {\\n      title = prefix + title;\\n    }\\n\\n    if (options.ghCompatibleHeaderId) {\\n      title = title\\n        .replace(/ /g, '-')\\n        // replace previously escaped chars (&, ¨ and $)\\n        .replace(/&amp;/g, '')\\n        .replace(/¨T/g, '')\\n        .replace(/¨D/g, '')\\n        // replace rest of the chars (&~$ are repeated as they might have been escaped)\\n        // borrowed from github's redcarpet (some they should produce similar results)\\n        .replace(/[&+$,\\\\/:;=?@\\\"#{}|^¨~\\\\[\\\\]`\\\\\\\\*)(%.!'<>]/g, '')\\n        .toLowerCase();\\n    } else if (options.rawHeaderId) {\\n      title = title\\n        .replace(/ /g, '-')\\n        // replace previously escaped chars (&, ¨ and $)\\n        .replace(/&amp;/g, '&')\\n        .replace(/¨T/g, '¨')\\n        .replace(/¨D/g, '$')\\n        // replace \\\" and '\\n        .replace(/[\\\"']/g, '-')\\n        .toLowerCase();\\n    } else {\\n      title = title\\n        .replace(/[^\\\\w]/g, '')\\n        .toLowerCase();\\n    }\\n\\n    if (options.rawPrefixHeaderId) {\\n      title = prefix + title;\\n    }\\n\\n    if (globals.hashLinkCounts[title]) {\\n      title = title + '-' + (globals.hashLinkCounts[title]++);\\n    } else {\\n      globals.hashLinkCounts[title] = 1;\\n    }\\n    return title;\\n  }\\n\\n  text = globals.converter._dispatch('headers.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Turn Markdown link shortcuts into XHTML <a> tags.\\n */\\nshowdown.subParser('horizontalRule', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('horizontalRule.before', text, options, globals);\\n\\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\\\t]*$/gm, key);\\n  text = text.replace(/^ {0,2}( ?\\\\*){3,}[ \\\\t]*$/gm, key);\\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\\\t]*$/gm, key);\\n\\n  text = globals.converter._dispatch('horizontalRule.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Turn Markdown image shortcuts into <img> tags.\\n */\\nshowdown.subParser('images', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('images.before', text, options, globals);\\n\\n  var inlineRegExp      = /!\\\\[([^\\\\]]*?)][ \\\\t]*()\\\\([ \\\\t]?<?([\\\\S]+?(?:\\\\([\\\\S]*?\\\\)[\\\\S]*?)?)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*(?:([\\\"'])([^\\\"]*?)\\\\6)?[ \\\\t]?\\\\)/g,\\n      crazyRegExp       = /!\\\\[([^\\\\]]*?)][ \\\\t]*()\\\\([ \\\\t]?<([^>]*)>(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*(?:(?:([\\\"'])([^\\\"]*?)\\\\6))?[ \\\\t]?\\\\)/g,\\n      base64RegExp      = /!\\\\[([^\\\\]]*?)][ \\\\t]*()\\\\([ \\\\t]?<?(data:.+?\\\\/.+?;base64,[A-Za-z0-9+/=\\\\n]+?)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*(?:([\\\"'])([^\\\"]*?)\\\\6)?[ \\\\t]?\\\\)/g,\\n      referenceRegExp   = /!\\\\[([^\\\\]]*?)] ?(?:\\\\n *)?\\\\[([\\\\s\\\\S]*?)]()()()()()/g,\\n      refShortcutRegExp = /!\\\\[([^\\\\[\\\\]]+)]()()()()()/g;\\n\\n  function writeImageTagBase64 (wholeMatch, altText, linkId, url, width, height, m5, title) {\\n    url = url.replace(/\\\\s/g, '');\\n    return writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title);\\n  }\\n\\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\\n\\n    var gUrls   = globals.gUrls,\\n        gTitles = globals.gTitles,\\n        gDims   = globals.gDimensions;\\n\\n    linkId = linkId.toLowerCase();\\n\\n    if (!title) {\\n      title = '';\\n    }\\n    // Special case for explicit empty url\\n    if (wholeMatch.search(/\\\\(<?\\\\s*>? ?(['\\\"].*['\\\"])?\\\\)$/m) > -1) {\\n      url = '';\\n\\n    } else if (url === '' || url === null) {\\n      if (linkId === '' || linkId === null) {\\n        // lower-case and turn embedded newlines into spaces\\n        linkId = altText.toLowerCase().replace(/ ?\\\\n/g, ' ');\\n      }\\n      url = '#' + linkId;\\n\\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\\n        url = gUrls[linkId];\\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\\n          title = gTitles[linkId];\\n        }\\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\\n          width = gDims[linkId].width;\\n          height = gDims[linkId].height;\\n        }\\n      } else {\\n        return wholeMatch;\\n      }\\n    }\\n\\n    altText = altText\\n      .replace(/\\\"/g, '&quot;')\\n    //altText = showdown.helper.escapeCharacters(altText, '*_', false);\\n      .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n    //url = showdown.helper.escapeCharacters(url, '*_', false);\\n    url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n    var result = '<img src=\\\"' + url + '\\\" alt=\\\"' + altText + '\\\"';\\n\\n    if (title && showdown.helper.isString(title)) {\\n      title = title\\n        .replace(/\\\"/g, '&quot;')\\n      //title = showdown.helper.escapeCharacters(title, '*_', false);\\n        .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);\\n      result += ' title=\\\"' + title + '\\\"';\\n    }\\n\\n    if (width && height) {\\n      width  = (width === '*') ? 'auto' : width;\\n      height = (height === '*') ? 'auto' : height;\\n\\n      result += ' width=\\\"' + width + '\\\"';\\n      result += ' height=\\\"' + height + '\\\"';\\n    }\\n\\n    result += ' />';\\n\\n    return result;\\n  }\\n\\n  // First, handle reference-style labeled images: ![alt text][id]\\n  text = text.replace(referenceRegExp, writeImageTag);\\n\\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \\\"optional title\\\")\\n\\n  // base64 encoded images\\n  text = text.replace(base64RegExp, writeImageTagBase64);\\n\\n  // cases with crazy urls like ./image/cat1).png\\n  text = text.replace(crazyRegExp, writeImageTag);\\n\\n  // normal cases\\n  text = text.replace(inlineRegExp, writeImageTag);\\n\\n  // handle reference-style shortcuts: ![img text]\\n  text = text.replace(refShortcutRegExp, writeImageTag);\\n\\n  text = globals.converter._dispatch('images.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\\n\\n  // it's faster to have 3 separate regexes for each case than have just one\\n  // because of backtracing, in some cases, it could lead to an exponential effect\\n  // called \\\"catastrophic backtrace\\\". Ominous!\\n\\n  function parseInside (txt, left, right) {\\n    /*\\n    if (options.simplifiedAutoLink) {\\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\\n    }\\n    */\\n    return left + txt + right;\\n  }\\n\\n  // Parse underscores\\n  if (options.literalMidWordUnderscores) {\\n    text = text.replace(/\\\\b___(\\\\S[\\\\s\\\\S]*)___\\\\b/g, function (wm, txt) {\\n      return parseInside (txt, '<strong><em>', '</em></strong>');\\n    });\\n    text = text.replace(/\\\\b__(\\\\S[\\\\s\\\\S]*)__\\\\b/g, function (wm, txt) {\\n      return parseInside (txt, '<strong>', '</strong>');\\n    });\\n    text = text.replace(/\\\\b_(\\\\S[\\\\s\\\\S]*?)_\\\\b/g, function (wm, txt) {\\n      return parseInside (txt, '<em>', '</em>');\\n    });\\n  } else {\\n    text = text.replace(/___(\\\\S[\\\\s\\\\S]*?)___/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\\n    });\\n    text = text.replace(/__(\\\\S[\\\\s\\\\S]*?)__/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\\n    });\\n    text = text.replace(/_([^\\\\s_][\\\\s\\\\S]*?)_/g, function (wm, m) {\\n      // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\\n    });\\n  }\\n\\n  // Now parse asterisks\\n  if (options.literalMidWordAsterisks) {\\n    text = text.replace(/([^*]|^)\\\\B\\\\*\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*\\\\*\\\\B(?!\\\\*)/g, function (wm, lead, txt) {\\n      return parseInside (txt, lead + '<strong><em>', '</em></strong>');\\n    });\\n    text = text.replace(/([^*]|^)\\\\B\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*\\\\B(?!\\\\*)/g, function (wm, lead, txt) {\\n      return parseInside (txt, lead + '<strong>', '</strong>');\\n    });\\n    text = text.replace(/([^*]|^)\\\\B\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\B(?!\\\\*)/g, function (wm, lead, txt) {\\n      return parseInside (txt, lead + '<em>', '</em>');\\n    });\\n  } else {\\n    text = text.replace(/\\\\*\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*\\\\*/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong><em>', '</em></strong>') : wm;\\n    });\\n    text = text.replace(/\\\\*\\\\*(\\\\S[\\\\s\\\\S]*?)\\\\*\\\\*/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<strong>', '</strong>') : wm;\\n    });\\n    text = text.replace(/\\\\*([^\\\\s*][\\\\s\\\\S]*?)\\\\*/g, function (wm, m) {\\n      // !/^\\\\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)\\n      return (/\\\\S$/.test(m)) ? parseInside (m, '<em>', '</em>') : wm;\\n    });\\n  }\\n\\n\\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\\n */\\nshowdown.subParser('lists', function (text, options, globals) {\\n  'use strict';\\n\\n  /**\\n   * Process the contents of a single ordered or unordered list, splitting it\\n   * into individual list items.\\n   * @param {string} listStr\\n   * @param {boolean} trimTrailing\\n   * @returns {string}\\n   */\\n  function processListItems (listStr, trimTrailing) {\\n    // The $g_list_level global keeps track of when we're inside a list.\\n    // Each time we enter a list, we increment it; when we leave a list,\\n    // we decrement. If it's zero, we're not in a list anymore.\\n    //\\n    // We do this because when we're not inside a list, we want to treat\\n    // something like this:\\n    //\\n    //    I recommend upgrading to version\\n    //    8. Oops, now this line is treated\\n    //    as a sub-list.\\n    //\\n    // As a single paragraph, despite the fact that the second line starts\\n    // with a digit-period-space sequence.\\n    //\\n    // Whereas when we're inside a list (or sub-list), that line will be\\n    // treated as the start of a sub-list. What a kludge, huh? This is\\n    // an aspect of Markdown's syntax that's hard to parse perfectly\\n    // without resorting to mind-reading. Perhaps the solution is to\\n    // change the syntax rules such that sub-lists must start with a\\n    // starting cardinal number; e.g. \\\"1.\\\" or \\\"a.\\\".\\n    globals.gListLevel++;\\n\\n    // trim trailing blank lines:\\n    listStr = listStr.replace(/\\\\n{2,}$/, '\\\\n');\\n\\n    // attacklab: add sentinel to emulate \\\\z\\n    listStr += '¨0';\\n\\n    var rgx = /(\\\\n)?(^ {0,3})([*+-]|\\\\d+[.])[ \\\\t]+((\\\\[(x|X| )?])?[ \\\\t]*[^\\\\r]+?(\\\\n{1,2}))(?=\\\\n*(¨0| {0,3}([*+-]|\\\\d+[.])[ \\\\t]+))/gm,\\n        isParagraphed = (/\\\\n[ \\\\t]*\\\\n(?!¨0)/.test(listStr));\\n\\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\\n    // which is a syntax breaking change\\n    // activating this option reverts to old behavior\\n    if (options.disableForced4SpacesIndentedSublists) {\\n      rgx = /(\\\\n)?(^ {0,3})([*+-]|\\\\d+[.])[ \\\\t]+((\\\\[(x|X| )?])?[ \\\\t]*[^\\\\r]+?(\\\\n{1,2}))(?=\\\\n*(¨0|\\\\2([*+-]|\\\\d+[.])[ \\\\t]+))/gm;\\n    }\\n\\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\\n      checked = (checked && checked.trim() !== '');\\n\\n      var item = showdown.subParser('outdent')(m4, options, globals),\\n          bulletStyle = '';\\n\\n      // Support for github tasklists\\n      if (taskbtn && options.tasklists) {\\n        bulletStyle = ' class=\\\"task-list-item\\\" style=\\\"list-style-type: none;\\\"';\\n        item = item.replace(/^[ \\\\t]*\\\\[(x|X| )?]/m, function () {\\n          var otp = '<input type=\\\"checkbox\\\" disabled style=\\\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\\\"';\\n          if (checked) {\\n            otp += ' checked';\\n          }\\n          otp += '>';\\n          return otp;\\n        });\\n      }\\n\\n      // ISSUE #312\\n      // This input: - - - a\\n      // causes trouble to the parser, since it interprets it as:\\n      // <ul><li><li><li>a</li></li></li></ul>\\n      // instead of:\\n      // <ul><li>- - a</li></ul>\\n      // So, to prevent it, we will put a marker (¨A)in the beginning of the line\\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\\n      item = item.replace(/^([-*+]|\\\\d\\\\.)[ \\\\t]+[\\\\S\\\\n ]*/g, function (wm2) {\\n        return '¨A' + wm2;\\n      });\\n\\n      // m1 - Leading line or\\n      // Has a double return (multi paragraph) or\\n      // Has sublist\\n      if (m1 || (item.search(/\\\\n{2,}/) > -1)) {\\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\\n        item = showdown.subParser('blockGamut')(item, options, globals);\\n      } else {\\n        // Recursion for sub-lists:\\n        item = showdown.subParser('lists')(item, options, globals);\\n        item = item.replace(/\\\\n$/, ''); // chomp(item)\\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\\n\\n        // Colapse double linebreaks\\n        item = item.replace(/\\\\n\\\\n+/g, '\\\\n\\\\n');\\n        if (isParagraphed) {\\n          item = showdown.subParser('paragraphs')(item, options, globals);\\n        } else {\\n          item = showdown.subParser('spanGamut')(item, options, globals);\\n        }\\n      }\\n\\n      // now we need to remove the marker (¨A)\\n      item = item.replace('¨A', '');\\n      // we can finally wrap the line in list item tags\\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\\\n';\\n\\n      return item;\\n    });\\n\\n    // attacklab: strip sentinel\\n    listStr = listStr.replace(/¨0/g, '');\\n\\n    globals.gListLevel--;\\n\\n    if (trimTrailing) {\\n      listStr = listStr.replace(/\\\\s+$/, '');\\n    }\\n\\n    return listStr;\\n  }\\n\\n  function styleStartNumber (list, listType) {\\n    // check if ol and starts by a number different than 1\\n    if (listType === 'ol') {\\n      var res = list.match(/^ *(\\\\d+)\\\\./);\\n      if (res && res[1] !== '1') {\\n        return ' start=\\\"' + res[1] + '\\\"';\\n      }\\n    }\\n    return '';\\n  }\\n\\n  /**\\n   * Check and parse consecutive lists (better fix for issue #142)\\n   * @param {string} list\\n   * @param {string} listType\\n   * @param {boolean} trimTrailing\\n   * @returns {string}\\n   */\\n  function parseConsecutiveLists (list, listType, trimTrailing) {\\n    // check if we caught 2 or more consecutive lists by mistake\\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\\\d+\\\\.[ \\\\t]/gm : /^ {0,3}\\\\d+\\\\.[ \\\\t]/gm,\\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\\\t]/gm : /^ {0,3}[*+-][ \\\\t]/gm,\\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\\n        result = '';\\n\\n    if (list.search(counterRxg) !== -1) {\\n      (function parseCL (txt) {\\n        var pos = txt.search(counterRxg),\\n            style = styleStartNumber(list, listType);\\n        if (pos !== -1) {\\n          // slice\\n          result += '\\\\n\\\\n<' + listType + style + '>\\\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\\\n';\\n\\n          // invert counterType and listType\\n          listType = (listType === 'ul') ? 'ol' : 'ul';\\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\\n\\n          //recurse\\n          parseCL(txt.slice(pos));\\n        } else {\\n          result += '\\\\n\\\\n<' + listType + style + '>\\\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\\\n';\\n        }\\n      })(list);\\n    } else {\\n      var style = styleStartNumber(list, listType);\\n      result = '\\\\n\\\\n<' + listType + style + '>\\\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\\\n';\\n    }\\n\\n    return result;\\n  }\\n\\n  /** Start of list parsing **/\\n  text = globals.converter._dispatch('lists.before', text, options, globals);\\n  // add sentinel to hack around khtml/safari bug:\\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\\n  text += '¨0';\\n\\n  if (globals.gListLevel) {\\n    text = text.replace(/^(( {0,3}([*+-]|\\\\d+[.])[ \\\\t]+)[^\\\\r]+?(¨0|\\\\n{2,}(?=\\\\S)(?![ \\\\t]*(?:[*+-]|\\\\d+[.])[ \\\\t]+)))/gm,\\n      function (wholeMatch, list, m2) {\\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\\n        return parseConsecutiveLists(list, listType, true);\\n      }\\n    );\\n  } else {\\n    text = text.replace(/(\\\\n\\\\n|^\\\\n?)(( {0,3}([*+-]|\\\\d+[.])[ \\\\t]+)[^\\\\r]+?(¨0|\\\\n{2,}(?=\\\\S)(?![ \\\\t]*(?:[*+-]|\\\\d+[.])[ \\\\t]+)))/gm,\\n      function (wholeMatch, m1, list, m3) {\\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\\n        return parseConsecutiveLists(list, listType, false);\\n      }\\n    );\\n  }\\n\\n  // strip sentinel\\n  text = text.replace(/¨0/, '');\\n  text = globals.converter._dispatch('lists.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Parse metadata at the top of the document\\n */\\nshowdown.subParser('metadata', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.metadata) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('metadata.before', text, options, globals);\\n\\n  function parseMetadataContents (content) {\\n    // raw is raw so it's not changed in any way\\n    globals.metadata.raw = content;\\n\\n    // escape chars forbidden in html attributes\\n    // double quotes\\n    content = content\\n      // ampersand first\\n      .replace(/&/g, '&amp;')\\n      // double quotes\\n      .replace(/\\\"/g, '&quot;');\\n\\n    content = content.replace(/\\\\n {4}/g, ' ');\\n    content.replace(/^([\\\\S ]+): +([\\\\s\\\\S]+?)$/gm, function (wm, key, value) {\\n      globals.metadata.parsed[key] = value;\\n      return '';\\n    });\\n  }\\n\\n  text = text.replace(/^\\\\s*«««+(\\\\S*?)\\\\n([\\\\s\\\\S]+?)\\\\n»»»+\\\\n/, function (wholematch, format, content) {\\n    parseMetadataContents(content);\\n    return '¨M';\\n  });\\n\\n  text = text.replace(/^\\\\s*---+(\\\\S*?)\\\\n([\\\\s\\\\S]+?)\\\\n---+\\\\n/, function (wholematch, format, content) {\\n    if (format) {\\n      globals.metadata.format = format;\\n    }\\n    parseMetadataContents(content);\\n    return '¨M';\\n  });\\n\\n  text = text.replace(/¨M/g, '');\\n\\n  text = globals.converter._dispatch('metadata.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n * Remove one level of line-leading tabs or spaces\\n */\\nshowdown.subParser('outdent', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('outdent.before', text, options, globals);\\n\\n  // attacklab: hack around Konqueror 3.5.4 bug:\\n  // \\\"----------bug\\\".replace(/^-/g,\\\"\\\") == \\\"bug\\\"\\n  text = text.replace(/^(\\\\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width\\n\\n  // attacklab: clean up hack\\n  text = text.replace(/¨0/g, '');\\n\\n  text = globals.converter._dispatch('outdent.after', text, options, globals);\\n  return text;\\n});\\n\\r\\n/**\\n *\\n */\\nshowdown.subParser('paragraphs', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\\n  // Strip leading and trailing lines:\\n  text = text.replace(/^\\\\n+/g, '');\\n  text = text.replace(/\\\\n+$/g, '');\\n\\n  var grafs = text.split(/\\\\n{2,}/g),\\n      grafsOut = [],\\n      end = grafs.length; // Wrap <p> tags\\n\\n  for (var i = 0; i < end; i++) {\\n    var str = grafs[i];\\n    // if this is an HTML marker, copy it\\n    if (str.search(/¨(K|G)(\\\\d+)\\\\1/g) >= 0) {\\n      grafsOut.push(str);\\n\\n    // test for presence of characters to prevent empty lines being parsed\\n    // as paragraphs (resulting in undesired extra empty paragraphs)\\n    } else if (str.search(/\\\\S/) >= 0) {\\n      str = showdown.subParser('spanGamut')(str, options, globals);\\n      str = str.replace(/^([ \\\\t]*)/g, '<p>');\\n      str += '</p>';\\n      grafsOut.push(str);\\n    }\\n  }\\n\\n  /** Unhashify HTML blocks */\\n  end = grafsOut.length;\\n  for (i = 0; i < end; i++) {\\n    var blockText = '',\\n        grafsOutIt = grafsOut[i],\\n        codeFlag = false;\\n    // if this is a marker for an html block...\\n    // use RegExp.test instead of string.search because of QML bug\\n    while (/¨(K|G)(\\\\d+)\\\\1/.test(grafsOutIt)) {\\n      var delim = RegExp.$1,\\n          num   = RegExp.$2;\\n\\n      if (delim === 'K') {\\n        blockText = globals.gHtmlBlocks[num];\\n      } else {\\n        // we need to check if ghBlock is a false positive\\n        if (codeFlag) {\\n          // use encoded version of all text\\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);\\n        } else {\\n          blockText = globals.ghCodeBlocks[num].codeblock;\\n        }\\n      }\\n      blockText = blockText.replace(/\\\\$/g, '$$$$'); // Escape any dollar signs\\n\\n      grafsOutIt = grafsOutIt.replace(/(\\\\n\\\\n)?¨(K|G)\\\\d+\\\\2(\\\\n\\\\n)?/, blockText);\\n      // Check if grafsOutIt is a pre->code\\n      if (/^<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>/.test(grafsOutIt)) {\\n        codeFlag = true;\\n      }\\n    }\\n    grafsOut[i] = grafsOutIt;\\n  }\\n  text = grafsOut.join('\\\\n');\\n  // Strip leading and trailing lines:\\n  text = text.replace(/^\\\\n+/g, '');\\n  text = text.replace(/\\\\n+$/g, '');\\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\\n});\\n\\r\\n/**\\n * Run extension\\n */\\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\\n  'use strict';\\n\\n  if (ext.filter) {\\n    text = ext.filter(text, globals.converter, options);\\n\\n  } else if (ext.regex) {\\n    // TODO remove this when old extension loading mechanism is deprecated\\n    var re = ext.regex;\\n    if (!(re instanceof RegExp)) {\\n      re = new RegExp(re, 'g');\\n    }\\n    text = text.replace(re, ext.replace);\\n  }\\n\\n  return text;\\n});\\n\\r\\n/**\\n * These are all the transformations that occur *within* block-level\\n * tags like paragraphs, headers, and list items.\\n */\\nshowdown.subParser('spanGamut', function (text, options, globals) {\\n  'use strict';\\n\\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\\n  text = showdown.subParser('codeSpans')(text, options, globals);\\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\\n\\n  // Process anchor and image tags. Images must come first,\\n  // because ![foo][f] looks like an anchor.\\n  text = showdown.subParser('images')(text, options, globals);\\n  text = showdown.subParser('anchors')(text, options, globals);\\n\\n  // Make links out of things like `<http://example.com/>`\\n  // Must come after anchors, because you can use < and >\\n  // delimiters in inline links like [this](<url>).\\n  text = showdown.subParser('autoLinks')(text, options, globals);\\n  text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);\\n  text = showdown.subParser('emoji')(text, options, globals);\\n  text = showdown.subParser('underline')(text, options, globals);\\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\\n  text = showdown.subParser('strikethrough')(text, options, globals);\\n  text = showdown.subParser('ellipsis')(text, options, globals);\\n\\n  // we need to hash HTML tags inside spans\\n  text = showdown.subParser('hashHTMLSpans')(text, options, globals);\\n\\n  // now we encode amps and angles\\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\\n\\n  // Do hard breaks\\n  if (options.simpleLineBreaks) {\\n    // GFM style hard breaks\\n    // only add line breaks if the text does not contain a block (special case for lists)\\n    if (!/\\\\n\\\\n¨K/.test(text)) {\\n      text = text.replace(/\\\\n+/g, '<br />\\\\n');\\n    }\\n  } else {\\n    // Vanilla hard breaks\\n    text = text.replace(/  +\\\\n/g, '<br />\\\\n');\\n  }\\n\\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nshowdown.subParser('strikethrough', function (text, options, globals) {\\n  'use strict';\\n\\n  function parseInside (txt) {\\n    if (options.simplifiedAutoLink) {\\n      txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);\\n    }\\n    return '<del>' + txt + '</del>';\\n  }\\n\\n  if (options.strikethrough) {\\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\\n    text = text.replace(/(?:~){2}([\\\\s\\\\S]+?)(?:~){2}/g, function (wm, txt) { return parseInside(txt); });\\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\\n  }\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Strips link definitions from text, stores the URLs and titles in\\n * hash references.\\n * Link defs are in the form: ^[id]: url \\\"optional title\\\"\\n */\\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\\n  'use strict';\\n\\n  var regex       = /^ {0,3}\\\\[(.+)]:[ \\\\t]*\\\\n?[ \\\\t]*<?([^>\\\\s]+)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*\\\\n?[ \\\\t]*(?:(\\\\n*)[\\\"|'(](.+?)[\\\"|')][ \\\\t]*)?(?:\\\\n+|(?=¨0))/gm,\\n      base64Regex = /^ {0,3}\\\\[(.+)]:[ \\\\t]*\\\\n?[ \\\\t]*<?(data:.+?\\\\/.+?;base64,[A-Za-z0-9+/=\\\\n]+?)>?(?: =([*\\\\d]+[A-Za-z%]{0,4})x([*\\\\d]+[A-Za-z%]{0,4}))?[ \\\\t]*\\\\n?[ \\\\t]*(?:(\\\\n*)[\\\"|'(](.+?)[\\\"|')][ \\\\t]*)?(?:\\\\n\\\\n|(?=¨0)|(?=\\\\n\\\\[))/gm;\\n\\n  // attacklab: sentinel workarounds for lack of \\\\A and \\\\Z, safari\\\\khtml bug\\n  text += '¨0';\\n\\n  var replaceFunc = function (wholeMatch, linkId, url, width, height, blankLines, title) {\\n    linkId = linkId.toLowerCase();\\n    if (url.match(/^data:.+?\\\\/.+?;base64,/)) {\\n      // remove newlines\\n      globals.gUrls[linkId] = url.replace(/\\\\s/g, '');\\n    } else {\\n      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals);  // Link IDs are case-insensitive\\n    }\\n\\n    if (blankLines) {\\n      // Oops, found blank lines, so it's not a title.\\n      // Put back the parenthetical statement we stole.\\n      return blankLines + title;\\n\\n    } else {\\n      if (title) {\\n        globals.gTitles[linkId] = title.replace(/\\\"|'/g, '&quot;');\\n      }\\n      if (options.parseImgDimensions && width && height) {\\n        globals.gDimensions[linkId] = {\\n          width:  width,\\n          height: height\\n        };\\n      }\\n    }\\n    // Completely remove the definition from the text\\n    return '';\\n  };\\n\\n  // first we try to find base64 link references\\n  text = text.replace(base64Regex, replaceFunc);\\n\\n  text = text.replace(regex, replaceFunc);\\n\\n  // attacklab: strip sentinel\\n  text = text.replace(/¨0/, '');\\n\\n  return text;\\n});\\n\\r\\nshowdown.subParser('tables', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.tables) {\\n    return text;\\n  }\\n\\n  var tableRgx       = /^ {0,3}\\\\|?.+\\\\|.+\\\\n {0,3}\\\\|?[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[ \\\\t]*:?[ \\\\t]*\\\\|[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[\\\\s\\\\S]+?(?:\\\\n\\\\n|¨0)/gm,\\n    //singeColTblRgx = /^ {0,3}\\\\|.+\\\\|\\\\n {0,3}\\\\|[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[ \\\\t]*:?[ \\\\t]*\\\\|[ \\\\t]*\\\\n(?: {0,3}\\\\|.+\\\\|\\\\n)+(?:\\\\n\\\\n|¨0)/gm;\\n      singeColTblRgx = /^ {0,3}\\\\|.+\\\\|[ \\\\t]*\\\\n {0,3}\\\\|[ \\\\t]*:?[ \\\\t]*(?:[-=]){2,}[ \\\\t]*:?[ \\\\t]*\\\\|[ \\\\t]*\\\\n( {0,3}\\\\|.+\\\\|[ \\\\t]*\\\\n)*(?:\\\\n|¨0)/gm;\\n\\n  function parseStyles (sLine) {\\n    if (/^:[ \\\\t]*--*$/.test(sLine)) {\\n      return ' style=\\\"text-align:left;\\\"';\\n    } else if (/^--*[ \\\\t]*:[ \\\\t]*$/.test(sLine)) {\\n      return ' style=\\\"text-align:right;\\\"';\\n    } else if (/^:[ \\\\t]*--*[ \\\\t]*:$/.test(sLine)) {\\n      return ' style=\\\"text-align:center;\\\"';\\n    } else {\\n      return '';\\n    }\\n  }\\n\\n  function parseHeaders (header, style) {\\n    var id = '';\\n    header = header.trim();\\n    // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility\\n    if (options.tablesHeaderId || options.tableHeaderId) {\\n      id = ' id=\\\"' + header.replace(/ /g, '_').toLowerCase() + '\\\"';\\n    }\\n    header = showdown.subParser('spanGamut')(header, options, globals);\\n\\n    return '<th' + id + style + '>' + header + '</th>\\\\n';\\n  }\\n\\n  function parseCells (cell, style) {\\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\\n    return '<td' + style + '>' + subText + '</td>\\\\n';\\n  }\\n\\n  function buildTable (headers, cells) {\\n    var tb = '<table>\\\\n<thead>\\\\n<tr>\\\\n',\\n        tblLgn = headers.length;\\n\\n    for (var i = 0; i < tblLgn; ++i) {\\n      tb += headers[i];\\n    }\\n    tb += '</tr>\\\\n</thead>\\\\n<tbody>\\\\n';\\n\\n    for (i = 0; i < cells.length; ++i) {\\n      tb += '<tr>\\\\n';\\n      for (var ii = 0; ii < tblLgn; ++ii) {\\n        tb += cells[i][ii];\\n      }\\n      tb += '</tr>\\\\n';\\n    }\\n    tb += '</tbody>\\\\n</table>\\\\n';\\n    return tb;\\n  }\\n\\n  function parseTable (rawTable) {\\n    var i, tableLines = rawTable.split('\\\\n');\\n\\n    for (i = 0; i < tableLines.length; ++i) {\\n      // strip wrong first and last column if wrapped tables are used\\n      if (/^ {0,3}\\\\|/.test(tableLines[i])) {\\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\\\|/, '');\\n      }\\n      if (/\\\\|[ \\\\t]*$/.test(tableLines[i])) {\\n        tableLines[i] = tableLines[i].replace(/\\\\|[ \\\\t]*$/, '');\\n      }\\n      // parse code spans first, but we only support one line code spans\\n      tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);\\n    }\\n\\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\\n        rawCells = [],\\n        headers = [],\\n        styles = [],\\n        cells = [];\\n\\n    tableLines.shift();\\n    tableLines.shift();\\n\\n    for (i = 0; i < tableLines.length; ++i) {\\n      if (tableLines[i].trim() === '') {\\n        continue;\\n      }\\n      rawCells.push(\\n        tableLines[i]\\n          .split('|')\\n          .map(function (s) {\\n            return s.trim();\\n          })\\n      );\\n    }\\n\\n    if (rawHeaders.length < rawStyles.length) {\\n      return rawTable;\\n    }\\n\\n    for (i = 0; i < rawStyles.length; ++i) {\\n      styles.push(parseStyles(rawStyles[i]));\\n    }\\n\\n    for (i = 0; i < rawHeaders.length; ++i) {\\n      if (showdown.helper.isUndefined(styles[i])) {\\n        styles[i] = '';\\n      }\\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\\n    }\\n\\n    for (i = 0; i < rawCells.length; ++i) {\\n      var row = [];\\n      for (var ii = 0; ii < headers.length; ++ii) {\\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\\n\\n        }\\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\\n      }\\n      cells.push(row);\\n    }\\n\\n    return buildTable(headers, cells);\\n  }\\n\\n  text = globals.converter._dispatch('tables.before', text, options, globals);\\n\\n  // find escaped pipe characters\\n  text = text.replace(/\\\\\\\\(\\\\|)/g, showdown.helper.escapeCharactersCallback);\\n\\n  // parse multi column tables\\n  text = text.replace(tableRgx, parseTable);\\n\\n  // parse one column tables\\n  text = text.replace(singeColTblRgx, parseTable);\\n\\n  text = globals.converter._dispatch('tables.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\nshowdown.subParser('underline', function (text, options, globals) {\\n  'use strict';\\n\\n  if (!options.underline) {\\n    return text;\\n  }\\n\\n  text = globals.converter._dispatch('underline.before', text, options, globals);\\n\\n  if (options.literalMidWordUnderscores) {\\n    text = text.replace(/\\\\b_?__(\\\\S[\\\\s\\\\S]*)___?\\\\b/g, function (wm, txt) {\\n      return '<u>' + txt + '</u>';\\n    });\\n  } else {\\n    text = text.replace(/_?__(\\\\S[\\\\s\\\\S]*?)___?/g, function (wm, m) {\\n      return (/\\\\S$/.test(m)) ? '<u>' + m + '</u>' : wm;\\n    });\\n  }\\n\\n  // escape remaining underscores to prevent them being parsed by italic and bold\\n  text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);\\n\\n  text = globals.converter._dispatch('underline.after', text, options, globals);\\n\\n  return text;\\n});\\n\\r\\n/**\\n * Swap back in all the special characters we've hidden.\\n */\\nshowdown.subParser('unescapeSpecialChars', function (text, options, globals) {\\n  'use strict';\\n  text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);\\n\\n  text = text.replace(/¨E(\\\\d+)E/g, function (wholeMatch, m1) {\\n    var charCodeToReplace = parseInt(m1);\\n    return String.fromCharCode(charCodeToReplace);\\n  });\\n\\n  text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);\\n  return text;\\n});\\n\\r\\nvar root = this;\\n\\n// AMD Loader\\nif (typeof define === 'function' && define.amd) {\\n  define(function () {\\n    'use strict';\\n    return showdown;\\n  });\\n\\n// CommonJS/nodeJS Loader\\n} else if (typeof module !== 'undefined' && module.exports) {\\n  module.exports = showdown;\\n\\n// Regular Browser loader\\n} else {\\n  root.showdown = showdown;\\n}\\n}).call(this);\\r\\n\\n//# sourceMappingURL=showdown.js.map\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{M55E:function(e,r,t){var a;(function(){function n(e){\"use strict\";var r={omitExtraWLInCodeBlocks:{defaultValue:!1,describe:\"Omit the default extra whiteline added to code blocks\",type:\"boolean\"},noHeaderId:{defaultValue:!1,describe:\"Turn on/off generated header id\",type:\"boolean\"},prefixHeaderId:{defaultValue:!1,describe:\"Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic 'section-' prefix\",type:\"string\"},rawPrefixHeaderId:{defaultValue:!1,describe:'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the \" char is used in the prefix)',type:\"boolean\"},ghCompatibleHeaderId:{defaultValue:!1,describe:\"Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)\",type:\"boolean\"},rawHeaderId:{defaultValue:!1,describe:\"Remove only spaces, ' and \\\" from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids\",type:\"boolean\"},headerLevelStart:{defaultValue:!1,describe:\"The header blocks level start\",type:\"integer\"},parseImgDimensions:{defaultValue:!1,describe:\"Turn on/off image dimension parsing\",type:\"boolean\"},simplifiedAutoLink:{defaultValue:!1,describe:\"Turn on/off GFM autolink style\",type:\"boolean\"},excludeTrailingPunctuationFromURLs:{defaultValue:!1,describe:\"Excludes trailing punctuation from links generated with autoLinking\",type:\"boolean\"},literalMidWordUnderscores:{defaultValue:!1,describe:\"Parse midword underscores as literal underscores\",type:\"boolean\"},literalMidWordAsterisks:{defaultValue:!1,describe:\"Parse midword asterisks as literal asterisks\",type:\"boolean\"},strikethrough:{defaultValue:!1,describe:\"Turn on/off strikethrough support\",type:\"boolean\"},tables:{defaultValue:!1,describe:\"Turn on/off tables support\",type:\"boolean\"},tablesHeaderId:{defaultValue:!1,describe:\"Add an id to table headers\",type:\"boolean\"},ghCodeBlocks:{defaultValue:!0,describe:\"Turn on/off GFM fenced code blocks support\",type:\"boolean\"},tasklists:{defaultValue:!1,describe:\"Turn on/off GFM tasklist support\",type:\"boolean\"},smoothLivePreview:{defaultValue:!1,describe:\"Prevents weird effects in live previews due to incomplete input\",type:\"boolean\"},smartIndentationFix:{defaultValue:!1,description:\"Tries to smartly fix indentation in es6 strings\",type:\"boolean\"},disableForced4SpacesIndentedSublists:{defaultValue:!1,description:\"Disables the requirement of indenting nested sublists by 4 spaces\",type:\"boolean\"},simpleLineBreaks:{defaultValue:!1,description:\"Parses simple line breaks as <br> (GFM Style)\",type:\"boolean\"},requireSpaceBeforeHeadingText:{defaultValue:!1,description:\"Makes adding a space between `#` and the header text mandatory (GFM Style)\",type:\"boolean\"},ghMentions:{defaultValue:!1,description:\"Enables github @mentions\",type:\"boolean\"},ghMentionsLink:{defaultValue:\"https://github.com/{u}\",description:\"Changes the link generated by @mentions. Only applies if ghMentions option is enabled.\",type:\"string\"},encodeEmails:{defaultValue:!0,description:\"Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities\",type:\"boolean\"},openLinksInNewWindow:{defaultValue:!1,description:\"Open all links in new windows\",type:\"boolean\"},backslashEscapesHTMLTags:{defaultValue:!1,description:\"Support for HTML Tag escaping. ex: <div>foo</div>\",type:\"boolean\"},emoji:{defaultValue:!1,description:\"Enable emoji support. Ex: `this is a :smile: emoji`\",type:\"boolean\"},underline:{defaultValue:!1,description:\"Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`\",type:\"boolean\"},completeHTMLDocument:{defaultValue:!1,description:\"Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags\",type:\"boolean\"},metadata:{defaultValue:!1,description:\"Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).\",type:\"boolean\"},splitAdjacentBlockquotes:{defaultValue:!1,description:\"Split adjacent blockquote blocks\",type:\"boolean\"}};if(!1===e)return JSON.parse(JSON.stringify(r));var t={};for(var a in r)r.hasOwnProperty(a)&&(t[a]=r[a].defaultValue);return t}var s={},o={},i={},l=n(!0),c=\"vanilla\",u={github:{omitExtraWLInCodeBlocks:!0,simplifiedAutoLink:!0,excludeTrailingPunctuationFromURLs:!0,literalMidWordUnderscores:!0,strikethrough:!0,tables:!0,tablesHeaderId:!0,ghCodeBlocks:!0,tasklists:!0,disableForced4SpacesIndentedSublists:!0,simpleLineBreaks:!0,requireSpaceBeforeHeadingText:!0,ghCompatibleHeaderId:!0,ghMentions:!0,backslashEscapesHTMLTags:!0,emoji:!0,splitAdjacentBlockquotes:!0},original:{noHeaderId:!0,ghCodeBlocks:!1},ghost:{omitExtraWLInCodeBlocks:!0,parseImgDimensions:!0,simplifiedAutoLink:!0,excludeTrailingPunctuationFromURLs:!0,literalMidWordUnderscores:!0,strikethrough:!0,tables:!0,tablesHeaderId:!0,ghCodeBlocks:!0,tasklists:!0,smoothLivePreview:!0,simpleLineBreaks:!0,requireSpaceBeforeHeadingText:!0,ghMentions:!1,encodeEmails:!0},vanilla:n(!0),allOn:function(){\"use strict\";var e=n(!0),r={};for(var t in e)e.hasOwnProperty(t)&&(r[t]=!0);return r}()};function p(e,r){\"use strict\";var t=r?\"Error in \"+r+\" extension->\":\"Error in unnamed extension\",a={valid:!0,error:\"\"};s.helper.isArray(e)||(e=[e]);for(var n=0;n<e.length;++n){var o=t+\" sub-extension \"+n+\": \",i=e[n];if(\"object\"!=typeof i)return a.valid=!1,a.error=o+\"must be an object, but \"+typeof i+\" given\",a;if(!s.helper.isString(i.type))return a.valid=!1,a.error=o+'property \"type\" must be a string, but '+typeof i.type+\" given\",a;var l=i.type=i.type.toLowerCase();if(\"language\"===l&&(l=i.type=\"lang\"),\"html\"===l&&(l=i.type=\"output\"),\"lang\"!==l&&\"output\"!==l&&\"listener\"!==l)return a.valid=!1,a.error=o+\"type \"+l+' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"',a;if(\"listener\"===l){if(s.helper.isUndefined(i.listeners))return a.valid=!1,a.error=o+'. Extensions of type \"listener\" must have a property called \"listeners\"',a}else if(s.helper.isUndefined(i.filter)&&s.helper.isUndefined(i.regex))return a.valid=!1,a.error=o+l+' extensions must define either a \"regex\" property or a \"filter\" method',a;if(i.listeners){if(\"object\"!=typeof i.listeners)return a.valid=!1,a.error=o+'\"listeners\" property must be an object but '+typeof i.listeners+\" given\",a;for(var c in i.listeners)if(i.listeners.hasOwnProperty(c)&&\"function\"!=typeof i.listeners[c])return a.valid=!1,a.error=o+'\"listeners\" property must be an hash of [event name]: [callback]. listeners.'+c+\" must be a function but \"+typeof i.listeners[c]+\" given\",a}if(i.filter){if(\"function\"!=typeof i.filter)return a.valid=!1,a.error=o+'\"filter\" must be a function, but '+typeof i.filter+\" given\",a}else if(i.regex){if(s.helper.isString(i.regex)&&(i.regex=new RegExp(i.regex,\"g\")),!(i.regex instanceof RegExp))return a.valid=!1,a.error=o+'\"regex\" property must either be a string or a RegExp object, but '+typeof i.regex+\" given\",a;if(s.helper.isUndefined(i.replace))return a.valid=!1,a.error=o+'\"regex\" extensions must implement a replace string or function',a}}return a}function d(e,r){\"use strict\";return\"¨E\"+r.charCodeAt(0)+\"E\"}s.helper={},s.extensions={},s.setOption=function(e,r){\"use strict\";return l[e]=r,this},s.getOption=function(e){\"use strict\";return l[e]},s.getOptions=function(){\"use strict\";return l},s.resetOptions=function(){\"use strict\";l=n(!0)},s.setFlavor=function(e){\"use strict\";if(!u.hasOwnProperty(e))throw Error(e+\" flavor was not found\");s.resetOptions();var r=u[e];for(var t in c=e,r)r.hasOwnProperty(t)&&(l[t]=r[t])},s.getFlavor=function(){\"use strict\";return c},s.getFlavorOptions=function(e){\"use strict\";if(u.hasOwnProperty(e))return u[e]},s.getDefaultOptions=function(e){\"use strict\";return n(e)},s.subParser=function(e,r){\"use strict\";if(s.helper.isString(e)){if(void 0===r){if(o.hasOwnProperty(e))return o[e];throw Error(\"SubParser named \"+e+\" not registered!\")}o[e]=r}},s.extension=function(e,r){\"use strict\";if(!s.helper.isString(e))throw Error(\"Extension 'name' must be a string\");if(e=s.helper.stdExtName(e),s.helper.isUndefined(r)){if(!i.hasOwnProperty(e))throw Error(\"Extension named \"+e+\" is not registered!\");return i[e]}\"function\"==typeof r&&(r=r()),s.helper.isArray(r)||(r=[r]);var t=p(r,e);if(!t.valid)throw Error(t.error);i[e]=r},s.getAllExtensions=function(){\"use strict\";return i},s.removeExtension=function(e){\"use strict\";delete i[e]},s.resetExtensions=function(){\"use strict\";i={}},s.validateExtension=function(e){\"use strict\";var r=p(e,null);return!!r.valid},s.hasOwnProperty(\"helper\")||(s.helper={}),s.helper.isString=function(e){\"use strict\";return\"string\"==typeof e||e instanceof String},s.helper.isFunction=function(e){\"use strict\";return e&&\"[object Function]\"==={}.toString.call(e)},s.helper.isArray=function(e){\"use strict\";return Array.isArray(e)},s.helper.isUndefined=function(e){\"use strict\";return void 0===e},s.helper.forEach=function(e,r){\"use strict\";if(s.helper.isUndefined(e))throw new Error(\"obj param is required\");if(s.helper.isUndefined(r))throw new Error(\"callback param is required\");if(!s.helper.isFunction(r))throw new Error(\"callback param must be a function/closure\");if(\"function\"==typeof e.forEach)e.forEach(r);else if(s.helper.isArray(e))for(var t=0;t<e.length;t++)r(e[t],t,e);else{if(\"object\"!=typeof e)throw new Error(\"obj does not seem to be an array or an iterable object\");for(var a in e)e.hasOwnProperty(a)&&r(e[a],a,e)}},s.helper.stdExtName=function(e){\"use strict\";return e.replace(/[_?*+\\/\\\\.^-]/g,\"\").replace(/\\s/g,\"\").toLowerCase()},s.helper.escapeCharactersCallback=d,s.helper.escapeCharacters=function(e,r,t){\"use strict\";var a=\"([\"+r.replace(/([\\[\\]\\\\])/g,\"\\\\$1\")+\"])\";t&&(a=\"\\\\\\\\\"+a);var n=new RegExp(a,\"g\");return e=e.replace(n,d)};var h=function(e,r,t,a){\"use strict\";var n,s,o,i,l,c=a||\"\",u=c.indexOf(\"g\")>-1,p=new RegExp(r+\"|\"+t,\"g\"+c.replace(/g/g,\"\")),d=new RegExp(r,c.replace(/g/g,\"\")),h=[];do{for(n=0;o=p.exec(e);)if(d.test(o[0]))n++||(i=(s=p.lastIndex)-o[0].length);else if(n&&!--n){l=o.index+o[0].length;var _={left:{start:i,end:s},match:{start:s,end:o.index},right:{start:o.index,end:l},wholeMatch:{start:i,end:l}};if(h.push(_),!u)return h}}while(n&&(p.lastIndex=s));return h};s.helper.matchRecursiveRegExp=function(e,r,t,a){\"use strict\";for(var n=h(e,r,t,a),s=[],o=0;o<n.length;++o)s.push([e.slice(n[o].wholeMatch.start,n[o].wholeMatch.end),e.slice(n[o].match.start,n[o].match.end),e.slice(n[o].left.start,n[o].left.end),e.slice(n[o].right.start,n[o].right.end)]);return s},s.helper.replaceRecursiveRegExp=function(e,r,t,a,n){\"use strict\";if(!s.helper.isFunction(r)){var o=r;r=function(){return o}}var i=h(e,t,a,n),l=e,c=i.length;if(c>0){var u=[];0!==i[0].wholeMatch.start&&u.push(e.slice(0,i[0].wholeMatch.start));for(var p=0;p<c;++p)u.push(r(e.slice(i[p].wholeMatch.start,i[p].wholeMatch.end),e.slice(i[p].match.start,i[p].match.end),e.slice(i[p].left.start,i[p].left.end),e.slice(i[p].right.start,i[p].right.end))),p<c-1&&u.push(e.slice(i[p].wholeMatch.end,i[p+1].wholeMatch.start));i[c-1].wholeMatch.end<e.length&&u.push(e.slice(i[c-1].wholeMatch.end)),l=u.join(\"\")}return l},s.helper.regexIndexOf=function(e,r,t){\"use strict\";if(!s.helper.isString(e))throw\"InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string\";if(r instanceof RegExp==!1)throw\"InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp\";var a=e.substring(t||0).search(r);return a>=0?a+(t||0):a},s.helper.splitAtIndex=function(e,r){\"use strict\";if(!s.helper.isString(e))throw\"InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string\";return[e.substring(0,r),e.substring(r)]},s.helper.encodeEmailAddress=function(e){\"use strict\";var r=[function(e){return\"&#\"+e.charCodeAt(0)+\";\"},function(e){return\"&#x\"+e.charCodeAt(0).toString(16)+\";\"},function(e){return e}];return e=e.replace(/./g,function(e){if(\"@\"===e)e=r[Math.floor(2*Math.random())](e);else{var t=Math.random();e=t>.9?r[2](e):t>.45?r[1](e):r[0](e)}return e})},\"undefined\"==typeof console&&(console={warn:function(e){\"use strict\";alert(e)},log:function(e){\"use strict\";alert(e)},error:function(e){\"use strict\";throw e}}),s.helper.regexes={asteriskDashAndColon:/([*_:~])/g},s.helper.emojis={\"+1\":\"👍\",\"-1\":\"👎\",100:\"💯\",1234:\"🔢\",\"1st_place_medal\":\"🥇\",\"2nd_place_medal\":\"🥈\",\"3rd_place_medal\":\"🥉\",\"8ball\":\"🎱\",a:\"🅰️\",ab:\"🆎\",abc:\"🔤\",abcd:\"🔡\",accept:\"🉑\",aerial_tramway:\"🚡\",airplane:\"✈️\",alarm_clock:\"⏰\",alembic:\"⚗️\",alien:\"👽\",ambulance:\"🚑\",amphora:\"🏺\",anchor:\"⚓️\",angel:\"👼\",anger:\"💢\",angry:\"😠\",anguished:\"😧\",ant:\"🐜\",apple:\"🍎\",aquarius:\"♒️\",aries:\"♈️\",arrow_backward:\"◀️\",arrow_double_down:\"⏬\",arrow_double_up:\"⏫\",arrow_down:\"⬇️\",arrow_down_small:\"🔽\",arrow_forward:\"▶️\",arrow_heading_down:\"⤵️\",arrow_heading_up:\"⤴️\",arrow_left:\"⬅️\",arrow_lower_left:\"↙️\",arrow_lower_right:\"↘️\",arrow_right:\"➡️\",arrow_right_hook:\"↪️\",arrow_up:\"⬆️\",arrow_up_down:\"↕️\",arrow_up_small:\"🔼\",arrow_upper_left:\"↖️\",arrow_upper_right:\"↗️\",arrows_clockwise:\"🔃\",arrows_counterclockwise:\"🔄\",art:\"🎨\",articulated_lorry:\"🚛\",artificial_satellite:\"🛰\",astonished:\"😲\",athletic_shoe:\"👟\",atm:\"🏧\",atom_symbol:\"⚛️\",avocado:\"🥑\",b:\"🅱️\",baby:\"👶\",baby_bottle:\"🍼\",baby_chick:\"🐤\",baby_symbol:\"🚼\",back:\"🔙\",bacon:\"🥓\",badminton:\"🏸\",baggage_claim:\"🛄\",baguette_bread:\"🥖\",balance_scale:\"⚖️\",balloon:\"🎈\",ballot_box:\"🗳\",ballot_box_with_check:\"☑️\",bamboo:\"🎍\",banana:\"🍌\",bangbang:\"‼️\",bank:\"🏦\",bar_chart:\"📊\",barber:\"💈\",baseball:\"⚾️\",basketball:\"🏀\",basketball_man:\"⛹️\",basketball_woman:\"⛹️&zwj;♀️\",bat:\"🦇\",bath:\"🛀\",bathtub:\"🛁\",battery:\"🔋\",beach_umbrella:\"🏖\",bear:\"🐻\",bed:\"🛏\",bee:\"🐝\",beer:\"🍺\",beers:\"🍻\",beetle:\"🐞\",beginner:\"🔰\",bell:\"🔔\",bellhop_bell:\"🛎\",bento:\"🍱\",biking_man:\"🚴\",bike:\"🚲\",biking_woman:\"🚴&zwj;♀️\",bikini:\"👙\",biohazard:\"☣️\",bird:\"🐦\",birthday:\"🎂\",black_circle:\"⚫️\",black_flag:\"🏴\",black_heart:\"🖤\",black_joker:\"🃏\",black_large_square:\"⬛️\",black_medium_small_square:\"◾️\",black_medium_square:\"◼️\",black_nib:\"✒️\",black_small_square:\"▪️\",black_square_button:\"🔲\",blonde_man:\"👱\",blonde_woman:\"👱&zwj;♀️\",blossom:\"🌼\",blowfish:\"🐡\",blue_book:\"📘\",blue_car:\"🚙\",blue_heart:\"💙\",blush:\"😊\",boar:\"🐗\",boat:\"⛵️\",bomb:\"💣\",book:\"📖\",bookmark:\"🔖\",bookmark_tabs:\"📑\",books:\"📚\",boom:\"💥\",boot:\"👢\",bouquet:\"💐\",bowing_man:\"🙇\",bow_and_arrow:\"🏹\",bowing_woman:\"🙇&zwj;♀️\",bowling:\"🎳\",boxing_glove:\"🥊\",boy:\"👦\",bread:\"🍞\",bride_with_veil:\"👰\",bridge_at_night:\"🌉\",briefcase:\"💼\",broken_heart:\"💔\",bug:\"🐛\",building_construction:\"🏗\",bulb:\"💡\",bullettrain_front:\"🚅\",bullettrain_side:\"🚄\",burrito:\"🌯\",bus:\"🚌\",business_suit_levitating:\"🕴\",busstop:\"🚏\",bust_in_silhouette:\"👤\",busts_in_silhouette:\"👥\",butterfly:\"🦋\",cactus:\"🌵\",cake:\"🍰\",calendar:\"📆\",call_me_hand:\"🤙\",calling:\"📲\",camel:\"🐫\",camera:\"📷\",camera_flash:\"📸\",camping:\"🏕\",cancer:\"♋️\",candle:\"🕯\",candy:\"🍬\",canoe:\"🛶\",capital_abcd:\"🔠\",capricorn:\"♑️\",car:\"🚗\",card_file_box:\"🗃\",card_index:\"📇\",card_index_dividers:\"🗂\",carousel_horse:\"🎠\",carrot:\"🥕\",cat:\"🐱\",cat2:\"🐈\",cd:\"💿\",chains:\"⛓\",champagne:\"🍾\",chart:\"💹\",chart_with_downwards_trend:\"📉\",chart_with_upwards_trend:\"📈\",checkered_flag:\"🏁\",cheese:\"🧀\",cherries:\"🍒\",cherry_blossom:\"🌸\",chestnut:\"🌰\",chicken:\"🐔\",children_crossing:\"🚸\",chipmunk:\"🐿\",chocolate_bar:\"🍫\",christmas_tree:\"🎄\",church:\"⛪️\",cinema:\"🎦\",circus_tent:\"🎪\",city_sunrise:\"🌇\",city_sunset:\"🌆\",cityscape:\"🏙\",cl:\"🆑\",clamp:\"🗜\",clap:\"👏\",clapper:\"🎬\",classical_building:\"🏛\",clinking_glasses:\"🥂\",clipboard:\"📋\",clock1:\"🕐\",clock10:\"🕙\",clock1030:\"🕥\",clock11:\"🕚\",clock1130:\"🕦\",clock12:\"🕛\",clock1230:\"🕧\",clock130:\"🕜\",clock2:\"🕑\",clock230:\"🕝\",clock3:\"🕒\",clock330:\"🕞\",clock4:\"🕓\",clock430:\"🕟\",clock5:\"🕔\",clock530:\"🕠\",clock6:\"🕕\",clock630:\"🕡\",clock7:\"🕖\",clock730:\"🕢\",clock8:\"🕗\",clock830:\"🕣\",clock9:\"🕘\",clock930:\"🕤\",closed_book:\"📕\",closed_lock_with_key:\"🔐\",closed_umbrella:\"🌂\",cloud:\"☁️\",cloud_with_lightning:\"🌩\",cloud_with_lightning_and_rain:\"⛈\",cloud_with_rain:\"🌧\",cloud_with_snow:\"🌨\",clown_face:\"🤡\",clubs:\"♣️\",cocktail:\"🍸\",coffee:\"☕️\",coffin:\"⚰️\",cold_sweat:\"😰\",comet:\"☄️\",computer:\"💻\",computer_mouse:\"🖱\",confetti_ball:\"🎊\",confounded:\"😖\",confused:\"😕\",congratulations:\"㊗️\",construction:\"🚧\",construction_worker_man:\"👷\",construction_worker_woman:\"👷&zwj;♀️\",control_knobs:\"🎛\",convenience_store:\"🏪\",cookie:\"🍪\",cool:\"🆒\",policeman:\"👮\",copyright:\"©️\",corn:\"🌽\",couch_and_lamp:\"🛋\",couple:\"👫\",couple_with_heart_woman_man:\"💑\",couple_with_heart_man_man:\"👨&zwj;❤️&zwj;👨\",couple_with_heart_woman_woman:\"👩&zwj;❤️&zwj;👩\",couplekiss_man_man:\"👨&zwj;❤️&zwj;💋&zwj;👨\",couplekiss_man_woman:\"💏\",couplekiss_woman_woman:\"👩&zwj;❤️&zwj;💋&zwj;👩\",cow:\"🐮\",cow2:\"🐄\",cowboy_hat_face:\"🤠\",crab:\"🦀\",crayon:\"🖍\",credit_card:\"💳\",crescent_moon:\"🌙\",cricket:\"🏏\",crocodile:\"🐊\",croissant:\"🥐\",crossed_fingers:\"🤞\",crossed_flags:\"🎌\",crossed_swords:\"⚔️\",crown:\"👑\",cry:\"😢\",crying_cat_face:\"😿\",crystal_ball:\"🔮\",cucumber:\"🥒\",cupid:\"💘\",curly_loop:\"➰\",currency_exchange:\"💱\",curry:\"🍛\",custard:\"🍮\",customs:\"🛃\",cyclone:\"🌀\",dagger:\"🗡\",dancer:\"💃\",dancing_women:\"👯\",dancing_men:\"👯&zwj;♂️\",dango:\"🍡\",dark_sunglasses:\"🕶\",dart:\"🎯\",dash:\"💨\",date:\"📅\",deciduous_tree:\"🌳\",deer:\"🦌\",department_store:\"🏬\",derelict_house:\"🏚\",desert:\"🏜\",desert_island:\"🏝\",desktop_computer:\"🖥\",male_detective:\"🕵️\",diamond_shape_with_a_dot_inside:\"💠\",diamonds:\"♦️\",disappointed:\"😞\",disappointed_relieved:\"😥\",dizzy:\"💫\",dizzy_face:\"😵\",do_not_litter:\"🚯\",dog:\"🐶\",dog2:\"🐕\",dollar:\"💵\",dolls:\"🎎\",dolphin:\"🐬\",door:\"🚪\",doughnut:\"🍩\",dove:\"🕊\",dragon:\"🐉\",dragon_face:\"🐲\",dress:\"👗\",dromedary_camel:\"🐪\",drooling_face:\"🤤\",droplet:\"💧\",drum:\"🥁\",duck:\"🦆\",dvd:\"📀\",\"e-mail\":\"📧\",eagle:\"🦅\",ear:\"👂\",ear_of_rice:\"🌾\",earth_africa:\"🌍\",earth_americas:\"🌎\",earth_asia:\"🌏\",egg:\"🥚\",eggplant:\"🍆\",eight_pointed_black_star:\"✴️\",eight_spoked_asterisk:\"✳️\",electric_plug:\"🔌\",elephant:\"🐘\",email:\"✉️\",end:\"🔚\",envelope_with_arrow:\"📩\",euro:\"💶\",european_castle:\"🏰\",european_post_office:\"🏤\",evergreen_tree:\"🌲\",exclamation:\"❗️\",expressionless:\"😑\",eye:\"👁\",eye_speech_bubble:\"👁&zwj;🗨\",eyeglasses:\"👓\",eyes:\"👀\",face_with_head_bandage:\"🤕\",face_with_thermometer:\"🤒\",fist_oncoming:\"👊\",factory:\"🏭\",fallen_leaf:\"🍂\",family_man_woman_boy:\"👪\",family_man_boy:\"👨&zwj;👦\",family_man_boy_boy:\"👨&zwj;👦&zwj;👦\",family_man_girl:\"👨&zwj;👧\",family_man_girl_boy:\"👨&zwj;👧&zwj;👦\",family_man_girl_girl:\"👨&zwj;👧&zwj;👧\",family_man_man_boy:\"👨&zwj;👨&zwj;👦\",family_man_man_boy_boy:\"👨&zwj;👨&zwj;👦&zwj;👦\",family_man_man_girl:\"👨&zwj;👨&zwj;👧\",family_man_man_girl_boy:\"👨&zwj;👨&zwj;👧&zwj;👦\",family_man_man_girl_girl:\"👨&zwj;👨&zwj;👧&zwj;👧\",family_man_woman_boy_boy:\"👨&zwj;👩&zwj;👦&zwj;👦\",family_man_woman_girl:\"👨&zwj;👩&zwj;👧\",family_man_woman_girl_boy:\"👨&zwj;👩&zwj;👧&zwj;👦\",family_man_woman_girl_girl:\"👨&zwj;👩&zwj;👧&zwj;👧\",family_woman_boy:\"👩&zwj;👦\",family_woman_boy_boy:\"👩&zwj;👦&zwj;👦\",family_woman_girl:\"👩&zwj;👧\",family_woman_girl_boy:\"👩&zwj;👧&zwj;👦\",family_woman_girl_girl:\"👩&zwj;👧&zwj;👧\",family_woman_woman_boy:\"👩&zwj;👩&zwj;👦\",family_woman_woman_boy_boy:\"👩&zwj;👩&zwj;👦&zwj;👦\",family_woman_woman_girl:\"👩&zwj;👩&zwj;👧\",family_woman_woman_girl_boy:\"👩&zwj;👩&zwj;👧&zwj;👦\",family_woman_woman_girl_girl:\"👩&zwj;👩&zwj;👧&zwj;👧\",fast_forward:\"⏩\",fax:\"📠\",fearful:\"😨\",feet:\"🐾\",female_detective:\"🕵️&zwj;♀️\",ferris_wheel:\"🎡\",ferry:\"⛴\",field_hockey:\"🏑\",file_cabinet:\"🗄\",file_folder:\"📁\",film_projector:\"📽\",film_strip:\"🎞\",fire:\"🔥\",fire_engine:\"🚒\",fireworks:\"🎆\",first_quarter_moon:\"🌓\",first_quarter_moon_with_face:\"🌛\",fish:\"🐟\",fish_cake:\"🍥\",fishing_pole_and_fish:\"🎣\",fist_raised:\"✊\",fist_left:\"🤛\",fist_right:\"🤜\",flags:\"🎏\",flashlight:\"🔦\",fleur_de_lis:\"⚜️\",flight_arrival:\"🛬\",flight_departure:\"🛫\",floppy_disk:\"💾\",flower_playing_cards:\"🎴\",flushed:\"😳\",fog:\"🌫\",foggy:\"🌁\",football:\"🏈\",footprints:\"👣\",fork_and_knife:\"🍴\",fountain:\"⛲️\",fountain_pen:\"🖋\",four_leaf_clover:\"🍀\",fox_face:\"🦊\",framed_picture:\"🖼\",free:\"🆓\",fried_egg:\"🍳\",fried_shrimp:\"🍤\",fries:\"🍟\",frog:\"🐸\",frowning:\"😦\",frowning_face:\"☹️\",frowning_man:\"🙍&zwj;♂️\",frowning_woman:\"🙍\",middle_finger:\"🖕\",fuelpump:\"⛽️\",full_moon:\"🌕\",full_moon_with_face:\"🌝\",funeral_urn:\"⚱️\",game_die:\"🎲\",gear:\"⚙️\",gem:\"💎\",gemini:\"♊️\",ghost:\"👻\",gift:\"🎁\",gift_heart:\"💝\",girl:\"👧\",globe_with_meridians:\"🌐\",goal_net:\"🥅\",goat:\"🐐\",golf:\"⛳️\",golfing_man:\"🏌️\",golfing_woman:\"🏌️&zwj;♀️\",gorilla:\"🦍\",grapes:\"🍇\",green_apple:\"🍏\",green_book:\"📗\",green_heart:\"💚\",green_salad:\"🥗\",grey_exclamation:\"❕\",grey_question:\"❔\",grimacing:\"😬\",grin:\"😁\",grinning:\"😀\",guardsman:\"💂\",guardswoman:\"💂&zwj;♀️\",guitar:\"🎸\",gun:\"🔫\",haircut_woman:\"💇\",haircut_man:\"💇&zwj;♂️\",hamburger:\"🍔\",hammer:\"🔨\",hammer_and_pick:\"⚒\",hammer_and_wrench:\"🛠\",hamster:\"🐹\",hand:\"✋\",handbag:\"👜\",handshake:\"🤝\",hankey:\"💩\",hatched_chick:\"🐥\",hatching_chick:\"🐣\",headphones:\"🎧\",hear_no_evil:\"🙉\",heart:\"❤️\",heart_decoration:\"💟\",heart_eyes:\"😍\",heart_eyes_cat:\"😻\",heartbeat:\"💓\",heartpulse:\"💗\",hearts:\"♥️\",heavy_check_mark:\"✔️\",heavy_division_sign:\"➗\",heavy_dollar_sign:\"💲\",heavy_heart_exclamation:\"❣️\",heavy_minus_sign:\"➖\",heavy_multiplication_x:\"✖️\",heavy_plus_sign:\"➕\",helicopter:\"🚁\",herb:\"🌿\",hibiscus:\"🌺\",high_brightness:\"🔆\",high_heel:\"👠\",hocho:\"🔪\",hole:\"🕳\",honey_pot:\"🍯\",horse:\"🐴\",horse_racing:\"🏇\",hospital:\"🏥\",hot_pepper:\"🌶\",hotdog:\"🌭\",hotel:\"🏨\",hotsprings:\"♨️\",hourglass:\"⌛️\",hourglass_flowing_sand:\"⏳\",house:\"🏠\",house_with_garden:\"🏡\",houses:\"🏘\",hugs:\"🤗\",hushed:\"😯\",ice_cream:\"🍨\",ice_hockey:\"🏒\",ice_skate:\"⛸\",icecream:\"🍦\",id:\"🆔\",ideograph_advantage:\"🉐\",imp:\"👿\",inbox_tray:\"📥\",incoming_envelope:\"📨\",tipping_hand_woman:\"💁\",information_source:\"ℹ️\",innocent:\"😇\",interrobang:\"⁉️\",iphone:\"📱\",izakaya_lantern:\"🏮\",jack_o_lantern:\"🎃\",japan:\"🗾\",japanese_castle:\"🏯\",japanese_goblin:\"👺\",japanese_ogre:\"👹\",jeans:\"👖\",joy:\"😂\",joy_cat:\"😹\",joystick:\"🕹\",kaaba:\"🕋\",key:\"🔑\",keyboard:\"⌨️\",keycap_ten:\"🔟\",kick_scooter:\"🛴\",kimono:\"👘\",kiss:\"💋\",kissing:\"😗\",kissing_cat:\"😽\",kissing_closed_eyes:\"😚\",kissing_heart:\"😘\",kissing_smiling_eyes:\"😙\",kiwi_fruit:\"🥝\",koala:\"🐨\",koko:\"🈁\",label:\"🏷\",large_blue_circle:\"🔵\",large_blue_diamond:\"🔷\",large_orange_diamond:\"🔶\",last_quarter_moon:\"🌗\",last_quarter_moon_with_face:\"🌜\",latin_cross:\"✝️\",laughing:\"😆\",leaves:\"🍃\",ledger:\"📒\",left_luggage:\"🛅\",left_right_arrow:\"↔️\",leftwards_arrow_with_hook:\"↩️\",lemon:\"🍋\",leo:\"♌️\",leopard:\"🐆\",level_slider:\"🎚\",libra:\"♎️\",light_rail:\"🚈\",link:\"🔗\",lion:\"🦁\",lips:\"👄\",lipstick:\"💄\",lizard:\"🦎\",lock:\"🔒\",lock_with_ink_pen:\"🔏\",lollipop:\"🍭\",loop:\"➿\",loud_sound:\"🔊\",loudspeaker:\"📢\",love_hotel:\"🏩\",love_letter:\"💌\",low_brightness:\"🔅\",lying_face:\"🤥\",m:\"Ⓜ️\",mag:\"🔍\",mag_right:\"🔎\",mahjong:\"🀄️\",mailbox:\"📫\",mailbox_closed:\"📪\",mailbox_with_mail:\"📬\",mailbox_with_no_mail:\"📭\",man:\"👨\",man_artist:\"👨&zwj;🎨\",man_astronaut:\"👨&zwj;🚀\",man_cartwheeling:\"🤸&zwj;♂️\",man_cook:\"👨&zwj;🍳\",man_dancing:\"🕺\",man_facepalming:\"🤦&zwj;♂️\",man_factory_worker:\"👨&zwj;🏭\",man_farmer:\"👨&zwj;🌾\",man_firefighter:\"👨&zwj;🚒\",man_health_worker:\"👨&zwj;⚕️\",man_in_tuxedo:\"🤵\",man_judge:\"👨&zwj;⚖️\",man_juggling:\"🤹&zwj;♂️\",man_mechanic:\"👨&zwj;🔧\",man_office_worker:\"👨&zwj;💼\",man_pilot:\"👨&zwj;✈️\",man_playing_handball:\"🤾&zwj;♂️\",man_playing_water_polo:\"🤽&zwj;♂️\",man_scientist:\"👨&zwj;🔬\",man_shrugging:\"🤷&zwj;♂️\",man_singer:\"👨&zwj;🎤\",man_student:\"👨&zwj;🎓\",man_teacher:\"👨&zwj;🏫\",man_technologist:\"👨&zwj;💻\",man_with_gua_pi_mao:\"👲\",man_with_turban:\"👳\",tangerine:\"🍊\",mans_shoe:\"👞\",mantelpiece_clock:\"🕰\",maple_leaf:\"🍁\",martial_arts_uniform:\"🥋\",mask:\"😷\",massage_woman:\"💆\",massage_man:\"💆&zwj;♂️\",meat_on_bone:\"🍖\",medal_military:\"🎖\",medal_sports:\"🏅\",mega:\"📣\",melon:\"🍈\",memo:\"📝\",men_wrestling:\"🤼&zwj;♂️\",menorah:\"🕎\",mens:\"🚹\",metal:\"🤘\",metro:\"🚇\",microphone:\"🎤\",microscope:\"🔬\",milk_glass:\"🥛\",milky_way:\"🌌\",minibus:\"🚐\",minidisc:\"💽\",mobile_phone_off:\"📴\",money_mouth_face:\"🤑\",money_with_wings:\"💸\",moneybag:\"💰\",monkey:\"🐒\",monkey_face:\"🐵\",monorail:\"🚝\",moon:\"🌔\",mortar_board:\"🎓\",mosque:\"🕌\",motor_boat:\"🛥\",motor_scooter:\"🛵\",motorcycle:\"🏍\",motorway:\"🛣\",mount_fuji:\"🗻\",mountain:\"⛰\",mountain_biking_man:\"🚵\",mountain_biking_woman:\"🚵&zwj;♀️\",mountain_cableway:\"🚠\",mountain_railway:\"🚞\",mountain_snow:\"🏔\",mouse:\"🐭\",mouse2:\"🐁\",movie_camera:\"🎥\",moyai:\"🗿\",mrs_claus:\"🤶\",muscle:\"💪\",mushroom:\"🍄\",musical_keyboard:\"🎹\",musical_note:\"🎵\",musical_score:\"🎼\",mute:\"🔇\",nail_care:\"💅\",name_badge:\"📛\",national_park:\"🏞\",nauseated_face:\"🤢\",necktie:\"👔\",negative_squared_cross_mark:\"❎\",nerd_face:\"🤓\",neutral_face:\"😐\",new:\"🆕\",new_moon:\"🌑\",new_moon_with_face:\"🌚\",newspaper:\"📰\",newspaper_roll:\"🗞\",next_track_button:\"⏭\",ng:\"🆖\",no_good_man:\"🙅&zwj;♂️\",no_good_woman:\"🙅\",night_with_stars:\"🌃\",no_bell:\"🔕\",no_bicycles:\"🚳\",no_entry:\"⛔️\",no_entry_sign:\"🚫\",no_mobile_phones:\"📵\",no_mouth:\"😶\",no_pedestrians:\"🚷\",no_smoking:\"🚭\",\"non-potable_water\":\"🚱\",nose:\"👃\",notebook:\"📓\",notebook_with_decorative_cover:\"📔\",notes:\"🎶\",nut_and_bolt:\"🔩\",o:\"⭕️\",o2:\"🅾️\",ocean:\"🌊\",octopus:\"🐙\",oden:\"🍢\",office:\"🏢\",oil_drum:\"🛢\",ok:\"🆗\",ok_hand:\"👌\",ok_man:\"🙆&zwj;♂️\",ok_woman:\"🙆\",old_key:\"🗝\",older_man:\"👴\",older_woman:\"👵\",om:\"🕉\",on:\"🔛\",oncoming_automobile:\"🚘\",oncoming_bus:\"🚍\",oncoming_police_car:\"🚔\",oncoming_taxi:\"🚖\",open_file_folder:\"📂\",open_hands:\"👐\",open_mouth:\"😮\",open_umbrella:\"☂️\",ophiuchus:\"⛎\",orange_book:\"📙\",orthodox_cross:\"☦️\",outbox_tray:\"📤\",owl:\"🦉\",ox:\"🐂\",package:\"📦\",page_facing_up:\"📄\",page_with_curl:\"📃\",pager:\"📟\",paintbrush:\"🖌\",palm_tree:\"🌴\",pancakes:\"🥞\",panda_face:\"🐼\",paperclip:\"📎\",paperclips:\"🖇\",parasol_on_ground:\"⛱\",parking:\"🅿️\",part_alternation_mark:\"〽️\",partly_sunny:\"⛅️\",passenger_ship:\"🛳\",passport_control:\"🛂\",pause_button:\"⏸\",peace_symbol:\"☮️\",peach:\"🍑\",peanuts:\"🥜\",pear:\"🍐\",pen:\"🖊\",pencil2:\"✏️\",penguin:\"🐧\",pensive:\"😔\",performing_arts:\"🎭\",persevere:\"😣\",person_fencing:\"🤺\",pouting_woman:\"🙎\",phone:\"☎️\",pick:\"⛏\",pig:\"🐷\",pig2:\"🐖\",pig_nose:\"🐽\",pill:\"💊\",pineapple:\"🍍\",ping_pong:\"🏓\",pisces:\"♓️\",pizza:\"🍕\",place_of_worship:\"🛐\",plate_with_cutlery:\"🍽\",play_or_pause_button:\"⏯\",point_down:\"👇\",point_left:\"👈\",point_right:\"👉\",point_up:\"☝️\",point_up_2:\"👆\",police_car:\"🚓\",policewoman:\"👮&zwj;♀️\",poodle:\"🐩\",popcorn:\"🍿\",post_office:\"🏣\",postal_horn:\"📯\",postbox:\"📮\",potable_water:\"🚰\",potato:\"🥔\",pouch:\"👝\",poultry_leg:\"🍗\",pound:\"💷\",rage:\"😡\",pouting_cat:\"😾\",pouting_man:\"🙎&zwj;♂️\",pray:\"🙏\",prayer_beads:\"📿\",pregnant_woman:\"🤰\",previous_track_button:\"⏮\",prince:\"🤴\",princess:\"👸\",printer:\"🖨\",purple_heart:\"💜\",purse:\"👛\",pushpin:\"📌\",put_litter_in_its_place:\"🚮\",question:\"❓\",rabbit:\"🐰\",rabbit2:\"🐇\",racehorse:\"🐎\",racing_car:\"🏎\",radio:\"📻\",radio_button:\"🔘\",radioactive:\"☢️\",railway_car:\"🚃\",railway_track:\"🛤\",rainbow:\"🌈\",rainbow_flag:\"🏳️&zwj;🌈\",raised_back_of_hand:\"🤚\",raised_hand_with_fingers_splayed:\"🖐\",raised_hands:\"🙌\",raising_hand_woman:\"🙋\",raising_hand_man:\"🙋&zwj;♂️\",ram:\"🐏\",ramen:\"🍜\",rat:\"🐀\",record_button:\"⏺\",recycle:\"♻️\",red_circle:\"🔴\",registered:\"®️\",relaxed:\"☺️\",relieved:\"😌\",reminder_ribbon:\"🎗\",repeat:\"🔁\",repeat_one:\"🔂\",rescue_worker_helmet:\"⛑\",restroom:\"🚻\",revolving_hearts:\"💞\",rewind:\"⏪\",rhinoceros:\"🦏\",ribbon:\"🎀\",rice:\"🍚\",rice_ball:\"🍙\",rice_cracker:\"🍘\",rice_scene:\"🎑\",right_anger_bubble:\"🗯\",ring:\"💍\",robot:\"🤖\",rocket:\"🚀\",rofl:\"🤣\",roll_eyes:\"🙄\",roller_coaster:\"🎢\",rooster:\"🐓\",rose:\"🌹\",rosette:\"🏵\",rotating_light:\"🚨\",round_pushpin:\"📍\",rowing_man:\"🚣\",rowing_woman:\"🚣&zwj;♀️\",rugby_football:\"🏉\",running_man:\"🏃\",running_shirt_with_sash:\"🎽\",running_woman:\"🏃&zwj;♀️\",sa:\"🈂️\",sagittarius:\"♐️\",sake:\"🍶\",sandal:\"👡\",santa:\"🎅\",satellite:\"📡\",saxophone:\"🎷\",school:\"🏫\",school_satchel:\"🎒\",scissors:\"✂️\",scorpion:\"🦂\",scorpius:\"♏️\",scream:\"😱\",scream_cat:\"🙀\",scroll:\"📜\",seat:\"💺\",secret:\"㊙️\",see_no_evil:\"🙈\",seedling:\"🌱\",selfie:\"🤳\",shallow_pan_of_food:\"🥘\",shamrock:\"☘️\",shark:\"🦈\",shaved_ice:\"🍧\",sheep:\"🐑\",shell:\"🐚\",shield:\"🛡\",shinto_shrine:\"⛩\",ship:\"🚢\",shirt:\"👕\",shopping:\"🛍\",shopping_cart:\"🛒\",shower:\"🚿\",shrimp:\"🦐\",signal_strength:\"📶\",six_pointed_star:\"🔯\",ski:\"🎿\",skier:\"⛷\",skull:\"💀\",skull_and_crossbones:\"☠️\",sleeping:\"😴\",sleeping_bed:\"🛌\",sleepy:\"😪\",slightly_frowning_face:\"🙁\",slightly_smiling_face:\"🙂\",slot_machine:\"🎰\",small_airplane:\"🛩\",small_blue_diamond:\"🔹\",small_orange_diamond:\"🔸\",small_red_triangle:\"🔺\",small_red_triangle_down:\"🔻\",smile:\"😄\",smile_cat:\"😸\",smiley:\"😃\",smiley_cat:\"😺\",smiling_imp:\"😈\",smirk:\"😏\",smirk_cat:\"😼\",smoking:\"🚬\",snail:\"🐌\",snake:\"🐍\",sneezing_face:\"🤧\",snowboarder:\"🏂\",snowflake:\"❄️\",snowman:\"⛄️\",snowman_with_snow:\"☃️\",sob:\"😭\",soccer:\"⚽️\",soon:\"🔜\",sos:\"🆘\",sound:\"🔉\",space_invader:\"👾\",spades:\"♠️\",spaghetti:\"🍝\",sparkle:\"❇️\",sparkler:\"🎇\",sparkles:\"✨\",sparkling_heart:\"💖\",speak_no_evil:\"🙊\",speaker:\"🔈\",speaking_head:\"🗣\",speech_balloon:\"💬\",speedboat:\"🚤\",spider:\"🕷\",spider_web:\"🕸\",spiral_calendar:\"🗓\",spiral_notepad:\"🗒\",spoon:\"🥄\",squid:\"🦑\",stadium:\"🏟\",star:\"⭐️\",star2:\"🌟\",star_and_crescent:\"☪️\",star_of_david:\"✡️\",stars:\"🌠\",station:\"🚉\",statue_of_liberty:\"🗽\",steam_locomotive:\"🚂\",stew:\"🍲\",stop_button:\"⏹\",stop_sign:\"🛑\",stopwatch:\"⏱\",straight_ruler:\"📏\",strawberry:\"🍓\",stuck_out_tongue:\"😛\",stuck_out_tongue_closed_eyes:\"😝\",stuck_out_tongue_winking_eye:\"😜\",studio_microphone:\"🎙\",stuffed_flatbread:\"🥙\",sun_behind_large_cloud:\"🌥\",sun_behind_rain_cloud:\"🌦\",sun_behind_small_cloud:\"🌤\",sun_with_face:\"🌞\",sunflower:\"🌻\",sunglasses:\"😎\",sunny:\"☀️\",sunrise:\"🌅\",sunrise_over_mountains:\"🌄\",surfing_man:\"🏄\",surfing_woman:\"🏄&zwj;♀️\",sushi:\"🍣\",suspension_railway:\"🚟\",sweat:\"😓\",sweat_drops:\"💦\",sweat_smile:\"😅\",sweet_potato:\"🍠\",swimming_man:\"🏊\",swimming_woman:\"🏊&zwj;♀️\",symbols:\"🔣\",synagogue:\"🕍\",syringe:\"💉\",taco:\"🌮\",tada:\"🎉\",tanabata_tree:\"🎋\",taurus:\"♉️\",taxi:\"🚕\",tea:\"🍵\",telephone_receiver:\"📞\",telescope:\"🔭\",tennis:\"🎾\",tent:\"⛺️\",thermometer:\"🌡\",thinking:\"🤔\",thought_balloon:\"💭\",ticket:\"🎫\",tickets:\"🎟\",tiger:\"🐯\",tiger2:\"🐅\",timer_clock:\"⏲\",tipping_hand_man:\"💁&zwj;♂️\",tired_face:\"😫\",tm:\"™️\",toilet:\"🚽\",tokyo_tower:\"🗼\",tomato:\"🍅\",tongue:\"👅\",top:\"🔝\",tophat:\"🎩\",tornado:\"🌪\",trackball:\"🖲\",tractor:\"🚜\",traffic_light:\"🚥\",train:\"🚋\",train2:\"🚆\",tram:\"🚊\",triangular_flag_on_post:\"🚩\",triangular_ruler:\"📐\",trident:\"🔱\",triumph:\"😤\",trolleybus:\"🚎\",trophy:\"🏆\",tropical_drink:\"🍹\",tropical_fish:\"🐠\",truck:\"🚚\",trumpet:\"🎺\",tulip:\"🌷\",tumbler_glass:\"🥃\",turkey:\"🦃\",turtle:\"🐢\",tv:\"📺\",twisted_rightwards_arrows:\"🔀\",two_hearts:\"💕\",two_men_holding_hands:\"👬\",two_women_holding_hands:\"👭\",u5272:\"🈹\",u5408:\"🈴\",u55b6:\"🈺\",u6307:\"🈯️\",u6708:\"🈷️\",u6709:\"🈶\",u6e80:\"🈵\",u7121:\"🈚️\",u7533:\"🈸\",u7981:\"🈲\",u7a7a:\"🈳\",umbrella:\"☔️\",unamused:\"😒\",underage:\"🔞\",unicorn:\"🦄\",unlock:\"🔓\",up:\"🆙\",upside_down_face:\"🙃\",v:\"✌️\",vertical_traffic_light:\"🚦\",vhs:\"📼\",vibration_mode:\"📳\",video_camera:\"📹\",video_game:\"🎮\",violin:\"🎻\",virgo:\"♍️\",volcano:\"🌋\",volleyball:\"🏐\",vs:\"🆚\",vulcan_salute:\"🖖\",walking_man:\"🚶\",walking_woman:\"🚶&zwj;♀️\",waning_crescent_moon:\"🌘\",waning_gibbous_moon:\"🌖\",warning:\"⚠️\",wastebasket:\"🗑\",watch:\"⌚️\",water_buffalo:\"🐃\",watermelon:\"🍉\",wave:\"👋\",wavy_dash:\"〰️\",waxing_crescent_moon:\"🌒\",wc:\"🚾\",weary:\"😩\",wedding:\"💒\",weight_lifting_man:\"🏋️\",weight_lifting_woman:\"🏋️&zwj;♀️\",whale:\"🐳\",whale2:\"🐋\",wheel_of_dharma:\"☸️\",wheelchair:\"♿️\",white_check_mark:\"✅\",white_circle:\"⚪️\",white_flag:\"🏳️\",white_flower:\"💮\",white_large_square:\"⬜️\",white_medium_small_square:\"◽️\",white_medium_square:\"◻️\",white_small_square:\"▫️\",white_square_button:\"🔳\",wilted_flower:\"🥀\",wind_chime:\"🎐\",wind_face:\"🌬\",wine_glass:\"🍷\",wink:\"😉\",wolf:\"🐺\",woman:\"👩\",woman_artist:\"👩&zwj;🎨\",woman_astronaut:\"👩&zwj;🚀\",woman_cartwheeling:\"🤸&zwj;♀️\",woman_cook:\"👩&zwj;🍳\",woman_facepalming:\"🤦&zwj;♀️\",woman_factory_worker:\"👩&zwj;🏭\",woman_farmer:\"👩&zwj;🌾\",woman_firefighter:\"👩&zwj;🚒\",woman_health_worker:\"👩&zwj;⚕️\",woman_judge:\"👩&zwj;⚖️\",woman_juggling:\"🤹&zwj;♀️\",woman_mechanic:\"👩&zwj;🔧\",woman_office_worker:\"👩&zwj;💼\",woman_pilot:\"👩&zwj;✈️\",woman_playing_handball:\"🤾&zwj;♀️\",woman_playing_water_polo:\"🤽&zwj;♀️\",woman_scientist:\"👩&zwj;🔬\",woman_shrugging:\"🤷&zwj;♀️\",woman_singer:\"👩&zwj;🎤\",woman_student:\"👩&zwj;🎓\",woman_teacher:\"👩&zwj;🏫\",woman_technologist:\"👩&zwj;💻\",woman_with_turban:\"👳&zwj;♀️\",womans_clothes:\"👚\",womans_hat:\"👒\",women_wrestling:\"🤼&zwj;♀️\",womens:\"🚺\",world_map:\"🗺\",worried:\"😟\",wrench:\"🔧\",writing_hand:\"✍️\",x:\"❌\",yellow_heart:\"💛\",yen:\"💴\",yin_yang:\"☯️\",yum:\"😋\",zap:\"⚡️\",zipper_mouth_face:\"🤐\",zzz:\"💤\",octocat:'<img alt=\":octocat:\" height=\"20\" width=\"20\" align=\"absmiddle\" src=\"https://assets-cdn.github.com/images/icons/emoji/octocat.png\">',showdown:\"<span style=\\\"font-family: 'Anonymous Pro', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;\\\">S</span>\"},s.Converter=function(e){\"use strict\";var r={},t=[],a=[],n={},o=c,d={parsed:{},raw:\"\",format:\"\"};function h(e,r){if(r=r||null,s.helper.isString(e)){if(r=e=s.helper.stdExtName(e),s.extensions[e])return void function(e,r){\"function\"==typeof e&&(e=e(new s.Converter));s.helper.isArray(e)||(e=[e]);var n=p(e,r);if(!n.valid)throw Error(n.error);for(var o=0;o<e.length;++o)switch(e[o].type){case\"lang\":t.push(e[o]);break;case\"output\":a.push(e[o]);break;default:throw Error(\"Extension loader error: Type unrecognized!!!\")}}(s.extensions[e],e);if(s.helper.isUndefined(i[e]))throw Error('Extension \"'+e+'\" could not be loaded. It was either not found or is not a valid extension.');e=i[e]}\"function\"==typeof e&&(e=e()),s.helper.isArray(e)||(e=[e]);var n=p(e,r);if(!n.valid)throw Error(n.error);for(var o=0;o<e.length;++o){switch(e[o].type){case\"lang\":t.push(e[o]);break;case\"output\":a.push(e[o])}if(e[o].hasOwnProperty(\"listeners\"))for(var l in e[o].listeners)e[o].listeners.hasOwnProperty(l)&&_(l,e[o].listeners[l])}}function _(e,r){if(!s.helper.isString(e))throw Error(\"Invalid argument in converter.listen() method: name must be a string, but \"+typeof e+\" given\");if(\"function\"!=typeof r)throw Error(\"Invalid argument in converter.listen() method: callback must be a function, but \"+typeof r+\" given\");n.hasOwnProperty(e)||(n[e]=[]),n[e].push(r)}!function(){for(var t in e=e||{},l)l.hasOwnProperty(t)&&(r[t]=l[t]);if(\"object\"!=typeof e)throw Error(\"Converter expects the passed parameter to be an object, but \"+typeof e+\" was passed instead.\");for(var a in e)e.hasOwnProperty(a)&&(r[a]=e[a]);r.extensions&&s.helper.forEach(r.extensions,h)}(),this._dispatch=function(e,r,t,a){if(n.hasOwnProperty(e))for(var s=0;s<n[e].length;++s){var o=n[e][s](e,r,this,t,a);o&&void 0!==o&&(r=o)}return r},this.listen=function(e,r){return _(e,r),this},this.makeHtml=function(e){if(!e)return e;var n={gHtmlBlocks:[],gHtmlMdBlocks:[],gHtmlSpans:[],gUrls:{},gTitles:{},gDimensions:{},gListLevel:0,hashLinkCounts:{},langExtensions:t,outputModifiers:a,converter:this,ghCodeBlocks:[],metadata:{parsed:{},raw:\"\",format:\"\"}};return e=(e=(e=(e=(e=e.replace(/¨/g,\"¨T\")).replace(/\\$/g,\"¨D\")).replace(/\\r\\n/g,\"\\n\")).replace(/\\r/g,\"\\n\")).replace(/\\u00A0/g,\"&nbsp;\"),r.smartIndentationFix&&(e=function(e){var r=e.match(/^\\s*/)[0].length,t=new RegExp(\"^\\\\s{0,\"+r+\"}\",\"gm\");return e.replace(t,\"\")}(e)),e=\"\\n\\n\"+e+\"\\n\\n\",e=(e=s.subParser(\"detab\")(e,r,n)).replace(/^[ \\t]+$/gm,\"\"),s.helper.forEach(t,function(t){e=s.subParser(\"runExtension\")(t,e,r,n)}),e=s.subParser(\"metadata\")(e,r,n),e=s.subParser(\"hashPreCodeTags\")(e,r,n),e=s.subParser(\"githubCodeBlocks\")(e,r,n),e=s.subParser(\"hashHTMLBlocks\")(e,r,n),e=s.subParser(\"hashCodeTags\")(e,r,n),e=s.subParser(\"stripLinkDefinitions\")(e,r,n),e=s.subParser(\"blockGamut\")(e,r,n),e=s.subParser(\"unhashHTMLSpans\")(e,r,n),e=(e=(e=s.subParser(\"unescapeSpecialChars\")(e,r,n)).replace(/¨D/g,\"$$\")).replace(/¨T/g,\"¨\"),e=s.subParser(\"completeHTMLDocument\")(e,r,n),s.helper.forEach(a,function(t){e=s.subParser(\"runExtension\")(t,e,r,n)}),d=n.metadata,e},this.setOption=function(e,t){r[e]=t},this.getOption=function(e){return r[e]},this.getOptions=function(){return r},this.addExtension=function(e,r){h(e,r=r||null)},this.useExtension=function(e){h(e)},this.setFlavor=function(e){if(!u.hasOwnProperty(e))throw Error(e+\" flavor was not found\");var t=u[e];for(var a in o=e,t)t.hasOwnProperty(a)&&(r[a]=t[a])},this.getFlavor=function(){return o},this.removeExtension=function(e){s.helper.isArray(e)||(e=[e]);for(var r=0;r<e.length;++r){for(var n=e[r],o=0;o<t.length;++o)t[o]===n&&t[o].splice(o,1);for(;0<a.length;++o)a[0]===n&&a[0].splice(o,1)}},this.getAllExtensions=function(){return{language:t,output:a}},this.getMetadata=function(e){return e?d.raw:d.parsed},this.getMetadataFormat=function(){return d.format},this._setMetadataPair=function(e,r){d.parsed[e]=r},this._setMetadataFormat=function(e){d.format=e},this._setMetadataRaw=function(e){d.raw=e}},s.subParser(\"anchors\",function(e,r,t){\"use strict\";var a=function(e,a,n,o,i,l,c){if(s.helper.isUndefined(c)&&(c=\"\"),n=n.toLowerCase(),e.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m)>-1)o=\"\";else if(!o){if(n||(n=a.toLowerCase().replace(/ ?\\n/g,\" \")),o=\"#\"+n,s.helper.isUndefined(t.gUrls[n]))return e;o=t.gUrls[n],s.helper.isUndefined(t.gTitles[n])||(c=t.gTitles[n])}var u='<a href=\"'+(o=o.replace(s.helper.regexes.asteriskDashAndColon,s.helper.escapeCharactersCallback))+'\"';return\"\"!==c&&null!==c&&(u+=' title=\"'+(c=(c=c.replace(/\"/g,\"&quot;\")).replace(s.helper.regexes.asteriskDashAndColon,s.helper.escapeCharactersCallback))+'\"'),r.openLinksInNewWindow&&!/^#/.test(o)&&(u+=' target=\"¨E95Eblank\"'),u+=\">\"+a+\"</a>\"};return e=(e=(e=(e=(e=t.converter._dispatch(\"anchors.before\",e,r,t)).replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)] ?(?:\\n *)?\\[(.*?)]()()()()/g,a)).replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<([^>]*)>(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,a)).replace(/\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]()[ \\t]*\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?:[ \\t]*(([\"'])([^\"]*?)\\5))?[ \\t]?\\)/g,a)).replace(/\\[([^\\[\\]]+)]()()()()()/g,a),r.ghMentions&&(e=e.replace(/(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d.-]+?[a-z\\d]+)*))/gim,function(e,t,a,n,o){if(\"\\\\\"===a)return t+n;if(!s.helper.isString(r.ghMentionsLink))throw new Error(\"ghMentionsLink option must be a string\");var i=r.ghMentionsLink.replace(/\\{u}/g,o),l=\"\";return r.openLinksInNewWindow&&(l=' target=\"¨E95Eblank\"'),t+'<a href=\"'+i+'\"'+l+\">\"+n+\"</a>\"})),e=t.converter._dispatch(\"anchors.after\",e,r,t)});var _=/([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+?\\.[^'\">\\s]+?)()(\\1)?(?=\\s|$)(?![\"<>])/gi,g=/([*~_]+|\\b)(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?,()\\[\\]])?(\\1)?(?=\\s|$)(?![\"<>])/gi,m=/()<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)()>()/gi,f=/(^|\\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?=$|\\s)/gim,b=/<()(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi,w=function(e){\"use strict\";return function(r,t,a,n,o,i,l){var c=a=a.replace(s.helper.regexes.asteriskDashAndColon,s.helper.escapeCharactersCallback),u=\"\",p=\"\",d=t||\"\",h=l||\"\";return/^www\\./i.test(a)&&(a=a.replace(/^www\\./i,\"http://www.\")),e.excludeTrailingPunctuationFromURLs&&i&&(u=i),e.openLinksInNewWindow&&(p=' target=\"¨E95Eblank\"'),d+'<a href=\"'+a+'\"'+p+\">\"+c+\"</a>\"+u+h}},k=function(e,r){\"use strict\";return function(t,a,n){var o=\"mailto:\";return a=a||\"\",n=s.subParser(\"unescapeSpecialChars\")(n,e,r),e.encodeEmails?(o=s.helper.encodeEmailAddress(o+n),n=s.helper.encodeEmailAddress(n)):o+=n,a+'<a href=\"'+o+'\">'+n+\"</a>\"}};s.subParser(\"autoLinks\",function(e,r,t){\"use strict\";return e=(e=(e=t.converter._dispatch(\"autoLinks.before\",e,r,t)).replace(m,w(r))).replace(b,k(r,t)),e=t.converter._dispatch(\"autoLinks.after\",e,r,t)}),s.subParser(\"simplifiedAutoLinks\",function(e,r,t){\"use strict\";return r.simplifiedAutoLink?(e=t.converter._dispatch(\"simplifiedAutoLinks.before\",e,r,t),e=(e=r.excludeTrailingPunctuationFromURLs?e.replace(g,w(r)):e.replace(_,w(r))).replace(f,k(r,t)),e=t.converter._dispatch(\"simplifiedAutoLinks.after\",e,r,t)):e}),s.subParser(\"blockGamut\",function(e,r,t){\"use strict\";return e=t.converter._dispatch(\"blockGamut.before\",e,r,t),e=s.subParser(\"blockQuotes\")(e,r,t),e=s.subParser(\"headers\")(e,r,t),e=s.subParser(\"horizontalRule\")(e,r,t),e=s.subParser(\"lists\")(e,r,t),e=s.subParser(\"codeBlocks\")(e,r,t),e=s.subParser(\"tables\")(e,r,t),e=s.subParser(\"hashHTMLBlocks\")(e,r,t),e=s.subParser(\"paragraphs\")(e,r,t),e=t.converter._dispatch(\"blockGamut.after\",e,r,t)}),s.subParser(\"blockQuotes\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"blockQuotes.before\",e,r,t),e+=\"\\n\\n\";var a=/(^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+/gm;return r.splitAdjacentBlockquotes&&(a=/^ {0,3}>[\\s\\S]*?(?:\\n\\n)/gm),e=e.replace(a,function(e){return e=(e=(e=e.replace(/^[ \\t]*>[ \\t]?/gm,\"\")).replace(/¨0/g,\"\")).replace(/^[ \\t]+$/gm,\"\"),e=s.subParser(\"githubCodeBlocks\")(e,r,t),e=(e=(e=s.subParser(\"blockGamut\")(e,r,t)).replace(/(^|\\n)/g,\"$1  \")).replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm,function(e,r){var t=r;return t=(t=t.replace(/^  /gm,\"¨0\")).replace(/¨0/g,\"\")}),s.subParser(\"hashBlock\")(\"<blockquote>\\n\"+e+\"\\n</blockquote>\",r,t)}),e=t.converter._dispatch(\"blockQuotes.after\",e,r,t)}),s.subParser(\"codeBlocks\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"codeBlocks.before\",e,r,t);return e=(e=(e+=\"¨0\").replace(/(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=¨0))/g,function(e,a,n){var o=a,i=n,l=\"\\n\";return o=s.subParser(\"outdent\")(o,r,t),o=s.subParser(\"encodeCode\")(o,r,t),o=(o=(o=s.subParser(\"detab\")(o,r,t)).replace(/^\\n+/g,\"\")).replace(/\\n+$/g,\"\"),r.omitExtraWLInCodeBlocks&&(l=\"\"),o=\"<pre><code>\"+o+l+\"</code></pre>\",s.subParser(\"hashBlock\")(o,r,t)+i})).replace(/¨0/,\"\"),e=t.converter._dispatch(\"codeBlocks.after\",e,r,t)}),s.subParser(\"codeSpans\",function(e,r,t){\"use strict\";return void 0===(e=t.converter._dispatch(\"codeSpans.before\",e,r,t))&&(e=\"\"),e=e.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,function(e,a,n,o){var i=o;return i=(i=i.replace(/^([ \\t]*)/g,\"\")).replace(/[ \\t]*$/g,\"\"),i=a+\"<code>\"+(i=s.subParser(\"encodeCode\")(i,r,t))+\"</code>\",i=s.subParser(\"hashHTMLSpans\")(i,r,t)}),e=t.converter._dispatch(\"codeSpans.after\",e,r,t)}),s.subParser(\"completeHTMLDocument\",function(e,r,t){\"use strict\";if(!r.completeHTMLDocument)return e;e=t.converter._dispatch(\"completeHTMLDocument.before\",e,r,t);var a=\"html\",n=\"<!DOCTYPE HTML>\\n\",s=\"\",o='<meta charset=\"utf-8\">\\n',i=\"\",l=\"\";for(var c in void 0!==t.metadata.parsed.doctype&&(n=\"<!DOCTYPE \"+t.metadata.parsed.doctype+\">\\n\",\"html\"!==(a=t.metadata.parsed.doctype.toString().toLowerCase())&&\"html5\"!==a||(o='<meta charset=\"utf-8\">')),t.metadata.parsed)if(t.metadata.parsed.hasOwnProperty(c))switch(c.toLowerCase()){case\"doctype\":break;case\"title\":s=\"<title>\"+t.metadata.parsed.title+\"</title>\\n\";break;case\"charset\":o=\"html\"===a||\"html5\"===a?'<meta charset=\"'+t.metadata.parsed.charset+'\">\\n':'<meta name=\"charset\" content=\"'+t.metadata.parsed.charset+'\">\\n';break;case\"language\":case\"lang\":i=' lang=\"'+t.metadata.parsed[c]+'\"',l+='<meta name=\"'+c+'\" content=\"'+t.metadata.parsed[c]+'\">\\n';break;default:l+='<meta name=\"'+c+'\" content=\"'+t.metadata.parsed[c]+'\">\\n'}return e=n+\"<html\"+i+\">\\n<head>\\n\"+s+o+l+\"</head>\\n<body>\\n\"+e.trim()+\"\\n</body>\\n</html>\",e=t.converter._dispatch(\"completeHTMLDocument.after\",e,r,t)}),s.subParser(\"detab\",function(e,r,t){\"use strict\";return e=(e=(e=(e=(e=(e=t.converter._dispatch(\"detab.before\",e,r,t)).replace(/\\t(?=\\t)/g,\"    \")).replace(/\\t/g,\"¨A¨B\")).replace(/¨B(.+?)¨A/g,function(e,r){for(var t=r,a=4-t.length%4,n=0;n<a;n++)t+=\" \";return t})).replace(/¨A/g,\"    \")).replace(/¨B/g,\"\"),e=t.converter._dispatch(\"detab.after\",e,r,t)}),s.subParser(\"ellipsis\",function(e,r,t){\"use strict\";return e=(e=t.converter._dispatch(\"ellipsis.before\",e,r,t)).replace(/\\.\\.\\./g,\"…\"),e=t.converter._dispatch(\"ellipsis.after\",e,r,t)}),s.subParser(\"emoji\",function(e,r,t){\"use strict\";if(!r.emoji)return e;return e=(e=t.converter._dispatch(\"emoji.before\",e,r,t)).replace(/:([\\S]+?):/g,function(e,r){return s.helper.emojis.hasOwnProperty(r)?s.helper.emojis[r]:e}),e=t.converter._dispatch(\"emoji.after\",e,r,t)}),s.subParser(\"encodeAmpsAndAngles\",function(e,r,t){\"use strict\";return e=(e=(e=(e=(e=t.converter._dispatch(\"encodeAmpsAndAngles.before\",e,r,t)).replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g,\"&amp;\")).replace(/<(?![a-z\\/?$!])/gi,\"&lt;\")).replace(/</g,\"&lt;\")).replace(/>/g,\"&gt;\"),e=t.converter._dispatch(\"encodeAmpsAndAngles.after\",e,r,t)}),s.subParser(\"encodeBackslashEscapes\",function(e,r,t){\"use strict\";return e=(e=(e=t.converter._dispatch(\"encodeBackslashEscapes.before\",e,r,t)).replace(/\\\\(\\\\)/g,s.helper.escapeCharactersCallback)).replace(/\\\\([`*_{}\\[\\]()>#+.!~=|-])/g,s.helper.escapeCharactersCallback),e=t.converter._dispatch(\"encodeBackslashEscapes.after\",e,r,t)}),s.subParser(\"encodeCode\",function(e,r,t){\"use strict\";return e=(e=t.converter._dispatch(\"encodeCode.before\",e,r,t)).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/([*_{}\\[\\]\\\\=~-])/g,s.helper.escapeCharactersCallback),e=t.converter._dispatch(\"encodeCode.after\",e,r,t)}),s.subParser(\"escapeSpecialCharsWithinTagAttributes\",function(e,r,t){\"use strict\";return e=(e=(e=t.converter._dispatch(\"escapeSpecialCharsWithinTagAttributes.before\",e,r,t)).replace(/<\\/?[a-z\\d_:-]+(?:[\\s]+[\\s\\S]+?)?>/gi,function(e){return e.replace(/(.)<\\/?code>(?=.)/g,\"$1`\").replace(/([\\\\`*_~=|])/g,s.helper.escapeCharactersCallback)})).replace(/<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi,function(e){return e.replace(/([\\\\`*_~=|])/g,s.helper.escapeCharactersCallback)}),e=t.converter._dispatch(\"escapeSpecialCharsWithinTagAttributes.after\",e,r,t)}),s.subParser(\"githubCodeBlocks\",function(e,r,t){\"use strict\";return r.ghCodeBlocks?(e=t.converter._dispatch(\"githubCodeBlocks.before\",e,r,t),e=(e=(e+=\"¨0\").replace(/(?:^|\\n)(?: {0,3})(```+|~~~+)(?: *)([^\\s`~]*)\\n([\\s\\S]*?)\\n(?: {0,3})\\1/g,function(e,a,n,o){var i=r.omitExtraWLInCodeBlocks?\"\":\"\\n\";return o=s.subParser(\"encodeCode\")(o,r,t),o=(o=(o=s.subParser(\"detab\")(o,r,t)).replace(/^\\n+/g,\"\")).replace(/\\n+$/g,\"\"),o=\"<pre><code\"+(n?' class=\"'+n+\" language-\"+n+'\"':\"\")+\">\"+o+i+\"</code></pre>\",o=s.subParser(\"hashBlock\")(o,r,t),\"\\n\\n¨G\"+(t.ghCodeBlocks.push({text:e,codeblock:o})-1)+\"G\\n\\n\"})).replace(/¨0/,\"\"),t.converter._dispatch(\"githubCodeBlocks.after\",e,r,t)):e}),s.subParser(\"hashBlock\",function(e,r,t){\"use strict\";return e=(e=t.converter._dispatch(\"hashBlock.before\",e,r,t)).replace(/(^\\n+|\\n+$)/g,\"\"),e=\"\\n\\n¨K\"+(t.gHtmlBlocks.push(e)-1)+\"K\\n\\n\",e=t.converter._dispatch(\"hashBlock.after\",e,r,t)}),s.subParser(\"hashCodeTags\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"hashCodeTags.before\",e,r,t);return e=s.helper.replaceRecursiveRegExp(e,function(e,a,n,o){var i=n+s.subParser(\"encodeCode\")(a,r,t)+o;return\"¨C\"+(t.gHtmlSpans.push(i)-1)+\"C\"},\"<code\\\\b[^>]*>\",\"</code>\",\"gim\"),e=t.converter._dispatch(\"hashCodeTags.after\",e,r,t)}),s.subParser(\"hashElement\",function(e,r,t){\"use strict\";return function(e,r){var a=r;return a=(a=(a=a.replace(/\\n\\n/g,\"\\n\")).replace(/^\\n/,\"\")).replace(/\\n+$/g,\"\"),a=\"\\n\\n¨K\"+(t.gHtmlBlocks.push(a)-1)+\"K\\n\\n\"}}),s.subParser(\"hashHTMLBlocks\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"hashHTMLBlocks.before\",e,r,t);var a=[\"pre\",\"div\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"blockquote\",\"table\",\"dl\",\"ol\",\"ul\",\"script\",\"noscript\",\"form\",\"fieldset\",\"iframe\",\"math\",\"style\",\"section\",\"header\",\"footer\",\"nav\",\"article\",\"aside\",\"address\",\"audio\",\"canvas\",\"figure\",\"hgroup\",\"output\",\"video\",\"p\"],n=function(e,r,a,n){var s=e;return-1!==a.search(/\\bmarkdown\\b/)&&(s=a+t.converter.makeHtml(r)+n),\"\\n\\n¨K\"+(t.gHtmlBlocks.push(s)-1)+\"K\\n\\n\"};r.backslashEscapesHTMLTags&&(e=e.replace(/\\\\<(\\/?[^>]+?)>/g,function(e,r){return\"&lt;\"+r+\"&gt;\"}));for(var o=0;o<a.length;++o)for(var i,l=new RegExp(\"^ {0,3}(<\"+a[o]+\"\\\\b[^>]*>)\",\"im\"),c=\"<\"+a[o]+\"\\\\b[^>]*>\",u=\"</\"+a[o]+\">\";-1!==(i=s.helper.regexIndexOf(e,l));){var p=s.helper.splitAtIndex(e,i),d=s.helper.replaceRecursiveRegExp(p[1],n,c,u,\"im\");if(d===p[1])break;e=p[0].concat(d)}return e=e.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,s.subParser(\"hashElement\")(e,r,t)),e=(e=s.helper.replaceRecursiveRegExp(e,function(e){return\"\\n\\n¨K\"+(t.gHtmlBlocks.push(e)-1)+\"K\\n\\n\"},\"^ {0,3}\\x3c!--\",\"--\\x3e\",\"gm\")).replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,s.subParser(\"hashElement\")(e,r,t)),e=t.converter._dispatch(\"hashHTMLBlocks.after\",e,r,t)}),s.subParser(\"hashHTMLSpans\",function(e,r,t){\"use strict\";function a(e){return\"¨C\"+(t.gHtmlSpans.push(e)-1)+\"C\"}return e=(e=(e=(e=(e=t.converter._dispatch(\"hashHTMLSpans.before\",e,r,t)).replace(/<[^>]+?\\/>/gi,function(e){return a(e)})).replace(/<([^>]+?)>[\\s\\S]*?<\\/\\1>/g,function(e){return a(e)})).replace(/<([^>]+?)\\s[^>]+?>[\\s\\S]*?<\\/\\1>/g,function(e){return a(e)})).replace(/<[^>]+?>/gi,function(e){return a(e)}),e=t.converter._dispatch(\"hashHTMLSpans.after\",e,r,t)}),s.subParser(\"unhashHTMLSpans\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"unhashHTMLSpans.before\",e,r,t);for(var a=0;a<t.gHtmlSpans.length;++a){for(var n=t.gHtmlSpans[a],s=0;/¨C(\\d+)C/.test(n);){var o=RegExp.$1;if(n=n.replace(\"¨C\"+o+\"C\",t.gHtmlSpans[o]),10===s)break;++s}e=e.replace(\"¨C\"+a+\"C\",n)}return e=t.converter._dispatch(\"unhashHTMLSpans.after\",e,r,t)}),s.subParser(\"hashPreCodeTags\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"hashPreCodeTags.before\",e,r,t);return e=s.helper.replaceRecursiveRegExp(e,function(e,a,n,o){var i=n+s.subParser(\"encodeCode\")(a,r,t)+o;return\"\\n\\n¨G\"+(t.ghCodeBlocks.push({text:e,codeblock:i})-1)+\"G\\n\\n\"},\"^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>\",\"^ {0,3}</code>\\\\s*</pre>\",\"gim\"),e=t.converter._dispatch(\"hashPreCodeTags.after\",e,r,t)}),s.subParser(\"headers\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"headers.before\",e,r,t);var a=isNaN(parseInt(r.headerLevelStart))?1:parseInt(r.headerLevelStart),n=r.smoothLivePreview?/^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm:/^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,o=r.smoothLivePreview?/^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm:/^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;e=(e=e.replace(n,function(e,n){var o=s.subParser(\"spanGamut\")(n,r,t),i=r.noHeaderId?\"\":' id=\"'+l(n)+'\"',c=\"<h\"+a+i+\">\"+o+\"</h\"+a+\">\";return s.subParser(\"hashBlock\")(c,r,t)})).replace(o,function(e,n){var o=s.subParser(\"spanGamut\")(n,r,t),i=r.noHeaderId?\"\":' id=\"'+l(n)+'\"',c=a+1,u=\"<h\"+c+i+\">\"+o+\"</h\"+c+\">\";return s.subParser(\"hashBlock\")(u,r,t)});var i=r.requireSpaceBeforeHeadingText?/^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm:/^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;function l(e){var a,n;if(r.customizedHeaderId){var o=e.match(/\\{([^{]+?)}\\s*$/);o&&o[1]&&(e=o[1])}return a=e,n=s.helper.isString(r.prefixHeaderId)?r.prefixHeaderId:!0===r.prefixHeaderId?\"section-\":\"\",r.rawPrefixHeaderId||(a=n+a),a=r.ghCompatibleHeaderId?a.replace(/ /g,\"-\").replace(/&amp;/g,\"\").replace(/¨T/g,\"\").replace(/¨D/g,\"\").replace(/[&+$,\\/:;=?@\"#{}|^¨~\\[\\]`\\\\*)(%.!'<>]/g,\"\").toLowerCase():r.rawHeaderId?a.replace(/ /g,\"-\").replace(/&amp;/g,\"&\").replace(/¨T/g,\"¨\").replace(/¨D/g,\"$\").replace(/[\"']/g,\"-\").toLowerCase():a.replace(/[^\\w]/g,\"\").toLowerCase(),r.rawPrefixHeaderId&&(a=n+a),t.hashLinkCounts[a]?a=a+\"-\"+t.hashLinkCounts[a]++:t.hashLinkCounts[a]=1,a}return e=e.replace(i,function(e,n,o){var i=o;r.customizedHeaderId&&(i=o.replace(/\\s?\\{([^{]+?)}\\s*$/,\"\"));var c=s.subParser(\"spanGamut\")(i,r,t),u=r.noHeaderId?\"\":' id=\"'+l(o)+'\"',p=a-1+n.length,d=\"<h\"+p+u+\">\"+c+\"</h\"+p+\">\";return s.subParser(\"hashBlock\")(d,r,t)}),e=t.converter._dispatch(\"headers.after\",e,r,t)}),s.subParser(\"horizontalRule\",function(e,r,t){\"use strict\";e=t.converter._dispatch(\"horizontalRule.before\",e,r,t);var a=s.subParser(\"hashBlock\")(\"<hr />\",r,t);return e=(e=(e=e.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm,a)).replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm,a)).replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm,a),e=t.converter._dispatch(\"horizontalRule.after\",e,r,t)}),s.subParser(\"images\",function(e,r,t){\"use strict\";function a(e,r,a,n,o,i,l,c){var u=t.gUrls,p=t.gTitles,d=t.gDimensions;if(a=a.toLowerCase(),c||(c=\"\"),e.search(/\\(<?\\s*>? ?(['\"].*['\"])?\\)$/m)>-1)n=\"\";else if(\"\"===n||null===n){if(\"\"!==a&&null!==a||(a=r.toLowerCase().replace(/ ?\\n/g,\" \")),n=\"#\"+a,s.helper.isUndefined(u[a]))return e;n=u[a],s.helper.isUndefined(p[a])||(c=p[a]),s.helper.isUndefined(d[a])||(o=d[a].width,i=d[a].height)}r=r.replace(/\"/g,\"&quot;\").replace(s.helper.regexes.asteriskDashAndColon,s.helper.escapeCharactersCallback);var h='<img src=\"'+(n=n.replace(s.helper.regexes.asteriskDashAndColon,s.helper.escapeCharactersCallback))+'\" alt=\"'+r+'\"';return c&&s.helper.isString(c)&&(h+=' title=\"'+(c=c.replace(/\"/g,\"&quot;\").replace(s.helper.regexes.asteriskDashAndColon,s.helper.escapeCharactersCallback))+'\"'),o&&i&&(h+=' width=\"'+(o=\"*\"===o?\"auto\":o)+'\"',h+=' height=\"'+(i=\"*\"===i?\"auto\":i)+'\"'),h+=\" />\"}return e=(e=(e=(e=(e=(e=t.converter._dispatch(\"images.before\",e,r,t)).replace(/!\\[([^\\]]*?)] ?(?:\\n *)?\\[([\\s\\S]*?)]()()()()()/g,a)).replace(/!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,function(e,r,t,n,s,o,i,l){return a(e,r,t,n=n.replace(/\\s/g,\"\"),s,o,0,l)})).replace(/!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<([^>]*)>(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(?:([\"'])([^\"]*?)\\6))?[ \\t]?\\)/g,a)).replace(/!\\[([^\\]]*?)][ \\t]*()\\([ \\t]?<?([\\S]+?(?:\\([\\S]*?\\)[\\S]*?)?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:([\"'])([^\"]*?)\\6)?[ \\t]?\\)/g,a)).replace(/!\\[([^\\[\\]]+)]()()()()()/g,a),e=t.converter._dispatch(\"images.after\",e,r,t)}),s.subParser(\"italicsAndBold\",function(e,r,t){\"use strict\";function a(e,r,t){return r+e+t}return e=t.converter._dispatch(\"italicsAndBold.before\",e,r,t),e=r.literalMidWordUnderscores?(e=(e=e.replace(/\\b___(\\S[\\s\\S]*)___\\b/g,function(e,r){return a(r,\"<strong><em>\",\"</em></strong>\")})).replace(/\\b__(\\S[\\s\\S]*)__\\b/g,function(e,r){return a(r,\"<strong>\",\"</strong>\")})).replace(/\\b_(\\S[\\s\\S]*?)_\\b/g,function(e,r){return a(r,\"<em>\",\"</em>\")}):(e=(e=e.replace(/___(\\S[\\s\\S]*?)___/g,function(e,r){return/\\S$/.test(r)?a(r,\"<strong><em>\",\"</em></strong>\"):e})).replace(/__(\\S[\\s\\S]*?)__/g,function(e,r){return/\\S$/.test(r)?a(r,\"<strong>\",\"</strong>\"):e})).replace(/_([^\\s_][\\s\\S]*?)_/g,function(e,r){return/\\S$/.test(r)?a(r,\"<em>\",\"</em>\"):e}),e=r.literalMidWordAsterisks?(e=(e=e.replace(/([^*]|^)\\B\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*\\B(?!\\*)/g,function(e,r,t){return a(t,r+\"<strong><em>\",\"</em></strong>\")})).replace(/([^*]|^)\\B\\*\\*(\\S[\\s\\S]*?)\\*\\*\\B(?!\\*)/g,function(e,r,t){return a(t,r+\"<strong>\",\"</strong>\")})).replace(/([^*]|^)\\B\\*(\\S[\\s\\S]*?)\\*\\B(?!\\*)/g,function(e,r,t){return a(t,r+\"<em>\",\"</em>\")}):(e=(e=e.replace(/\\*\\*\\*(\\S[\\s\\S]*?)\\*\\*\\*/g,function(e,r){return/\\S$/.test(r)?a(r,\"<strong><em>\",\"</em></strong>\"):e})).replace(/\\*\\*(\\S[\\s\\S]*?)\\*\\*/g,function(e,r){return/\\S$/.test(r)?a(r,\"<strong>\",\"</strong>\"):e})).replace(/\\*([^\\s*][\\s\\S]*?)\\*/g,function(e,r){return/\\S$/.test(r)?a(r,\"<em>\",\"</em>\"):e}),e=t.converter._dispatch(\"italicsAndBold.after\",e,r,t)}),s.subParser(\"lists\",function(e,r,t){\"use strict\";function a(e,a){t.gListLevel++,e=e.replace(/\\n{2,}$/,\"\\n\");var n=/(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,o=/\\n[ \\t]*\\n(?!¨0)/.test(e+=\"¨0\");return r.disableForced4SpacesIndentedSublists&&(n=/(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(¨0|\\2([*+-]|\\d+[.])[ \\t]+))/gm),e=(e=e.replace(n,function(e,a,n,i,l,c,u){u=u&&\"\"!==u.trim();var p=s.subParser(\"outdent\")(l,r,t),d=\"\";return c&&r.tasklists&&(d=' class=\"task-list-item\" style=\"list-style-type: none;\"',p=p.replace(/^[ \\t]*\\[(x|X| )?]/m,function(){var e='<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';return u&&(e+=\" checked\"),e+=\">\"})),p=p.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g,function(e){return\"¨A\"+e}),a||p.search(/\\n{2,}/)>-1?(p=s.subParser(\"githubCodeBlocks\")(p,r,t),p=s.subParser(\"blockGamut\")(p,r,t)):(p=(p=s.subParser(\"lists\")(p,r,t)).replace(/\\n$/,\"\"),p=(p=s.subParser(\"hashHTMLBlocks\")(p,r,t)).replace(/\\n\\n+/g,\"\\n\\n\"),p=o?s.subParser(\"paragraphs\")(p,r,t):s.subParser(\"spanGamut\")(p,r,t)),p=\"<li\"+d+\">\"+(p=p.replace(\"¨A\",\"\"))+\"</li>\\n\"})).replace(/¨0/g,\"\"),t.gListLevel--,a&&(e=e.replace(/\\s+$/,\"\")),e}function n(e,r){if(\"ol\"===r){var t=e.match(/^ *(\\d+)\\./);if(t&&\"1\"!==t[1])return' start=\"'+t[1]+'\"'}return\"\"}function o(e,t,s){var o=r.disableForced4SpacesIndentedSublists?/^ ?\\d+\\.[ \\t]/gm:/^ {0,3}\\d+\\.[ \\t]/gm,i=r.disableForced4SpacesIndentedSublists?/^ ?[*+-][ \\t]/gm:/^ {0,3}[*+-][ \\t]/gm,l=\"ul\"===t?o:i,c=\"\";if(-1!==e.search(l))!function r(u){var p=u.search(l),d=n(e,t);-1!==p?(c+=\"\\n\\n<\"+t+d+\">\\n\"+a(u.slice(0,p),!!s)+\"</\"+t+\">\\n\",l=\"ul\"===(t=\"ul\"===t?\"ol\":\"ul\")?o:i,r(u.slice(p))):c+=\"\\n\\n<\"+t+d+\">\\n\"+a(u,!!s)+\"</\"+t+\">\\n\"}(e);else{var u=n(e,t);c=\"\\n\\n<\"+t+u+\">\\n\"+a(e,!!s)+\"</\"+t+\">\\n\"}return c}return e=t.converter._dispatch(\"lists.before\",e,r,t),e+=\"¨0\",e=(e=t.gListLevel?e.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,function(e,r,t){return o(r,t.search(/[*+-]/g)>-1?\"ul\":\"ol\",!0)}):e.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(¨0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,function(e,r,t,a){return o(t,a.search(/[*+-]/g)>-1?\"ul\":\"ol\",!1)})).replace(/¨0/,\"\"),e=t.converter._dispatch(\"lists.after\",e,r,t)}),s.subParser(\"metadata\",function(e,r,t){\"use strict\";if(!r.metadata)return e;function a(e){t.metadata.raw=e,(e=(e=e.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\")).replace(/\\n {4}/g,\" \")).replace(/^([\\S ]+): +([\\s\\S]+?)$/gm,function(e,r,a){return t.metadata.parsed[r]=a,\"\"})}return e=(e=(e=(e=t.converter._dispatch(\"metadata.before\",e,r,t)).replace(/^\\s*«««+(\\S*?)\\n([\\s\\S]+?)\\n»»»+\\n/,function(e,r,t){return a(t),\"¨M\"})).replace(/^\\s*---+(\\S*?)\\n([\\s\\S]+?)\\n---+\\n/,function(e,r,n){return r&&(t.metadata.format=r),a(n),\"¨M\"})).replace(/¨M/g,\"\"),e=t.converter._dispatch(\"metadata.after\",e,r,t)}),s.subParser(\"outdent\",function(e,r,t){\"use strict\";return e=(e=(e=t.converter._dispatch(\"outdent.before\",e,r,t)).replace(/^(\\t|[ ]{1,4})/gm,\"¨0\")).replace(/¨0/g,\"\"),e=t.converter._dispatch(\"outdent.after\",e,r,t)}),s.subParser(\"paragraphs\",function(e,r,t){\"use strict\";for(var a=(e=(e=(e=t.converter._dispatch(\"paragraphs.before\",e,r,t)).replace(/^\\n+/g,\"\")).replace(/\\n+$/g,\"\")).split(/\\n{2,}/g),n=[],o=a.length,i=0;i<o;i++){var l=a[i];l.search(/¨(K|G)(\\d+)\\1/g)>=0?n.push(l):l.search(/\\S/)>=0&&(l=(l=s.subParser(\"spanGamut\")(l,r,t)).replace(/^([ \\t]*)/g,\"<p>\"),l+=\"</p>\",n.push(l))}for(o=n.length,i=0;i<o;i++){for(var c=\"\",u=n[i],p=!1;/¨(K|G)(\\d+)\\1/.test(u);){var d=RegExp.$1,h=RegExp.$2;c=(c=\"K\"===d?t.gHtmlBlocks[h]:p?s.subParser(\"encodeCode\")(t.ghCodeBlocks[h].text,r,t):t.ghCodeBlocks[h].codeblock).replace(/\\$/g,\"$$$$\"),u=u.replace(/(\\n\\n)?¨(K|G)\\d+\\2(\\n\\n)?/,c),/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(u)&&(p=!0)}n[i]=u}return e=(e=(e=n.join(\"\\n\")).replace(/^\\n+/g,\"\")).replace(/\\n+$/g,\"\"),t.converter._dispatch(\"paragraphs.after\",e,r,t)}),s.subParser(\"runExtension\",function(e,r,t,a){\"use strict\";if(e.filter)r=e.filter(r,a.converter,t);else if(e.regex){var n=e.regex;n instanceof RegExp||(n=new RegExp(n,\"g\")),r=r.replace(n,e.replace)}return r}),s.subParser(\"spanGamut\",function(e,r,t){\"use strict\";return e=t.converter._dispatch(\"spanGamut.before\",e,r,t),e=s.subParser(\"codeSpans\")(e,r,t),e=s.subParser(\"escapeSpecialCharsWithinTagAttributes\")(e,r,t),e=s.subParser(\"encodeBackslashEscapes\")(e,r,t),e=s.subParser(\"images\")(e,r,t),e=s.subParser(\"anchors\")(e,r,t),e=s.subParser(\"autoLinks\")(e,r,t),e=s.subParser(\"simplifiedAutoLinks\")(e,r,t),e=s.subParser(\"emoji\")(e,r,t),e=s.subParser(\"underline\")(e,r,t),e=s.subParser(\"italicsAndBold\")(e,r,t),e=s.subParser(\"strikethrough\")(e,r,t),e=s.subParser(\"ellipsis\")(e,r,t),e=s.subParser(\"hashHTMLSpans\")(e,r,t),e=s.subParser(\"encodeAmpsAndAngles\")(e,r,t),r.simpleLineBreaks?/\\n\\n¨K/.test(e)||(e=e.replace(/\\n+/g,\"<br />\\n\")):e=e.replace(/  +\\n/g,\"<br />\\n\"),e=t.converter._dispatch(\"spanGamut.after\",e,r,t)}),s.subParser(\"strikethrough\",function(e,r,t){\"use strict\";return r.strikethrough&&(e=(e=t.converter._dispatch(\"strikethrough.before\",e,r,t)).replace(/(?:~){2}([\\s\\S]+?)(?:~){2}/g,function(e,a){return function(e){return r.simplifiedAutoLink&&(e=s.subParser(\"simplifiedAutoLinks\")(e,r,t)),\"<del>\"+e+\"</del>\"}(a)}),e=t.converter._dispatch(\"strikethrough.after\",e,r,t)),e}),s.subParser(\"stripLinkDefinitions\",function(e,r,t){\"use strict\";var a=function(e,a,n,o,i,l,c){return a=a.toLowerCase(),n.match(/^data:.+?\\/.+?;base64,/)?t.gUrls[a]=n.replace(/\\s/g,\"\"):t.gUrls[a]=s.subParser(\"encodeAmpsAndAngles\")(n,r,t),l?l+c:(c&&(t.gTitles[a]=c.replace(/\"|'/g,\"&quot;\")),r.parseImgDimensions&&o&&i&&(t.gDimensions[a]={width:o,height:i}),\"\")};return e=(e=(e=(e+=\"¨0\").replace(/^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(data:.+?\\/.+?;base64,[A-Za-z0-9+/=\\n]+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n\\n|(?=¨0)|(?=\\n\\[))/gm,a)).replace(/^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?([^>\\s]+)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=¨0))/gm,a)).replace(/¨0/,\"\")}),s.subParser(\"tables\",function(e,r,t){\"use strict\";if(!r.tables)return e;function a(e,a){return\"<td\"+a+\">\"+s.subParser(\"spanGamut\")(e,r,t)+\"</td>\\n\"}function n(e){var n,o=e.split(\"\\n\");for(n=0;n<o.length;++n)/^ {0,3}\\|/.test(o[n])&&(o[n]=o[n].replace(/^ {0,3}\\|/,\"\")),/\\|[ \\t]*$/.test(o[n])&&(o[n]=o[n].replace(/\\|[ \\t]*$/,\"\")),o[n]=s.subParser(\"codeSpans\")(o[n],r,t);var i,l,c,u,p=o[0].split(\"|\").map(function(e){return e.trim()}),d=o[1].split(\"|\").map(function(e){return e.trim()}),h=[],_=[],g=[],m=[];for(o.shift(),o.shift(),n=0;n<o.length;++n)\"\"!==o[n].trim()&&h.push(o[n].split(\"|\").map(function(e){return e.trim()}));if(p.length<d.length)return e;for(n=0;n<d.length;++n)g.push((i=d[n],/^:[ \\t]*--*$/.test(i)?' style=\"text-align:left;\"':/^--*[ \\t]*:[ \\t]*$/.test(i)?' style=\"text-align:right;\"':/^:[ \\t]*--*[ \\t]*:$/.test(i)?' style=\"text-align:center;\"':\"\"));for(n=0;n<p.length;++n)s.helper.isUndefined(g[n])&&(g[n]=\"\"),_.push((l=p[n],c=g[n],u=void 0,u=\"\",l=l.trim(),(r.tablesHeaderId||r.tableHeaderId)&&(u=' id=\"'+l.replace(/ /g,\"_\").toLowerCase()+'\"'),\"<th\"+u+c+\">\"+(l=s.subParser(\"spanGamut\")(l,r,t))+\"</th>\\n\"));for(n=0;n<h.length;++n){for(var f=[],b=0;b<_.length;++b)s.helper.isUndefined(h[n][b]),f.push(a(h[n][b],g[b]));m.push(f)}return function(e,r){for(var t=\"<table>\\n<thead>\\n<tr>\\n\",a=e.length,n=0;n<a;++n)t+=e[n];for(t+=\"</tr>\\n</thead>\\n<tbody>\\n\",n=0;n<r.length;++n){t+=\"<tr>\\n\";for(var s=0;s<a;++s)t+=r[n][s];t+=\"</tr>\\n\"}return t+=\"</tbody>\\n</table>\\n\"}(_,m)}return e=(e=(e=(e=t.converter._dispatch(\"tables.before\",e,r,t)).replace(/\\\\(\\|)/g,s.helper.escapeCharactersCallback)).replace(/^ {0,3}\\|?.+\\|.+\\n {0,3}\\|?[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[\\s\\S]+?(?:\\n\\n|¨0)/gm,n)).replace(/^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|¨0)/gm,n),e=t.converter._dispatch(\"tables.after\",e,r,t)}),s.subParser(\"underline\",function(e,r,t){\"use strict\";return r.underline?(e=t.converter._dispatch(\"underline.before\",e,r,t),e=(e=r.literalMidWordUnderscores?e.replace(/\\b_?__(\\S[\\s\\S]*)___?\\b/g,function(e,r){return\"<u>\"+r+\"</u>\"}):e.replace(/_?__(\\S[\\s\\S]*?)___?/g,function(e,r){return/\\S$/.test(r)?\"<u>\"+r+\"</u>\":e})).replace(/(_)/g,s.helper.escapeCharactersCallback),e=t.converter._dispatch(\"underline.after\",e,r,t)):e}),s.subParser(\"unescapeSpecialChars\",function(e,r,t){\"use strict\";return e=(e=t.converter._dispatch(\"unescapeSpecialChars.before\",e,r,t)).replace(/¨E(\\d+)E/g,function(e,r){var t=parseInt(r);return String.fromCharCode(t)}),e=t.converter._dispatch(\"unescapeSpecialChars.after\",e,r,t)});void 0===(a=function(){\"use strict\";return s}.call(r,t,r,e))||(e.exports=a)}).call(this)}}]);","extractedComments":[]}